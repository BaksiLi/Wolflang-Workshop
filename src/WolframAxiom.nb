(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    713789,      16379]
NotebookOptionsPosition[    712759,      16351]
NotebookOutlinePosition[    713114,      16367]
CellTagsIndexPosition[    713071,      16364]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Wolfram Axiom of Boolean Algebra", "Title",
 CellChangeTimes->{{3.766509197990637*^9, 3.766509212374713*^9}, 
   3.766509303605867*^9},ExpressionUUID->"1b3a1763-6e8c-4503-9537-\
afddfe18113c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEquationalProof", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
    RowBox[{"f", "[", 
     RowBox[{"b", ",", "a"}], "]"}]}], ",", 
   RowBox[{"ForAll", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "q", ",", "r"}], "}"}], ",", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{"p", ",", 
          RowBox[{"f", "[", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"p", ",", "r"}], "]"}], ",", "p"}], "]"}]}], "]"}]}], 
       "]"}], "\[Equal]", "r"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.766509218613245*^9, 3.766509226611211*^9}, {
  3.766509444400549*^9, 3.766509497935598*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e83886df-07bf-46e8-9095-5607133b4e31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ProofObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
              1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 0.}}, {{
                GrayLevel[0.55], 
                LineBox[{1, 6}], 
                LineBox[{2, 5}], 
                LineBox[{3, 5}], 
                LineBox[{4, 10}], 
                LineBox[{5, 6}], 
                LineBox[{6, 7}], 
                LineBox[{6, 8}], 
                LineBox[{7, 9}], 
                LineBox[{8, 9}], 
                LineBox[{9, 10}], 
                LineBox[{3, 7}]}, {
                PointBox[1], 
                PointBox[2], 
                PointBox[3], 
                PointBox[4], 
                PointBox[5], 
                PointBox[6], 
                PointBox[7], 
                PointBox[8], 
                PointBox[9], 
                PointBox[10]}}], FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["102", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{"b", ",", "a"}], "]"}]}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[
             
             GraphicsComplexBox[{{0., 4.}, {1., 5.}, {-1., 5.}, {-2., 1.}, {
              1., 4.}, {0., 3.}, {-1., 2.}, {0., 2.}, {-1., 1.}, {-1., 0.}}, {{
                GrayLevel[0.55], 
                LineBox[{1, 6}], 
                LineBox[{2, 5}], 
                LineBox[{3, 5}], 
                LineBox[{4, 10}], 
                LineBox[{5, 6}], 
                LineBox[{6, 7}], 
                LineBox[{6, 8}], 
                LineBox[{7, 9}], 
                LineBox[{8, 9}], 
                LineBox[{9, 10}], 
                LineBox[{3, 7}]}, {
                PointBox[1], 
                PointBox[2], 
                PointBox[3], 
                PointBox[4], 
                PointBox[5], 
                PointBox[6], 
                PointBox[7], 
                PointBox[8], 
                PointBox[9], 
                PointBox[10]}}], FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], PlotRange -> All, PlotRangeClipping -> True, 
             PlotRangePadding -> Scaled[0.1], Background -> GrayLevel[0.93], 
             Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], Frame -> True, 
             FrameTicks -> None, FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Logic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"EquationalLogic\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Steps: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["102", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Theorem: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{"b", ",", "a"}], "]"}]}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Axioms: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{
                    SubscriptBox["\[ForAll]", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "q", ",", "r"}], "}"}]], 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "q"}], "]"}], ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "r"}], "]"}], ",", "p"}], "]"}]}], 
                    "]"}]}], "]"}], "\[Equal]", "r"}]}], Short[#, 1]& ], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ProofObject[
  "EquationalLogic", $CellContext`f[$CellContext`a, $CellContext`b] == \
$CellContext`f[$CellContext`b, $CellContext`a], 
   ForAll[{$CellContext`p, $CellContext`q, $CellContext`r}, $CellContext`f[
      $CellContext`f[
       $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
      $CellContext`f[$CellContext`p, 
       $CellContext`f[
        $CellContext`f[$CellContext`p, $CellContext`r], $CellContext`p]]] == \
$CellContext`r], {{"Axiom", 1} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`p], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]], 
      "Proof" -> Association[]], {"Hypothesis", 1} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`a, $CellContext`b] == \
$CellContext`f[$CellContext`b, $CellContext`a], "Proof" -> Association[]], {
     "CriticalPairLemma", 1} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`r], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`r], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
           $CellContext`f[$CellContext`p, $CellContext`r]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 2} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`q, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`y1], $CellContext`q], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`y1], \
$CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`y1], \
$CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 3} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]], $CellContext`r], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], \
$CellContext`p]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 4} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`q]], \
$CellContext`p], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`y1], \
$CellContext`r], 
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]]], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`y1], $CellContext`r], 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]]]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 2}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`y1, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`r, 
                 Blank[]], 
                Pattern[$CellContext`y1, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`y1, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`y1, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 1} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`q]], \
$CellContext`p], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`y1], $CellContext`r], 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]]]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 4}, "Position" -> {2, 1, 1, 2, 1, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]], $CellContext`p], 
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`y1], \
$CellContext`r], 
              $CellContext`f[$CellContext`q, 
               $CellContext`f[
                $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]]]]]]]], {"SubstitutionLemma", 2} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`q]], \
$CellContext`p], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 1}, "Position" -> {2, 1, 1, 2, 1, 2}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]], $CellContext`p], 
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]]], {"CriticalPairLemma", 5} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`q, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`q], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[$CellContext`y1, $CellContext`y2], \
$CellContext`r], 
              $CellContext`f[$CellContext`y1, 
               $CellContext`f[
                $CellContext`f[$CellContext`y1, $CellContext`r], \
$CellContext`y1]]], $CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`y1, $CellContext`y2], \
$CellContext`r], 
             $CellContext`f[$CellContext`y1, 
              $CellContext`f[
               $CellContext`f[$CellContext`y1, $CellContext`r], \
$CellContext`y1]]], $CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 2}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`y1, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`r, 
                 Blank[]], 
                Pattern[$CellContext`y1, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`y1, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`y1, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 3} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`q, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`q], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`y1, $CellContext`y2], \
$CellContext`r], 
             $CellContext`f[$CellContext`y1, 
              $CellContext`f[
               $CellContext`f[$CellContext`y1, $CellContext`r], \
$CellContext`y1]]], $CellContext`q]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 5}, "Position" -> {2, 2, 1, 1}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`q], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`q], $CellContext`p], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                $CellContext`f[$CellContext`y1, $CellContext`y2], \
$CellContext`r], 
               $CellContext`f[$CellContext`y1, 
                $CellContext`f[
                 $CellContext`f[$CellContext`y1, $CellContext`r], \
$CellContext`y1]]], $CellContext`q]]]]]], {"SubstitutionLemma", 4} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`q, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`q], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`r, $CellContext`q]]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 3}, "Position" -> {2, 2, 1, 1}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`q], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`q], $CellContext`p], 
             $CellContext`f[$CellContext`r, $CellContext`q]]]]]], {
     "CriticalPairLemma", 6} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]], $CellContext`r], $CellContext`p], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]]], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 2}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 7} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]], \

          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`r, 
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 8} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`r], $CellContext`q], 
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`r], \
$CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 4}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 9} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], $CellContext`q], 
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, 
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], $CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 4}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 10} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == \
$CellContext`f[$CellContext`r, 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`r], 
              $CellContext`f[$CellContext`p, $CellContext`q]]]], \
$CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 11} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`y1], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], \

            $CellContext`f[$CellContext`p, $CellContext`q]]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], 
          $CellContext`f[$CellContext`r, 
           $CellContext`f[$CellContext`q, $CellContext`r]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 12} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], \

            $CellContext`f[$CellContext`p, $CellContext`q]]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], 
          $CellContext`f[$CellContext`r, 
           $CellContext`f[$CellContext`q, $CellContext`r]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 4}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 4}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 13} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], $CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 14} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], \
$CellContext`q] == $CellContext`f[$CellContext`q, 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]], $CellContext`q]], $CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 6}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 3}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`q, 
             Blank[]]]] -> $CellContext`q), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 15} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], $CellContext`p], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`r, 
              $CellContext`f[
               $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], $CellContext`p], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
           $CellContext`f[
            $CellContext`f[$CellContext`r, 
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]], $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 6}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 16} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], $CellContext`p], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"Axiom", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 17} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r]]] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`r], $CellContext`p]], 
         $CellContext`f[$CellContext`r, 
          $CellContext`f[
           $CellContext`f[$CellContext`r, 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`r], 
             $CellContext`f[$CellContext`r, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`r]]]], $CellContext`r]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 8}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 18} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
      "Proof" -> Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 16}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 19} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], \

          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`p], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 2}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 16}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 20} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 16}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"SubstitutionLemma", 5} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 20}, "Position" -> {2, 1, 2}, 
        "Construct" -> {"CriticalPairLemma", 16}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]]]], {"CriticalPairLemma", 21} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`q], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 18}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 22} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 4}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 18}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 6} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 22}, "Position" -> {2, 1}, 
        "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]]]], {"CriticalPairLemma", 23} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]], $CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 10}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`r, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               $CellContext`f[
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`r, 
                   Blank[]], 
                  Pattern[$CellContext`q, 
                   Blank[]]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                $CellContext`f[
                 Pattern[$CellContext`r, 
                  Blank[]], 
                 Pattern[$CellContext`q, 
                  Blank[]]]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`q], $CellContext`p], \

            $CellContext`f[$CellContext`r, $CellContext`q]]]), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`q, 
           Blank[]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`r, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 1}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]]], 
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 24} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[$CellContext`p, 
               $CellContext`f[
                $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], $CellContext`p]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 5}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"SubstitutionLemma", 7} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 24}, "Position" -> {2, 1}, 
        "Construct" -> {"SubstitutionLemma", 6}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]]]], {"SubstitutionLemma", 8} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
          $CellContext`f[$CellContext`p, $CellContext`p]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 7}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 23}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
            $CellContext`f[$CellContext`p, $CellContext`q]]]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
            $CellContext`f[$CellContext`p, $CellContext`p]]]]], {
     "CriticalPairLemma", 25} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 19}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`q), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 18}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 26} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]], $CellContext`p], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]], $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`r, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`q, 
                   Blank[]], 
                  Pattern[$CellContext`r, 
                   Blank[]]], 
                 Pattern[$CellContext`q, 
                  Blank[]]]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`r, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`r, 
                 Blank[]]]]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`r, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]], 
              Pattern[$CellContext`r, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]]]], "MatchingConstruct" -> {"SubstitutionLemma", 2}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`r), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 27} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], \
$CellContext`q], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]], $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 17}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`r, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`p, 
                   Blank[]], 
                  Pattern[$CellContext`r, 
                   Blank[]]], 
                 Pattern[$CellContext`q, 
                  Blank[]]]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`r], $CellContext`q], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`r], \
$CellContext`q]]]), "Side" -> 1, "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`q, 
           Blank[]], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 26}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 28} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], \

          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 8}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 27}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 29} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 26}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 27}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 30} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 9}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`r, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`r, 
                Blank[]]]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`r, 
                  Blank[]], 
                 Pattern[$CellContext`q, 
                  Blank[]]], 
                Pattern[$CellContext`r, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`r, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`r, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`r, 
               Blank[]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 27}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]]], "MatchingSide" -> 1]], {"CriticalPairLemma", 31} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]], 
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, 
                $CellContext`f[
                 $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]]], $CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 30}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"SubstitutionLemma", 9} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 31}, "Position" -> {2, 1}, 
        "Construct" -> {"CriticalPairLemma", 29}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]]]], {"SubstitutionLemma", 10} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`q, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
          $CellContext`f[$CellContext`q, $CellContext`q]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 9}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 23}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]], 
            $CellContext`f[$CellContext`p, $CellContext`q]]]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], 
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
            $CellContext`f[$CellContext`q, $CellContext`q]]]]], {
     "SubstitutionLemma", 11} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 10}, "Position" -> 2, 
        "Construct" -> {"SubstitutionLemma", 8}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]), "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]], $CellContext`q]]] == $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]]]]], {"CriticalPairLemma", 32} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], \

          $CellContext`f[$CellContext`q, 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 28}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`q, 
             Blank[]]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"SubstitutionLemma", 11}, 
        "MatchingOrientation" -> {-1, 1}, "MatchingRule" -> TwoWayRule[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]]]], "MatchingSide" -> 1]], {
     "CriticalPairLemma", 33} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], $CellContext`r], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], 
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
            $CellContext`f[$CellContext`p, $CellContext`q]]]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]]], 
      "Proof" -> Association[
       "Construct" -> {"CriticalPairLemma", 11}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`y1, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`y1, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`y1, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`y1, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`y1, $CellContext`p], $CellContext`q], 
            $CellContext`f[$CellContext`y1, $CellContext`p]]]), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 32}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 34} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]], \

          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], 
             $CellContext`f[$CellContext`q, 
              $CellContext`f[
               $CellContext`f[$CellContext`q, $CellContext`q], \
$CellContext`q]]], 
            $CellContext`f[$CellContext`p, $CellContext`q]]]], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]]], 
      "Proof" -> Association[
       "Construct" -> {"CriticalPairLemma", 12}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`r, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`r], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`p], \

            $CellContext`f[$CellContext`q, $CellContext`r]]]), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`r, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 32}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 35} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`p], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
           $CellContext`f[$CellContext`q, $CellContext`p]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 21}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 34}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`p, 
                   Blank[]], 
                  Pattern[$CellContext`p, 
                   Blank[]]], 
                 Pattern[$CellContext`p, 
                  Blank[]]]]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`p], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
            $CellContext`f[$CellContext`q, $CellContext`p]]]), "MatchingSide" -> 
        1]], {"CriticalPairLemma", 36} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 35}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`q, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                Pattern[$CellContext`q, 
                 Blank[]]], 
               Pattern[$CellContext`q, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`q], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]), "MatchingSide" -> 1]], {"CriticalPairLemma", 37} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
          $CellContext`f[$CellContext`p, $CellContext`p]]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], $CellContext`q], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
      "Proof" -> Association[
       "Construct" -> {"CriticalPairLemma", 33}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`r, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`r, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`p, 
                   Blank[]], 
                  Pattern[$CellContext`p, 
                   Blank[]]], 
                 Pattern[$CellContext`p, 
                  Blank[]]]]], 
              $CellContext`f[
               Pattern[$CellContext`r, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`r, $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`r, $CellContext`p], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], 
            $CellContext`f[$CellContext`r, $CellContext`p]]]), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           $CellContext`f[
            Pattern[$CellContext`r, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]]], "MatchingConstruct" -> {"SubstitutionLemma", 8}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]), "MatchingSide" -> 1]], {"SubstitutionLemma", 12} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], $CellContext`q], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 37}, "Position" -> 1, 
        "Construct" -> {"SubstitutionLemma", 8}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]), "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[$CellContext`p, 
               $CellContext`f[
                $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]], $CellContext`q], 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[$CellContext`p, 
               $CellContext`f[
                $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], {"CriticalPairLemma", 38} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 12}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`p, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`p, 
                 Blank[]]]]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]), "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]]], 
        "MatchingConstruct" -> {"CriticalPairLemma", 25}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`p, 
                 Blank[]], 
                Pattern[$CellContext`p, 
                 Blank[]]], 
               Pattern[$CellContext`p, 
                Blank[]]]]]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]),
         "MatchingSide" -> 1]], {"SubstitutionLemma", 13} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`p, "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 38}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 18}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]] == $CellContext`p]], {"SubstitutionLemma", 14} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \

          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]] == $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 36}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 13}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]] == $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]], {"SubstitutionLemma", 15} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 14}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 13}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]], {"SubstitutionLemma", 16} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]], $CellContext`p] == $CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], 
      "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 32}, "Position" -> {1, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 13}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]], $CellContext`p] == $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]]], {"SubstitutionLemma", 17} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 6}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 13}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`p, 
               Blank[]]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]], {"CriticalPairLemma", 39} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]], \
$CellContext`p] == $CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 14}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               $CellContext`f[
                Pattern[$CellContext`q, 
                 Blank[]], 
                $CellContext`f[
                 $CellContext`f[
                  Pattern[$CellContext`q, 
                   Blank[]], 
                  Pattern[$CellContext`p, 
                   Blank[]]], 
                 Pattern[$CellContext`q, 
                  Blank[]]]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[
             $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]], $CellContext`p]), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`q, 
           Blank[]], 
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`q, 
            Blank[]]]], "MatchingConstruct" -> {"SubstitutionLemma", 15}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 18} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 39}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]], $CellContext`p]]]]], {"SubstitutionLemma", 19} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 18}, "Position" -> {2, 2, 2, 1}, 
        "Construct" -> {"SubstitutionLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]]]], {"SubstitutionLemma", 20} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, $CellContext`p]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 19}, "Position" -> {2, 2}, 
        "Construct" -> {"SubstitutionLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`p]]]], {
     "SubstitutionLemma", 21} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`p]]] == \
$CellContext`p, "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 18}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`p], \
$CellContext`p]]] == $CellContext`p]], {"SubstitutionLemma", 22} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], 
         $CellContext`f[$CellContext`p, $CellContext`p]] == $CellContext`p, 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 21}, "Position" -> {1, 1}, 
        "Construct" -> {"SubstitutionLemma", 15}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], 
           $CellContext`f[$CellContext`p, $CellContext`p]] == \
$CellContext`p]], {"CriticalPairLemma", 40} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 20}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`p]]), "MatchingSide" -> 
        1]], {"SubstitutionLemma", 23} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, $CellContext`p]]], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 17}, "Position" -> {2, 2}, 
        "Construct" -> {"SubstitutionLemma", 20}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`p]]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, $CellContext`p]]]]], {
     "SubstitutionLemma", 24} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[$CellContext`p, $CellContext`p]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 40}, "Position" -> {2, 2}, 
        "Construct" -> {"SubstitutionLemma", 23}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, $CellContext`p]]]], {
     "CriticalPairLemma", 41} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`p], $CellContext`q], 
          $CellContext`f[$CellContext`p, $CellContext`p]], $CellContext`p], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 22}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 42} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], 
         $CellContext`f[$CellContext`p, $CellContext`p]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`p, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 16}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"CriticalPairLemma", 43} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[$CellContext`p, $CellContext`p]], \
$CellContext`q]], $CellContext`p], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 41}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]]], "MatchingConstruct" -> {"SubstitutionLemma", 16}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "MatchingSide" -> 1]], {"SubstitutionLemma", 25} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]]] == $CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 13}, "Position" -> {1, 2, 2}, 
        "Construct" -> {"SubstitutionLemma", 16}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]]] == $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]]], {"CriticalPairLemma", 44} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, 
            $CellContext`f[$CellContext`p, $CellContext`p]], \
$CellContext`q]]], "Proof" -> 
      Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 42}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]]] -> $CellContext`q), "MatchingSide" -> 1]], {
     "CriticalPairLemma", 45} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`p], 
         $CellContext`f[$CellContext`q, 
          $CellContext`f[
           $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]], 
      "Proof" -> Association[
       "Construct" -> {"Axiom", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`r, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`r), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]], 
          Pattern[$CellContext`r, 
           Blank[]]], "MatchingConstruct" -> {"CriticalPairLemma", 43}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`q, 
            Blank[]]] -> $CellContext`f[$CellContext`q, $CellContext`q]), 
        "MatchingSide" -> 1]], {"CriticalPairLemma", 46} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], 
            $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], 
          $CellContext`f[$CellContext`p, $CellContext`q]], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], 
            $CellContext`f[$CellContext`p, $CellContext`q]], 
           $CellContext`f[$CellContext`p, $CellContext`q]]]], "Proof" -> 
      Association[
       "Construct" -> {"CriticalPairLemma", 1}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`r, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               $CellContext`f[
                $CellContext`f[
                 Pattern[$CellContext`q, 
                  Blank[]], 
                 Pattern[$CellContext`p, 
                  Blank[]]], 
                Pattern[$CellContext`q, 
                 Blank[]]]]], 
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`r, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]], 
            Pattern[$CellContext`q, 
             Blank[]]]]], "MatchingConstruct" -> {"CriticalPairLemma", 44}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`f[$CellContext`p, $CellContext`p]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 26} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], 
            $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]] == $CellContext`f[$CellContext`p, $CellContext`q], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 46}, "Position" -> 2, 
        "Construct" -> {"CriticalPairLemma", 45}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`q, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`q, 
               Blank[]], 
              Pattern[$CellContext`p, 
               Blank[]]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], 
              $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]] == $CellContext`f[$CellContext`p, $CellContext`q]]], {
     "CriticalPairLemma", 47} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[$CellContext`p, $CellContext`p]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
             $CellContext`f[$CellContext`p, $CellContext`p]]]], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 26}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "Side" -> 1, "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 24}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 27} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
             $CellContext`f[$CellContext`p, $CellContext`p]]]], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 47}, "Position" -> 1, 
        "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
             $CellContext`f[$CellContext`p, 
              $CellContext`f[
               $CellContext`f[
                $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p], 
               $CellContext`f[$CellContext`p, $CellContext`p]]]], 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]]], {"SubstitutionLemma", 28} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, $CellContext`p]], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 27}, "Position" -> {2, 1, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
             $CellContext`f[$CellContext`p, $CellContext`p]], 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]]], {"SubstitutionLemma", 29} -> 
    Association["Statement" -> $CellContext`p == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 28}, "Position" -> {2, 1, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`p == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]]], {"CriticalPairLemma", 48} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
          $CellContext`f[
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \

            $CellContext`f[$CellContext`p, $CellContext`p]], 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 29}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), "Side" -> 1, 
        "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 24}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), "MatchingSide" -> 1]], {
     "SubstitutionLemma", 30} -> Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 48}, "Position" -> {2, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 24}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \

            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]]]], {"SubstitutionLemma", 31} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[
         $CellContext`f[$CellContext`p, 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], \
$CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 30}, "Position" -> {2, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 29}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[
           $CellContext`f[$CellContext`p, 
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]], $CellContext`p]]], {"CriticalPairLemma", 49} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], \
$CellContext`p]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 25}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`q, 
                Blank[]], 
               Pattern[$CellContext`p, 
                Blank[]]], 
              Pattern[$CellContext`q, 
               Blank[]]]]]] -> $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 31}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 32} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 49}, "Position" -> {1, 2}, 
        "Construct" -> {"SubstitutionLemma", 31}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[
            $CellContext`f[
             $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \

            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]]]], {"SubstitutionLemma", 33} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 32}, "Position" -> {2, 1, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 29}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p]]], {"CriticalPairLemma", 50} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], 
              $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]], $CellContext`p]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 33}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]),
         "Side" -> 1, "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          Pattern[$CellContext`q, 
           Blank[]]], "MatchingConstruct" -> {"SubstitutionLemma", 26}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 34} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], 
            $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]] == $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 50}, "Position" -> {1, 2}, 
        "Construct" -> {"SubstitutionLemma", 31}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             $CellContext`f[
              Pattern[$CellContext`p, 
               Blank[]], 
              Pattern[$CellContext`q, 
               Blank[]]], 
             Pattern[$CellContext`p, 
              Blank[]]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, 
             $CellContext`f[
              $CellContext`f[$CellContext`p, $CellContext`q], 
              $CellContext`f[$CellContext`p, $CellContext`q]]], \
$CellContext`p]] == $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p]]], {"SubstitutionLemma", 35} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 34}, "Position" -> 1, 
        "Construct" -> {"SubstitutionLemma", 26}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             $CellContext`f[
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]], 
              $CellContext`f[
               Pattern[$CellContext`p, 
                Blank[]], 
               Pattern[$CellContext`q, 
                Blank[]]]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], \
$CellContext`p]]], {"SubstitutionLemma", 36} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 35}, "Position" -> 2, 
        "Construct" -> {"SubstitutionLemma", 33}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]),
         "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], \
$CellContext`p]]]], {"SubstitutionLemma", 37} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
         $CellContext`f[$CellContext`p, $CellContext`q]] == $CellContext`p, 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 29}, "Position" -> {1, 1, 1}, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p], 
           $CellContext`f[$CellContext`p, $CellContext`q]] == \
$CellContext`p]], {"SubstitutionLemma", 38} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`q, $CellContext`p]]] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`p], $CellContext`q]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 25}, "Position" -> {1, 2, 2}, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`q, $CellContext`p]]] == \
$CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`p], \
$CellContext`q]]]], {"SubstitutionLemma", 39} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`q, $CellContext`p]]] == \
$CellContext`f[$CellContext`q, $CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 38}, "Position" -> 2, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`q, $CellContext`p]]] == \
$CellContext`f[$CellContext`q, $CellContext`p]]], {"SubstitutionLemma", 40} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], $CellContext`q]], \

          $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]] == $CellContext`f[$CellContext`r, 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]], 
      "Proof" -> Association[
       "Input" -> {"CriticalPairLemma", 7}, "Position" -> {1, 2}, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, 
             $CellContext`f[
              $CellContext`f[$CellContext`q, $CellContext`r], \
$CellContext`q]], 
            $CellContext`f[$CellContext`r, 
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]] == $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]], {"SubstitutionLemma", 41} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], 
          $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]] == $CellContext`f[$CellContext`r, 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 40}, "Position" -> {1, 2, 1}, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], 
            $CellContext`f[$CellContext`r, 
             $CellContext`f[
              $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]] == $CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]], {"SubstitutionLemma", 42} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], 
          $CellContext`f[$CellContext`r, $CellContext`p]]] == \
$CellContext`f[$CellContext`r, 
         $CellContext`f[
          $CellContext`f[$CellContext`r, $CellContext`p], $CellContext`r]], 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 41}, "Position" -> {1, 2, 2}, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], 
            $CellContext`f[$CellContext`r, $CellContext`p]]] == \
$CellContext`f[$CellContext`r, 
           $CellContext`f[
            $CellContext`f[$CellContext`r, $CellContext`p], \
$CellContext`r]]]], {"SubstitutionLemma", 43} -> 
    Association["Statement" -> $CellContext`f[$CellContext`p, 
         $CellContext`f[
          $CellContext`f[$CellContext`q, $CellContext`r], 
          $CellContext`f[$CellContext`r, $CellContext`p]]] == \
$CellContext`f[$CellContext`r, $CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 42}, "Position" -> 2, 
        "Construct" -> {"SubstitutionLemma", 36}, "Orientation" -> -1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, 
           $CellContext`f[
            $CellContext`f[$CellContext`q, $CellContext`r], 
            $CellContext`f[$CellContext`r, $CellContext`p]]] == \
$CellContext`f[$CellContext`r, $CellContext`p]]], {"CriticalPairLemma", 51} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p] == \
$CellContext`f[$CellContext`p, 
         $CellContext`f[$CellContext`p, $CellContext`q]], "Proof" -> 
      Association[
       "Construct" -> {"SubstitutionLemma", 39}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[$CellContext`q, $CellContext`p]), 
        "Side" -> 1, "Subpattern" -> $CellContext`f[
          Pattern[$CellContext`p, 
           Blank[]], 
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]]], "MatchingConstruct" -> {"SubstitutionLemma", 36}, 
        "MatchingOrientation" -> -1, "MatchingRule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]], 
            Pattern[$CellContext`p, 
             Blank[]]]] -> $CellContext`f[$CellContext`p, $CellContext`q]), 
        "MatchingSide" -> 1]], {"SubstitutionLemma", 44} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`p, "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 37}, "Position" -> 1, 
        "Construct" -> {"CriticalPairLemma", 51}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`q]]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]] == \
$CellContext`p]], {"SubstitutionLemma", 45} -> 
    Association["Statement" -> $CellContext`f[
         $CellContext`f[$CellContext`p, $CellContext`q], 
         $CellContext`f[$CellContext`p, 
          $CellContext`f[$CellContext`p, $CellContext`q]]] == $CellContext`p, 
      "Proof" -> Association[
       "Input" -> {"SubstitutionLemma", 44}, "Position" -> {1, 2}, 
        "Construct" -> {"CriticalPairLemma", 51}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`q]]), 
        "OutputExpression" -> $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], 
           $CellContext`f[$CellContext`p, 
            $CellContext`f[$CellContext`p, $CellContext`q]]] == \
$CellContext`p]], {"CriticalPairLemma", 52} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], 
          $CellContext`f[
           $CellContext`f[$CellContext`p, $CellContext`q], $CellContext`p]]], 
      "Proof" -> Association[
       "Construct" -> {"SubstitutionLemma", 43}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           $CellContext`f[
            $CellContext`f[
             Pattern[$CellContext`q, 
              Blank[]], 
             Pattern[$CellContext`r, 
              Blank[]]], 
            $CellContext`f[
             Pattern[$CellContext`r, 
              Blank[]], 
             Pattern[$CellContext`p, 
              Blank[]]]]] -> $CellContext`f[$CellContext`r, $CellContext`p]), 
        "Side" -> 1, "Subpattern" -> $CellContext`f[
          $CellContext`f[
           Pattern[$CellContext`q, 
            Blank[]], 
           Pattern[$CellContext`r, 
            Blank[]]], 
          $CellContext`f[
           Pattern[$CellContext`r, 
            Blank[]], 
           Pattern[$CellContext`p, 
            Blank[]]]], "MatchingConstruct" -> {"CriticalPairLemma", 51}, 
        "MatchingOrientation" -> 1, "MatchingRule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`q]]), "MatchingSide" -> 
        1]], {"SubstitutionLemma", 46} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`q, 
         $CellContext`f[
          $CellContext`f[$CellContext`p, $CellContext`q], 
          $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`q]]]], "Proof" -> 
      Association[
       "Input" -> {"CriticalPairLemma", 52}, "Position" -> {2, 2, 2}, 
        "Construct" -> {"CriticalPairLemma", 51}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           Pattern[$CellContext`p, 
            Blank[]]] -> $CellContext`f[$CellContext`p, 
           $CellContext`f[$CellContext`p, $CellContext`q]]), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`q, 
           $CellContext`f[
            $CellContext`f[$CellContext`p, $CellContext`q], 
            $CellContext`f[$CellContext`p, 
             $CellContext`f[$CellContext`p, $CellContext`q]]]]]], {
     "SubstitutionLemma", 47} -> 
    Association[
     "Statement" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`q, $CellContext`p], "Proof" -> 
      Association[
       "Input" -> {"SubstitutionLemma", 46}, "Position" -> {2, 2}, 
        "Construct" -> {"SubstitutionLemma", 45}, "Orientation" -> 1, 
        "Rule" -> ($CellContext`f[
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            Pattern[$CellContext`q, 
             Blank[]]], 
           $CellContext`f[
            Pattern[$CellContext`p, 
             Blank[]], 
            $CellContext`f[
             Pattern[$CellContext`p, 
              Blank[]], 
             Pattern[$CellContext`q, 
              Blank[]]]]] -> $CellContext`p), 
        "OutputExpression" -> $CellContext`f[$CellContext`p, $CellContext`q] == \
$CellContext`f[$CellContext`q, $CellContext`p]]], {"Conclusion", 1} -> 
    Association[
     "Statement" -> True, "Proof" -> 
      Association[
       "Input" -> {"Hypothesis", 1}, "Position" -> 1, 
        "Construct" -> {"SubstitutionLemma", 47}, "Orientation" -> {-1, 1}, 
        "Rule" -> ($CellContext`f[
           Pattern[$CellContext`p, 
            Blank[]], 
           Pattern[$CellContext`q, 
            Blank[]]] -> $CellContext`f[$CellContext`q, $CellContext`p]), 
        "OutputExpression" -> True]]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.766509447394546*^9, 3.766509468768774*^9}, {
  3.766509501195775*^9, 3.766509511435173*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"274f03a6-a8f0-4513-a2eb-9f6ac773490f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<ProofGraph\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7665095416738567`*^9, 3.766509554483634*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f7a63d2a-2557-47d6-aa2f-e31033ec5cdf"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Axiom 1", "Hypothesis 1", "Critical Pair Lemma 1", 
       "Critical Pair Lemma 2", "Critical Pair Lemma 3", 
       "Critical Pair Lemma 4", "Substitution Lemma 1", 
       "Substitution Lemma 2", "Critical Pair Lemma 5", 
       "Substitution Lemma 3", "Substitution Lemma 4", 
       "Critical Pair Lemma 6", "Critical Pair Lemma 7", 
       "Critical Pair Lemma 8", "Critical Pair Lemma 9", 
       "Critical Pair Lemma 10", "Critical Pair Lemma 11", 
       "Critical Pair Lemma 12", "Critical Pair Lemma 13", 
       "Critical Pair Lemma 14", "Critical Pair Lemma 15", 
       "Critical Pair Lemma 16", "Critical Pair Lemma 17", 
       "Critical Pair Lemma 18", "Critical Pair Lemma 19", 
       "Critical Pair Lemma 20", "Substitution Lemma 5", 
       "Critical Pair Lemma 21", "Critical Pair Lemma 22", 
       "Substitution Lemma 6", "Critical Pair Lemma 23", 
       "Critical Pair Lemma 24", "Substitution Lemma 7", 
       "Substitution Lemma 8", "Critical Pair Lemma 25", 
       "Critical Pair Lemma 26", "Critical Pair Lemma 27", 
       "Critical Pair Lemma 28", "Critical Pair Lemma 29", 
       "Critical Pair Lemma 30", "Critical Pair Lemma 31", 
       "Substitution Lemma 9", "Substitution Lemma 10", 
       "Substitution Lemma 11", "Critical Pair Lemma 32", 
       "Critical Pair Lemma 33", "Critical Pair Lemma 34", 
       "Critical Pair Lemma 35", "Critical Pair Lemma 36", 
       "Critical Pair Lemma 37", "Substitution Lemma 12", 
       "Critical Pair Lemma 38", "Substitution Lemma 13", 
       "Substitution Lemma 14", "Substitution Lemma 15", 
       "Substitution Lemma 16", "Substitution Lemma 17", 
       "Critical Pair Lemma 39", "Substitution Lemma 18", 
       "Substitution Lemma 19", "Substitution Lemma 20", 
       "Substitution Lemma 21", "Substitution Lemma 22", 
       "Critical Pair Lemma 40", "Substitution Lemma 23", 
       "Substitution Lemma 24", "Critical Pair Lemma 41", 
       "Critical Pair Lemma 42", "Critical Pair Lemma 43", 
       "Substitution Lemma 25", "Critical Pair Lemma 44", 
       "Critical Pair Lemma 45", "Critical Pair Lemma 46", 
       "Substitution Lemma 26", "Critical Pair Lemma 47", 
       "Substitution Lemma 27", "Substitution Lemma 28", 
       "Substitution Lemma 29", "Critical Pair Lemma 48", 
       "Substitution Lemma 30", "Substitution Lemma 31", 
       "Critical Pair Lemma 49", "Substitution Lemma 32", 
       "Substitution Lemma 33", "Critical Pair Lemma 50", 
       "Substitution Lemma 34", "Substitution Lemma 35", 
       "Substitution Lemma 36", "Substitution Lemma 37", 
       "Substitution Lemma 38", "Substitution Lemma 39", 
       "Substitution Lemma 40", "Substitution Lemma 41", 
       "Substitution Lemma 42", "Substitution Lemma 43", 
       "Critical Pair Lemma 51", "Substitution Lemma 44", 
       "Substitution Lemma 45", "Critical Pair Lemma 52", 
       "Substitution Lemma 46", "Substitution Lemma 47", 
       "Conclusion 1"}, {CompressedData["
1:eJwVxee24WAYQGHv0UKIHtGJ3mskOtGD6Hx6BOfv3OZc1pj1rL12SP6zkX8U
CsXfb/8Pyi/VlxrUKg1oNFrQajHAVDrQ6fSg1+OAYwYwgBEz4gQQuAkzgRk3
gwW34FbcarCBzWBX28FhcBAkkOAknECRFOYiXYSbdLs9pAe8lBf3UT6fH/zm
gDIAQU8wGPKHQnSAdoWpsCOCRZzRSJSIRWOReDRuSkQTkEwkk6l4KpUOpNMZ
OhPLZrKWXDZnzWfz3kK+UCjSxVyJLpXKdLlcCVcqDMUUq0y1yjJslmM4f42p
2etsvd5gG40m22y22BbVZtvtDtuBbqtb67V6Xb7H8/1Onx9wg/6QG9pG3AjG
gzFMhhPldDydChNBmPGz2Zyfzxf8YiHyorjkl8sVv1qtxfVos95stuvtdifu
dnthvz+sD4ejcDyiHRJP6DQ6o/P5gi7GK7peb+h2u6P7/YEeFwlJp6f0fMqS
/HhJr9dber8/8ufn9/P7DxFzTNk=
       "], Null}, {
      EdgeStyle -> {
        DirectedEdge["Critical Pair Lemma 52", "Substitution Lemma 46"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 17", "Critical Pair Lemma 27"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 2", "Critical Pair Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 18"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 36", "Critical Pair Lemma 51"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 13"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 1", "Substitution Lemma 2"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 32", "Critical Pair Lemma 33"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 25", "Critical Pair Lemma 49"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 38", "Substitution Lemma 39"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 42"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 18"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 16", "Critical Pair Lemma 42"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 10"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Substitution Lemma 13"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 3"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 42"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 35", "Substitution Lemma 36"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 3", "Substitution Lemma 4"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 17"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 34", "Critical Pair Lemma 35"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 21", "Substitution Lemma 22"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 16", "Critical Pair Lemma 43"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 9", "Substitution Lemma 10"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 2", "Critical Pair Lemma 6"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 41", "Substitution Lemma 42"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 7", "Substitution Lemma 40"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 8", "Substitution Lemma 11"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 13", "Substitution Lemma 14"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 27", "Critical Pair Lemma 30"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 49", "Substitution Lemma 32"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 16", "Substitution Lemma 5"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 51", "Critical Pair Lemma 52"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 15"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 27", "Critical Pair Lemma 28"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 6", "Critical Pair Lemma 14"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Critical Pair Lemma 39"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 4", "Substitution Lemma 1"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 28", "Critical Pair Lemma 32"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 5", "Critical Pair Lemma 24"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 39", "Critical Pair Lemma 51"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 44"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 28", "Substitution Lemma 29"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 4"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 37", "Substitution Lemma 44"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 21", "Critical Pair Lemma 35"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 25", "Critical Pair Lemma 38"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 26", "Critical Pair Lemma 27"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 32", "Substitution Lemma 16"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 24", "Substitution Lemma 30"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 2", "Critical Pair Lemma 26"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 42", "Substitution Lemma 43"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 31", "Substitution Lemma 32"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 21"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 25", "Substitution Lemma 38"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 40", "Substitution Lemma 24"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 13", "Substitution Lemma 25"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 9"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 45"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 11", "Critical Pair Lemma 33"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 47", "Substitution Lemma 27"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 48"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 17"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Substitution Lemma 28"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 2", "Critical Pair Lemma 5"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 48", "Substitution Lemma 30"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 44", "Substitution Lemma 45"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 23", "Substitution Lemma 10"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 29", "Substitution Lemma 33"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 11"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 34", "Substitution Lemma 35"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 29", "Critical Pair Lemma 48"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 16"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 43", "Critical Pair Lemma 52"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 2", "Critical Pair Lemma 4"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 31"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 47"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 50", "Substitution Lemma 34"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 26", "Critical Pair Lemma 50"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 37"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 20", "Critical Pair Lemma 40"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 19", "Substitution Lemma 20"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 46", "Substitution Lemma 26"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 22", "Critical Pair Lemma 41"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Substitution Lemma 29"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 47", "Conclusion 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 39", "Substitution Lemma 18"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 18"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 5", "Substitution Lemma 3"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 39"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 41", "Critical Pair Lemma 43"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 27", "Substitution Lemma 28"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 2", "Critical Pair Lemma 7"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 37", "Substitution Lemma 12"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 44", "Critical Pair Lemma 46"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 46", "Substitution Lemma 47"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 4"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 10", "Substitution Lemma 11"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 29", "Substitution Lemma 9"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 26", "Critical Pair Lemma 47"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 13", "Substitution Lemma 16"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 9", "Critical Pair Lemma 30"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 21"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 11", "Critical Pair Lemma 32"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 40", "Substitution Lemma 41"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 30", "Critical Pair Lemma 31"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 51", "Substitution Lemma 45"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Critical Pair Lemma 41"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 24"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 8", "Substitution Lemma 12"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Critical Pair Lemma 25"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 8"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 51", "Substitution Lemma 46"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 29", "Substitution Lemma 37"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 1", "Critical Pair Lemma 46"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 26", "Critical Pair Lemma 29"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 18", "Substitution Lemma 19"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 16", "Substitution Lemma 25"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 6"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 31", "Substitution Lemma 34"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 10", "Critical Pair Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 20", "Substitution Lemma 23"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 2", "Critical Pair Lemma 9"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 15", "Substitution Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 43", "Critical Pair Lemma 45"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 45", "Substitution Lemma 47"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 8", "Critical Pair Lemma 36"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 20", "Substitution Lemma 5"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 26", "Substitution Lemma 35"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Substitution Lemma 21"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 3", "Critical Pair Lemma 14"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 35", "Critical Pair Lemma 36"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Hypothesis 1", "Conclusion 1"] -> RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 38"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Critical Pair Lemma 22"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 37"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 13", "Substitution Lemma 15"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 51", "Substitution Lemma 44"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 41"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 19", "Critical Pair Lemma 25"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 28"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 33", "Critical Pair Lemma 37"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 6", "Substitution Lemma 7"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 15", "Critical Pair Lemma 26"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 16", "Critical Pair Lemma 19"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 23", "Substitution Lemma 8"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 31", "Substitution Lemma 9"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 7", "Substitution Lemma 8"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 33", "Critical Pair Lemma 50"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 36", "Substitution Lemma 14"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 31", "Critical Pair Lemma 49"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 27", "Critical Pair Lemma 29"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 38", "Substitution Lemma 13"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 12"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 1"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 43"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 40"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 15"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 2"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 33", "Substitution Lemma 36"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 16"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Substitution Lemma 3"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 24", "Substitution Lemma 27"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 30", "Substitution Lemma 31"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 36", "Substitution Lemma 40"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 23", "Substitution Lemma 24"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 4", "Critical Pair Lemma 8"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 6"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 32", "Substitution Lemma 33"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 42", "Critical Pair Lemma 44"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 18", "Critical Pair Lemma 21"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 13"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 6", "Substitution Lemma 17"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 24", "Substitution Lemma 7"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Substitution Lemma 12", "Critical Pair Lemma 38"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 5"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 13", "Substitution Lemma 17"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 10"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 14", "Substitution Lemma 15"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 45", "Substitution Lemma 26"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 12", "Critical Pair Lemma 34"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 17", "Substitution Lemma 23"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]], 
         DirectedEdge["Critical Pair Lemma 32", "Critical Pair Lemma 34"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 7"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Axiom 1", "Critical Pair Lemma 11"] -> Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 8", "Critical Pair Lemma 20"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Substitution Lemma 29", "Substitution Lemma 31"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 14", "Critical Pair Lemma 39"] -> 
         Directive[
           Dashing[{Small, Small}], 
           RGBColor[
            Rational[167, 255], 
            Rational[167, 255], 
            Rational[167, 255]]], 
         DirectedEdge["Critical Pair Lemma 22", "Substitution Lemma 6"] -> 
         RGBColor[
           Rational[167, 255], 
           Rational[167, 255], 
           Rational[167, 255]]}, GraphLayout -> "LayeredDigraphEmbedding", 
       Properties -> {
        "Substitution Lemma 4" -> {Tooltip -> "Substitution Lemma 4"}, 
         "Substitution Lemma 24" -> {Tooltip -> "Substitution Lemma 24"}, 
         "Substitution Lemma 40" -> {Tooltip -> "Substitution Lemma 40"}, 
         "Critical Pair Lemma 11" -> {Tooltip -> "Critical Pair Lemma 11"}, 
         "Critical Pair Lemma 45" -> {Tooltip -> "Critical Pair Lemma 45"}, 
         "Substitution Lemma 18" -> {Tooltip -> "Substitution Lemma 18"}, 
         "Critical Pair Lemma 29" -> {Tooltip -> "Critical Pair Lemma 29"}, 
         "Critical Pair Lemma 37" -> {Tooltip -> "Critical Pair Lemma 37"}, 
         "Substitution Lemma 44" -> {Tooltip -> "Substitution Lemma 44"}, 
         "Substitution Lemma 17" -> {Tooltip -> "Substitution Lemma 17"}, 
         "Critical Pair Lemma 21" -> {Tooltip -> "Critical Pair Lemma 21"}, 
         "Substitution Lemma 6" -> {Tooltip -> "Substitution Lemma 6"}, 
         "Substitution Lemma 43" -> {Tooltip -> "Substitution Lemma 43"}, 
         "Critical Pair Lemma 50" -> {Tooltip -> "Critical Pair Lemma 50"}, 
         "Critical Pair Lemma 40" -> {Tooltip -> "Critical Pair Lemma 40"}, 
         "Critical Pair Lemma 30" -> {Tooltip -> "Critical Pair Lemma 30"}, 
         "Critical Pair Lemma 48" -> {Tooltip -> "Critical Pair Lemma 48"}, 
         "Substitution Lemma 45" -> {Tooltip -> "Substitution Lemma 45"}, 
         "Critical Pair Lemma 52" -> {Tooltip -> "Critical Pair Lemma 52"}, 
         "Axiom 1" -> {Tooltip -> "Axiom 1"}, 
         "Substitution Lemma 27" -> {Tooltip -> "Substitution Lemma 27"}, 
         "Substitution Lemma 41" -> {Tooltip -> "Substitution Lemma 41"}, 
         "Substitution Lemma 3" -> {Tooltip -> "Substitution Lemma 3"}, 
         "Substitution Lemma 9" -> {Tooltip -> "Substitution Lemma 9"}, 
         "Critical Pair Lemma 15" -> {Tooltip -> "Critical Pair Lemma 15"}, 
         "Critical Pair Lemma 7" -> {Tooltip -> "Critical Pair Lemma 7"}, 
         "Substitution Lemma 19" -> {Tooltip -> "Substitution Lemma 19"}, 
         "Substitution Lemma 37" -> {Tooltip -> "Substitution Lemma 37"}, 
         "Critical Pair Lemma 14" -> {Tooltip -> "Critical Pair Lemma 14"}, 
         "Substitution Lemma 34" -> {Tooltip -> "Substitution Lemma 34"}, 
         "Critical Pair Lemma 22" -> {Tooltip -> "Critical Pair Lemma 22"}, 
         "Critical Pair Lemma 6" -> {Tooltip -> "Critical Pair Lemma 6"}, 
         "Critical Pair Lemma 3" -> {Tooltip -> "Critical Pair Lemma 3"}, 
         "Critical Pair Lemma 44" -> {Tooltip -> "Critical Pair Lemma 44"}, 
         "Substitution Lemma 26" -> {Tooltip -> "Substitution Lemma 26"}, 
         "Substitution Lemma 33" -> {Tooltip -> "Substitution Lemma 33"}, 
         "Critical Pair Lemma 1" -> {Tooltip -> "Critical Pair Lemma 1"}, 
         "Critical Pair Lemma 16" -> {Tooltip -> "Critical Pair Lemma 16"}, 
         "Substitution Lemma 21" -> {Tooltip -> "Substitution Lemma 21"}, 
         "Critical Pair Lemma 26" -> {Tooltip -> "Critical Pair Lemma 26"}, 
         "Substitution Lemma 7" -> {Tooltip -> "Substitution Lemma 7"}, 
         "Critical Pair Lemma 27" -> {Tooltip -> "Critical Pair Lemma 27"}, 
         "Critical Pair Lemma 42" -> {Tooltip -> "Critical Pair Lemma 42"}, 
         "Substitution Lemma 11" -> {Tooltip -> "Substitution Lemma 11"}, 
         "Substitution Lemma 39" -> {Tooltip -> "Substitution Lemma 39"}, 
         "Critical Pair Lemma 5" -> {Tooltip -> "Critical Pair Lemma 5"}, 
         "Critical Pair Lemma 23" -> {Tooltip -> "Critical Pair Lemma 23"}, 
         "Substitution Lemma 2" -> {Tooltip -> "Substitution Lemma 2"}, 
         "Substitution Lemma 13" -> {Tooltip -> "Substitution Lemma 13"}, 
         "Substitution Lemma 31" -> {Tooltip -> "Substitution Lemma 31"}, 
         "Critical Pair Lemma 10" -> {Tooltip -> "Critical Pair Lemma 10"}, 
         "Substitution Lemma 1" -> {Tooltip -> "Substitution Lemma 1"}, 
         "Critical Pair Lemma 28" -> {Tooltip -> "Critical Pair Lemma 28"}, 
         "Critical Pair Lemma 31" -> {Tooltip -> "Critical Pair Lemma 31"}, 
         "Critical Pair Lemma 17" -> {Tooltip -> "Critical Pair Lemma 17"}, 
         "Critical Pair Lemma 33" -> {Tooltip -> "Critical Pair Lemma 33"}, 
         "Substitution Lemma 20" -> {Tooltip -> "Substitution Lemma 20"}, 
         "Critical Pair Lemma 18" -> {Tooltip -> "Critical Pair Lemma 18"}, 
         "Critical Pair Lemma 49" -> {Tooltip -> "Critical Pair Lemma 49"}, 
         "Critical Pair Lemma 32" -> {Tooltip -> "Critical Pair Lemma 32"}, 
         "Substitution Lemma 22" -> {Tooltip -> "Substitution Lemma 22"}, 
         "Critical Pair Lemma 19" -> {Tooltip -> "Critical Pair Lemma 19"}, 
         "Substitution Lemma 5" -> {Tooltip -> "Substitution Lemma 5"}, 
         "Critical Pair Lemma 24" -> {Tooltip -> "Critical Pair Lemma 24"}, 
         "Critical Pair Lemma 36" -> {Tooltip -> "Critical Pair Lemma 36"}, 
         "Substitution Lemma 14" -> {Tooltip -> "Substitution Lemma 14"}, 
         "Critical Pair Lemma 38" -> {Tooltip -> "Critical Pair Lemma 38"}, 
         "Substitution Lemma 30" -> {Tooltip -> "Substitution Lemma 30"}, 
         "Substitution Lemma 42" -> {Tooltip -> "Substitution Lemma 42"}, 
         "Conclusion 1" -> {Tooltip -> "Conclusion 1"}, 
         "Substitution Lemma 25" -> {Tooltip -> "Substitution Lemma 25"}, 
         "Critical Pair Lemma 8" -> {Tooltip -> "Critical Pair Lemma 8"}, 
         "Critical Pair Lemma 20" -> {Tooltip -> "Critical Pair Lemma 20"}, 
         "Substitution Lemma 29" -> {Tooltip -> "Substitution Lemma 29"}, 
         "Substitution Lemma 32" -> {Tooltip -> "Substitution Lemma 32"}, 
         "Critical Pair Lemma 13" -> {Tooltip -> "Critical Pair Lemma 13"}, 
         "Substitution Lemma 35" -> {Tooltip -> "Substitution Lemma 35"}, 
         "Critical Pair Lemma 35" -> {Tooltip -> "Critical Pair Lemma 35"}, 
         "Critical Pair Lemma 2" -> {Tooltip -> "Critical Pair Lemma 2"}, 
         "Substitution Lemma 36" -> {Tooltip -> "Substitution Lemma 36"}, 
         "Substitution Lemma 8" -> {Tooltip -> "Substitution Lemma 8"}, 
         "Critical Pair Lemma 39" -> {Tooltip -> "Critical Pair Lemma 39"}, 
         "Critical Pair Lemma 43" -> {Tooltip -> "Critical Pair Lemma 43"}, 
         "Critical Pair Lemma 51" -> {Tooltip -> "Critical Pair Lemma 51"}, 
         "Critical Pair Lemma 4" -> {Tooltip -> "Critical Pair Lemma 4"}, 
         "Substitution Lemma 47" -> {Tooltip -> "Substitution Lemma 47"}, 
         "Substitution Lemma 28" -> {Tooltip -> "Substitution Lemma 28"}, 
         "Substitution Lemma 16" -> {Tooltip -> "Substitution Lemma 16"}, 
         "Critical Pair Lemma 47" -> {Tooltip -> "Critical Pair Lemma 47"}, 
         "Critical Pair Lemma 34" -> {Tooltip -> "Critical Pair Lemma 34"}, 
         "Substitution Lemma 38" -> {Tooltip -> "Substitution Lemma 38"}, 
         "Critical Pair Lemma 46" -> {Tooltip -> "Critical Pair Lemma 46"}, 
         "Critical Pair Lemma 9" -> {Tooltip -> "Critical Pair Lemma 9"}, 
         "Substitution Lemma 46" -> {Tooltip -> "Substitution Lemma 46"}, 
         "Critical Pair Lemma 25" -> {Tooltip -> "Critical Pair Lemma 25"}, 
         "Substitution Lemma 12" -> {Tooltip -> "Substitution Lemma 12"}, 
         "Hypothesis 1" -> {Tooltip -> "Hypothesis 1"}, 
         "Substitution Lemma 10" -> {Tooltip -> "Substitution Lemma 10"}, 
         "Critical Pair Lemma 41" -> {Tooltip -> "Critical Pair Lemma 41"}, 
         "Substitution Lemma 15" -> {Tooltip -> "Substitution Lemma 15"}, 
         "Substitution Lemma 23" -> {Tooltip -> "Substitution Lemma 23"}, 
         "Critical Pair Lemma 12" -> {Tooltip -> "Critical Pair Lemma 12"}}, 
       VertexShapeFunction -> {
        "Critical Pair Lemma 43" -> "Triangle", "Critical Pair Lemma 8" -> 
         "Triangle", "Critical Pair Lemma 42" -> "Triangle", 
         "Critical Pair Lemma 18" -> "Triangle", "Critical Pair Lemma 3" -> 
         "Triangle", "Critical Pair Lemma 17" -> "Triangle", 
         "Substitution Lemma 3" -> "Circle", "Substitution Lemma 26" -> 
         "Circle", "Critical Pair Lemma 38" -> "Triangle", 
         "Critical Pair Lemma 20" -> "Triangle", "Critical Pair Lemma 19" -> 
         "Triangle", "Critical Pair Lemma 14" -> "Triangle", 
         "Critical Pair Lemma 5" -> "Triangle", "Substitution Lemma 43" -> 
         "Circle", "Substitution Lemma 23" -> "Circle", 
         "Critical Pair Lemma 7" -> "Triangle", "Substitution Lemma 47" -> 
         "Circle", "Critical Pair Lemma 34" -> "Triangle", 
         "Critical Pair Lemma 16" -> "Triangle", "Substitution Lemma 44" -> 
         "Circle", "Critical Pair Lemma 46" -> "Triangle", 
         "Critical Pair Lemma 51" -> "Triangle", "Substitution Lemma 1" -> 
         "Circle", "Substitution Lemma 10" -> "Circle", 
         "Substitution Lemma 37" -> "Circle", "Substitution Lemma 42" -> 
         "Circle", "Critical Pair Lemma 22" -> "Triangle", 
         "Substitution Lemma 9" -> "Circle", "Substitution Lemma 12" -> 
         "Circle", "Substitution Lemma 36" -> "Circle", 
         "Substitution Lemma 31" -> "Circle", "Critical Pair Lemma 36" -> 
         "Triangle", "Critical Pair Lemma 21" -> "Triangle", 
         "Substitution Lemma 41" -> "Circle", "Critical Pair Lemma 41" -> 
         "Triangle", "Substitution Lemma 6" -> "Circle", 
         "Substitution Lemma 34" -> "Circle", "Critical Pair Lemma 25" -> 
         "Triangle", "Critical Pair Lemma 35" -> "Triangle", 
         "Critical Pair Lemma 4" -> "Triangle", "Critical Pair Lemma 24" -> 
         "Triangle", "Substitution Lemma 38" -> "Circle", 
         "Substitution Lemma 19" -> "Circle", "Substitution Lemma 39" -> 
         "Circle", "Critical Pair Lemma 31" -> "Triangle", 
         "Substitution Lemma 27" -> "Circle", "Critical Pair Lemma 1" -> 
         "Triangle", "Critical Pair Lemma 45" -> "Triangle", 
         "Critical Pair Lemma 6" -> "Triangle", "Critical Pair Lemma 23" -> 
         "Triangle", "Substitution Lemma 40" -> "Circle", 
         "Critical Pair Lemma 47" -> "Triangle", "Substitution Lemma 11" -> 
         "Circle", "Substitution Lemma 21" -> "Circle", 
         "Substitution Lemma 22" -> "Circle", "Substitution Lemma 45" -> 
         "Circle", "Conclusion 1" -> "Square", "Substitution Lemma 13" -> 
         "Circle", "Axiom 1" -> "FiveDown", "Substitution Lemma 20" -> 
         "Circle", "Critical Pair Lemma 39" -> "Triangle", 
         "Critical Pair Lemma 32" -> "Triangle", "Critical Pair Lemma 30" -> 
         "Triangle", "Critical Pair Lemma 27" -> "Triangle", 
         "Critical Pair Lemma 37" -> "Triangle", "Substitution Lemma 30" -> 
         "Circle", "Critical Pair Lemma 29" -> "Triangle", 
         "Substitution Lemma 7" -> "Circle", "Substitution Lemma 33" -> 
         "Circle", "Substitution Lemma 32" -> "Circle", 
         "Substitution Lemma 16" -> "Circle", "Critical Pair Lemma 48" -> 
         "Triangle", "Substitution Lemma 29" -> "Circle", "Hypothesis 1" -> 
         "Diamond", "Substitution Lemma 25" -> "Circle", 
         "Critical Pair Lemma 9" -> "Triangle", "Critical Pair Lemma 52" -> 
         "Triangle", "Critical Pair Lemma 33" -> "Triangle", 
         "Critical Pair Lemma 26" -> "Triangle", "Critical Pair Lemma 49" -> 
         "Triangle", "Critical Pair Lemma 28" -> "Triangle", 
         "Critical Pair Lemma 13" -> "Triangle", "Substitution Lemma 18" -> 
         "Circle", "Substitution Lemma 4" -> "Circle", 
         "Substitution Lemma 17" -> "Circle", "Substitution Lemma 24" -> 
         "Circle", "Substitution Lemma 14" -> "Circle", 
         "Substitution Lemma 35" -> "Circle", "Critical Pair Lemma 50" -> 
         "Triangle", "Critical Pair Lemma 11" -> "Triangle", 
         "Critical Pair Lemma 10" -> "Triangle", "Substitution Lemma 5" -> 
         "Circle", "Critical Pair Lemma 2" -> "Triangle", 
         "Critical Pair Lemma 12" -> "Triangle", "Substitution Lemma 15" -> 
         "Circle", "Substitution Lemma 8" -> "Circle", 
         "Critical Pair Lemma 44" -> "Triangle", "Substitution Lemma 2" -> 
         "Circle", "Substitution Lemma 46" -> "Circle", 
         "Critical Pair Lemma 40" -> "Triangle", "Substitution Lemma 28" -> 
         "Circle", "Critical Pair Lemma 15" -> "Triangle"}, 
       VertexSize -> {{"Scaled", 0.01696078431372549}}, 
       VertexStyle -> {"Critical Pair Lemma 8" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 20" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 44" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 15" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Axiom 1" -> Directive[
           RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], 
           EdgeForm[]], "Substitution Lemma 22" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 34" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 7" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 39" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 29" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 44" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 47" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 46" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 52" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 11" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 23" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 3" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 38" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 9" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 48" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 40" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 36" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 30" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 40" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 38" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 20" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 19" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 7" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 18" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 10" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 30" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 10" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 1" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 35" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 33" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 32" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 46" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Hypothesis 1" -> Directive[
           RGBColor[
            Rational[146, 255], 
            Rational[10, 17], 0], 
           EdgeForm[]], "Critical Pair Lemma 16" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 31" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 47" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 36" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 17" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 41" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 42" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 14" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 13" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 26" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 13" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 18" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 37" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 51" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 28" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 14" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 12" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 35" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 3" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 9" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 2" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 16" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 24" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 25" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 11" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 26" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 24" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 12" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 43" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 27" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 50" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 31" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 6" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 1" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 49" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 33" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 41" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 23" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 45" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 15" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 5" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 21" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 4" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 21" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 25" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 8" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 27" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 6" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 28" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 2" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 43" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Conclusion 1" -> Directive[
           RGBColor[
            Rational[13, 15], 
            Rational[1, 15], 0], 
           EdgeForm[]], "Critical Pair Lemma 45" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 34" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 22" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 42" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Critical Pair Lemma 5" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 39" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 19" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 37" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Substitution Lemma 32" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 4" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]], "Substitution Lemma 17" -> Directive[
           RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], 
           EdgeForm[]], "Critical Pair Lemma 29" -> Directive[
           RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], 
           EdgeForm[]]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.013045107877336691`], 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
bH10X0jhXzjM5Uc=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1XlQ09cWB/AMgqI+HCkYkCzkxyIIQlXgAVp8p5b8Nla1FVAUEVDHBUpr
qAuoLIoLUChPpD7QKBZrpIhgtaDIYQ2hKBURY42QAqMdGiJIeQTQ8n5P/up3
5sydz8yZO/fe88cltiesjzPi8XixXP1//VuOsZCe33bp+XZN3Q1o26xNZsG0
e80GN7PhOln7mNfRr1jYnx8LMS8m69aXpOVoEljI14+ElTXNQmj+PM4Qx0Ju
RM8vJ0znI7kSazojWAhrPnxcUmyO2wY/z9kTwIIBxelDy/iYM5SmbVjFgsI2
PFrhIcDO1f+tUDuxcGfYIvd6uARdnrRNl33Agu/j2U/2ZEpQl8mcyF3IgtXW
m3maCgn6PaMX+ZmxsCHPouVdlwQFqtaySlMWBve6fdExKsHMMFXgiBELvcN/
nV1nRuCxDHbMMMXActHJFRkEgaahgaWqUQZ6Rlr9dy4nUFjzMCpmkIHB+PqO
SV8C7zc8Ilp6GVgwtMs5ZS2BEae+2risioGssfPLfvuEQN4VsfmDq1z/073B
AimBvV/GyfcVMeD6755sV5LAMUOA8YI8BgJchgfNKQI/8ej8qPw4A8HnL8U9
5Ky0MzDBhxhYMfDm3TaawHRlras+noGxOQNVKs5JhH1fdgwDRSayTFOGwEvL
nfe5hTPgfu7qARHnmk0eXBgoDP3+ve9MOKV0OjHQPzrjW4VCZaKQAYvUa+99
09ucCwMOhhmXd5tsrjBhwDpC8d5lsskrIZM0DJfM+Jrla71eT4NCPePSqn6f
nH4a6PEZl6xXp7mpaTCdnPGYP3ecKho2HqvU8TnHhJFHO6/SEGWtomdxdt5Y
0JFYRINdgz6rj7sf+bG9g3keDRdS7Ktvcb5tPZRccZyGLnbng4Ocj2pGn4Uc
oqFpaY1qBecLWd6rX8fTsM9GWK7h3s9y6U/ynBgaHgmzDx3irL0pm+ceTsOW
dZein3LzGMgwPF/0IQ2eTXxdKjev22t/ymDtaZDLHXoO+hEYdv+lcZ8VDZdf
tnnXeRDYPJ4eqfkHDT4FcyfWLSHwrf7rM75GNMTd0BIrFxFofGXeNxPjFCxZ
GVoZxSOwm/9nglBPQbI4XPHrKwnKqEDHywMU7NpvmFvyswS1XhaVp59TcG+y
yjvwoi1O7Fhouek/FJx4M9W+I9oWPX8/SwvyKeiyrZ8yONniL0GzJ0+dpuBa
2qwmo1Extp+Ldi5NpeCdTaNjRoMYnVquPk44QMGz36clKQVi/E2tnnoZT8Eq
XfWPQ/FifNfxp3x+HAVCx5H+JwFiPHB9quHFJgoy8r+77uUmxg17hqK3hFKQ
1OTh6fNChH/VGy19vIyCVHdlcVSzCEd0ivBugoKg1/IjN34Q4QRMr1TzKXg8
u77bqUCEFven76jnU8CXOZW2HhGhX2zZq6c8CqxWdenydoow2cOk4ckYCV2f
KRXpoSL82XUe1TlIQmgrT1vsK0L3oLtJD3pJyMw7lqW1E2HJOet1yi4SFIK1
L/q6hBi+K6DmbDkJjouLNCdrhVjfVjziVULCiGDi25ffCfEVKfxWfY4EU4eI
RW+zhajUtFSkZJGwd8W9YJVMiNFZxT6OqSSI/e3I4C1CvPWZfHmHjHPkmanT
/kJs8ukoPLybhN0Hx+OPugoxy8sl0SWKBOOiHXLXD4RoHniz+vkGEr4fo4lt
twV4/I6q6aQrCbwrDgF3CwUYMeef1/+wJaGno730vkyAR9YQ7fcsSYCDH3vu
DhLgm8gzTm/nkuAgTxuttRVg5fb9tdempZDtnztQrbPBxhBNdvOYFA7v2D1n
6y0btHdoLAzRSUFnYh6pSLLBR73OPVS/FPrsMvoueNjgwzSzreW/SmFzbeP5
1X8sRhuzROv0Tim415RqqyMXo7J2f0ZVoxScF2YPLOi2xqoqlWXQbSlQdUml
q8KssVefoApRSOGUMmaJn9YKyYSdl+9elMKw86ex/EQrHPasuJhbIIXkfmpb
y1wr7P4XW/8wh9t/fI1NkIKPU197zUk6KQXjWN9vFOv5uNXxi8QT6VLguXi3
9hjxcea/kML/AC+c5xA=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[{{0., 53.}, {-0.08696073823714151, 
          52.41731870386789}, {-0.5028029708405484, 52.}}], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[{{0., 53.}, {-0.41584223260340863`, 
          52.58268129650619}, {-0.5028029708405484, 52.}}], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQIavBz49FUcVwnf2H/tZEUiS5mXg5NPyYz2oNf7
T23QW3s+y8tBwv/yZu633/Zf36L4ODHOyyHUuUtZ8QXDAYZrgcy7A7wcsp/9
O1SsyX7AWWQ/721HL4czE9x31FrxHViUn8l0yNDLwU5xU+N8XuED0i8CHuYr
eDnsqdW6dDtV/MCG2tJVT3i9HB7c7Tn7WVXmQILB9ViFX54OL7mfXLMuljng
Jn/yrN8PT4dajS5f3u0yBwQuLv5Y89XTYZ5xvWHGR5kDe13TT6766Ongrnu4
yUdJ9oBHrXDojTdA9aJhjrs8ZQ/sKF8xhfW5p4PdG/PcjemyB7hM1TqMHng6
dG3MYDOqkT1gs7VHP/6Gp0Ni6gsem3bZA0E/bnd1n/d0qDvo8GBro+yBT8+2
p1Wt83So93n5eled7IFlaVUmaks8HUx2fdspCdT/RSzz9MWZng5zuDK9LlXK
Hrj1vVm7tt/TYYetw9wn5bIHojhPh2i0ejp0BNdsCiiTPVDkbed+ucrTgdtH
tkusVPaAyr67THUFng4O6soqZiWyB/ISV7ZrpHk6aD3tbVhfDHSP6cKrl6I9
HY61xs5vAvLPWR59UxPo6VDwj2GbO1C/+Y1eu0JXT4ebec9+TquSPWBU38ms
auXp8P8ab3ZBs+yBA3o7rGfoezo8MSvnvNIve+DeM8nnp1SB7ulTunpwvuyB
vuXrWPfKeDq8uMt/znKz7IELBWXT80Q8HThU7b9Yn5I9sMSpcM59HqD+5A3u
J57IHuCUnS8iwObp0DAr+cQ9JrkDkATk6QAAtTwF8A==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAAAAAAAAAAAAAAAAAIBKQNCUOdW4
F9m/jAI4W+B8SkDyF4zjflXsvzdCq7GEd0pATvRmtXOu97/8vlkD7W9KQBqP
GICFaAHA2nhDUBlmSkDVRBKpQskHwNRvaJgJWkpAV5ugVXH5DsDpo8jbvUtK
QFLJ4cKIfBPAGBVkGjY7SkBblb2cEeQXwGPDOlRyKEpAybFjOFOzHMDJrkyJ
chNKQIFCBoWPEB3AUiTzKScRSkCaHbXSMmMdwPA7nJ6qDUpAFkNwIT2rHcCi
9Ufn/AhKQO+yN3Gu6B3AZFH2Ax4DSkApbQvChhsewDpPp/QN/ElAxHHrE8ZD
HsAj71q5zPNJQMDA12ZsYR7AHzERUlrqSUAbWtC6eXQewC8Vyr6230lA+l1M
UDyFHsAFDCuaLLNJQER1uH72hx7A/rKcRs2nSUA4kpCJXooewCr/WcltnElA
07TUcHSMHsCI8GIiDpFJQBbdhDQ4jh7AFoe3Ua6FSUACC6HUqY8ewNbCV1dO
eklAlT4pUcmQHsDIo0Mz7m5JQNJ3HaqWkR7A7Cl75Y1jSUC2tn3fEZIewEBV
/m0tWElAQvtJ8TqSHsDHJc3MzExJQGMjq9p1kB7AD4pe/7xBSUAFDcqWJose
wKtwKQNPN0lAKLimJU2CHsCb2S3Ygi1JQMokQYfpdR7A3cRrflgkSUDuUpm7
+2UewHEy4/XPG0lAkkKvwoNSHsBYIpQ+6RNJQLbzgpyBOx7AkpR+WKQMSUBa
ZhRJ9SAewCCJokMBBklAgJpjyN4CHsAAAAAAAABJQAufBYk=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQIavBwKr36ePefP/v0umvNk5lR6Obzy2cy+ZP/F
/adZWzQuFno5rGBTXlTmeHf/hKkbledneDl4C6pV+zs93T/lhhofW5yXQ0yA
eFPfkTf7b517/Jw1yMvBacEnoz2TP+2Pr3ixYZ6Ll8PjD+6T20y/71e5apJ5
wdTLgW8Wd9Iy9z/7NZ+eEJit6uXw5Oy887xPGQ7krViy/J+wl4PvwgyX452M
B3Ke+fVq8Xs5eLDy+4qLMB3giq0ynsjp5XDp58SXf5uZDnjyqM8yYga6t+6j
ZPVNpgNqX0IO8v3xdJg0RfdenwjzgUUiLCtVv3g6nLJyM7M0ZT6wL9cksPy1
p8PEQmulKmvmAxX/n+5kfuTp8MKCd1GgOvOBKyclHp+67ulwdsLurft/MB04
ewYEPB2MrgurLdrHdOCYXtz/PQc9HdiyHu++1s50QF5Mk9l/u6eDt6dWeWwI
04EbTbo3mtZ6OvwteRFupsJ04ENJdl3EEk8HhbeycYnfGQ+kv3n09fxsT4cN
G0913jvLeMD+5WS7l5M9HTYeendr7XLGA2Ug5T2eDooKXYHnWxgPcBcvcmZs
83RgODXnrVMq4wFIfHk6AADSiswd
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQjQIavBx6nNWS9a5v2n/mTrvr7kovh9tzw1YqTj2y
/9VlrTO+RV4OClZLN/vvu7A/9OmLydszvRwqg7abcgje2C8geGjOj3gvh3+n
C3RjFR/slwrf9kwg1MshiHWS4OaVT/aXbT9ayODp5WAZan+8deHL/XJGH2yP
W3s5bN1d4XeV4/1+8eOm3qm6Xg5JMvMvX8j/tD+hbNrMW7JeDo3sL1trpn3e
H31i9/EvYl4O02Kun8/p+bKfbZcpRwe/l8MS6ayNCwO/7o/3Zomewu7lsMxl
oZb0s6/702rUD0j+93RYdL3G+qbnt/2yvvPNJb55Oky+8ufx7Zpv+5v2Zh/s
f+PpUGOtqKJc/23/tLM9sQ2PPB1ieV79XhfwbX90LRPPq+ueDhy8kv+Xn/yy
v29RHtfSDZ4Ov8JE5yfGfdkfVBYw/+xSTwcfWwPZXf8/7zfvd+Z9NsvT4ef+
zMqNaz/vt37rHvKu39OB8f7Bze4Zn/dHTYgtedbi6ZA+y+JMjf7n/bMrWnLP
VXo6aH46eyiA+fP+n0v32C/L83TweNY4/fDjT/vLJNhe5yZ7OhwuC/G6euHT
fqELCfmqEZ4Osxa73m499Wn/GRDw8XQwkXYD84/oxf3f4wi0vxvClxPTZPY3
93R49RXCv9GkC0SeDsyR7mD+h5LsuggVoH1bIfyMN4++npf2dNjG5QHm272c
bPdS2NPBPxLCLwUqX8Lj6SC0EMLnLl7kzMjm6cDwCMKHJCBPBwCmFiW6
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVkv0v1HEcwGWUeYi6HjY9bEdSkXDWxNXnTeq+n29FLmuVlOLUZR2LHtTN
eQjHMA+t2GnKsw6VHWWxj52HuzzNUbdzojpUzlCiIlq1fuq1vfb6B17M8xFc
nqGBgYHTH//2P+JoCPk0E3baOA8VX3P5NRdDA79NOTbLr0QHPFU17lE09M1f
M9Nby5DuyNtVynAaokXRI3asRiSsCbQvCaGhM0awpI6VozVBB6e7TtGw2UGz
zWuvAlWeLOR7+9NQe+x7lCqgC3mUhN014tDQOs+bbtH1IiW74CqDTYOfsdSt
VtGPAmxhRYQzDQtlVI85S43M99nMFNnRYDxw3WvHBg1iOlYFt1nTIJC4Z5rG
DaDcySGu2pIG1lSarPqcFgUnPFO+NqLhpEogYzRrUareXd4yj0HrM5rBlmiR
1dbz6MEUhkZqArZ9HUAzbiwIH8Gw+CaxW63QINf1Va1bNBh27JkWpoj60LfV
XcadTzEk546mPC/pRbJl8R/ryjDU2zjtktd2o6kG8eg9CQY/nsUJQ88O9NBz
ZDEyC0P/VFiai64ddSdnOXslYThIPNr9KlpQlCRLZHITQ4VabBaU0YxyYkbG
2wUYZvhFslqbF8iRmRohDMFwRWbPS71Yh1BOvNX2ExgK8nfXXFVlIjfWXzBo
Jiu+uAqFJDON82jYHkNWj2Q4vrOQrORKbhVtxOBV38jh+laTJ6lO5bGrMHDb
mln3R+tItMuynVHLMXi4+pazpU3kDGZYxP2kYOLofpK4JCd8VSin9DMFa03r
3vziK0jey7lB3RgF+T6LUssNXUTv0t7hPkgBOy59XaC4l5w1VTPKeymYrxhX
jl3oJ46swxxlKwWX6EJRsLWaiPw9y4obKMgMrfboLNSQY7xi5z2PKQj+zliw
+6EllYLbH8SlFOgN+5sibYdIwuVhRU4BBbYp+iQp8y0ZOvf01fE7FJh479we
HvOONB5aMn+dToFGmJ1949B7sslBHmmRTIHBLHNxabmO/PuZgt+IzF8V
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQjQIavBz8mXfJFP7cby+Y8l1oZqWXw1PGkCmLjly0
//vhBePRQi8Ho+aC55eC7tofWHblTHOGl0Mck9OCspCn9jGtu4qvxno5ODsf
P1/x+I39pZ5Z33YGejkoMakwWqz+ZK+wtyTU0MXLYbPSI+l1Yd/t3cU8J1ib
ejkEMcvtkCv5Y+8xQ3z5DRUvB4ZLr18dYWR0UHR+MJND2Muhuzf9esJCRofu
mXOVM/i8HLQcFLab6jE56M3ri/rD4eVw76Vol/MKJgfOwM12R5m8HFZ0eQR0
8TM7yGzivnDot6dDi9IOTq4UZofMg9P5vn72dKjYmLLt0FJmh3d14b+iX3s6
1Jv7hW25wuyw6pXX5O8PPR3mbCl5ee8Ds8MClqKbx697OpzVuJHv9IvZ4ewZ
EPB0OMR1C8w/phf3f89BTweDi7fBfHkxTWb/7Z4OQjV3wfwbTbo3mtZ6OmRw
3wfzP5Rk10Us8XQwq38A5qe/efT1/Gyge64/BPPtX062ezkZaJ7IYzC/DKS8
x9Mh1vQJmM9dvMiZsc3TgcH6KZgPiS9PBwABG8Et
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVkn0s1HEAxn9zuLvfL1qUJSy2XtZqzO+y0rV+j5fM9+clmZtqOJSXlY2Y
thSzS0xvMmyqy8s1kV7WKbnkKCfUMC1lJKJzXCIzyZTprL/6bM+ef57t2bM9
LrHJoXFmFEVtNWnV/yObRyArHk252c55rvuZkH+Wh2JxSqI5NMCVVY3Ick/z
oNc6VLUIxrmd2pY3Cwk8ZnLUA36NM9xYeIluMILH4qOhT5rxea41PdqHDeFh
HnRjc4XDb67HzoUse/EICRYqk1YomEn7+6QsD31wmU1dhznkYwrDtDMPrqYw
rcIgwsSaLVm21jxs7M3qZi6LofoqOp5J86C8LoS+daIx2epY/seCh4XzBplE
SaOhVs4WUjy2PGt4vkPIwPrWO0fpEkGE4FT2wygGP4pSo5bmCB4I3e41qxgc
KfH+1fONwE4n2B35nkFAudeEZpSg1MPonD/LoFOd7KrpJ+imh5K9lxhIVnlC
oNJXjDTNM7iqcmv6Xk3wMWHOdZfe1Fcn1Q0qCWKLeyOvdzKojwn3Xy4kCDop
TTJWMshQKwLC8giKjeyxPSkM4iu1XSPnCTxsGrZnSBiccRd1lacSSPQdfeop
GjUxsaQ4keCaPC5muJQGxXb5aqMIfHMKulf20TinOti8SUYQX3RpY2a9GD6S
0FeB/qZ8d8Ts071iFBirbWX7CRpZS1l1mwjRr/3qJe4EhtZcv7CjIjxud707
uc20P2u47cWCEHnTckOaE0HgCavez0ohvngOpn9YT3Ax3TaxMUAI7f3bYVZW
BC/Vs1cOC4Rw8qlVOFgSUPZVB+7oLPHvQAR/AWoD+AM=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVkn0s1HEAxk+40+/CfWtRKYWFlrPEstHck1p9vz9ZryrXVVzssLjSi6i1
K5Wm1BBai6hr9LqkZTRFV7cylNNCzCFT9GZHhdJF/dVne/b89ex5/nhclOr1
0ZMEAoH3uCb8PzQ8stTJjvMD62UxXzs4TTIPuUVWvXJ3p0zunNYVsYdH5MCs
vLqojzLDmeHUKyoeh88vXWfpMCQzBPiaVijG82Fvkmx2/pSFe/p70TU8yrfd
NlbWWSA2zGrxLfDg3vVkX1MIYa65aLlnEY+ayswtKyLFcE4YLcx15pFgas0N
iZfgabgbN0fMI6d0zHZJjQSRas0cdxseEBsWLhMTvGed9T5WPOLMmwZ2hRBs
6At2gplh+tkzWyuOEmhDS6zXjTAElyfGu98h6DggyYgyMQykTHa//4pAEH2o
NKWfwbl17QllH4FoRl9idhfDy0Z62meY4Me58MY7zQyC7YP+LmMEvhOUMbgN
PajOGSVIHx48+KGY4fo3s3zQRDCJC33w4hJDprJBGNBLcFEV9PFNJkNbgOvT
2NcEPHnuKEljOHXkZ9axKgInUX/g/sMMF6TyvceLCDim3SxMZOBoULRaQzC9
+XucTsVgrC+OWS4nQGnX/lvbGMocMujGPAn8/g5iyBU6zfwdIUFKt7VqyIOh
tvbzDrOHBNWl5xNGZjMU6LmAuy32EBQZWfBUhpWFukKJwh6Bd3uHG0QMZ12F
Q3Pf2mGf8fqhy2MUSaEG3471dijxXmAoG6Qwz/OMCNHboiU/6pe4n8IjX5Ss
8rOFtVQxWtxJMVCz+8ji/CmQttvXpTVT6NsK+NgKMah39wH/WooP7U+mjfRw
eDz/hr6uiiLsWXtr11wOmU9UD1fdo+ByPl1yi5uMaiunsJJiiimrTYpHOhvQ
T7rsL/kU4f2fZ97zsoE0WZk0K2e8T21s+q0VIf7md/PCDIqmdn261ksELlUj
dTtJIfDRBl3VCfHvzxR/AFU8OBQ=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV02tIU2Ecx/G1NM0sWoo4Z2IU3mrSxZpB6D838XlO6UpKrKGZm1qIppSU
qaXTUYSMRFEMezNMs3rhJUN0umOYDlGkpamVZSmhXTZHRsuctfM8L7Q/jMMH
xuHLD86O1EvxaXwejydx/Ljnf1fMQIyrW1aWbMzwerCoNC+fgVmNtuzhxjmD
oJzfdyiXAV3UlvYQ0aLhiVTbK81gwL+kps2vym54bPUvrFMwEH7T6jchcWLd
qzt/QBwDsiRbkyXBjTXtVQTti2QgWZxjf1S5lbX18n2yQhkY6hq9rTnlyZbi
FuOiiAHzZPBVl2xvNmcgPczowoBlS/z3lefebD8jiS5zZqD2qU71a7OQncZo
VsxnYG5QNLUQJ2T1fbWCF3YM7052J3zVCNnErt3D2IbhGr718nOrkO0Qr3jp
rRg6W/JjZ8aE7BuRwCL6gkF3p2pw2ixkuzWq0xc/Ytg/Oo4+2IVsWqYN149j
8MmRGt/zfdgD3LVhiCinLjAFFpkaMdT8oe7P9R3IrcMQ0CMj9hA4rgLD/Kto
4rPNzopmDYbZIzHED+RL9fLrGDx/I2KL2XHZGPJdjxGHa2fCtUoMXpmxxGrx
hFqciOFeTQJxGAnCoJafIS7kegIxpHcoiI1cjy8GmSmJeBvXI8Cw/f45YgXX
44zB7H2euIHrWUKgj04lXuB6zAjUO5XEh7meGQSyVuoyrmcCQXGQas0+CO5G
qVZ7GhGcSKEeIPsgMJRQk5wKBFMNqtUeDYKmEdWafRAELKvW7ON435601R4l
gpAU6lKyD4K2GurhIccdR1AwQt0fmvxXfxSBp1M6sb9X8Hq5BEHRQepJMjCC
diW19UrmjcRdCHq01Be+ffo5IkJQ/Yw6cr4yYt4DQeRb6jzH3+vdEXQsU2+6
rJOu24CAJ8ogph8Ygn8jro8X
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV029IE3Ecx/Hp/L9FraVgrmVpeoKz0kgtzU8a8fsdK6GghmLFxLSMbJXh
/BPmNHoQpmWgtgeSM4MgVhEaWIMeqFRaGaXuSU7NWIg5MiWx2W6/e7C+cBwv
7vjdmy/cFn3ZkSJ/iUSS6rmE+39Ty6PNNarc1DKdZUg7/umMkYfk1LGlrfql
rOrsEmmIgcdw+2aL2iKFWp3SZD/N40PG0VdJbjl0b3uMjjweUlnMt46vSiTy
izbVIR67lStTj35ForV9Tn8zk4cp364xF0TD3Neh35HoeV4VFxcTFYt0q9wW
Esmjt2TSfjaZQ1l5ckV4AA9LtuJkTgGHmie397b68+js0RkVJg6mAzOJrlUK
60BvwudODteSNNroFYqhizsvNNo4XCkrbtu2RPGn97U28wuHouC7G/xcFKnt
52yO7xy0i89fPnVS1EdsH6xa4MBlvGnZ46CY0IQVy1Y4SMY/trWOUqRM/L3X
5OaQIswzilLRVSPxNSPdFBoHc79BNWAwU1RMMisVnmmm4KeZ86yB+dYGiq4Z
5q7cZUtuJcUNJ/PPOc+cp1iYZU5rnEprLKT4Mc9cpxmr0+goNkrcXu/yBlFc
D2CuFnriKWgI86DQo6LQy5jXCz0KiuE1zPlCTyBFy1rmB0LPMsHjdczzQs8c
gVrBnC70TBFMi8/rhZ4xAojnsf0QhMt9eroJQsXvD3j3QxAZxuzNaSY4GOrT
00BwS+xn+yFYDHb77IegMtinp5BAJdrk3Q+BPYh56J1ntAQPRfcnnVjt209g
FB0dkSDNTSU4LHrcu2CCWNGuy6VXdbEE7kDmktnJ3++jPOeLznLe2edUErwQ
Xe553SInMIuWXbqf4xdEUCua/WAE/wBFeozv
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVk31Q03Ucx8cShsrTsNOackGQcDKmHAuKkM9nAfb9/iRIjhJBRBmgHBDy
oOYCKWxISikYeMW87BrjDuOWENfQHfIkjIvIDkEQolTYeBpjYw8CJ6X1V6+7
973/fb3/eHul5sals1ksVsizPO//8QmDnVdLvPkDTXCmoixKdZrBCzXdorzL
3dBU9Vq/KJ/BEn+OprzzLlxx/+OyLJNBj/KYM6seI7DLqVGmSWHw0q7xI46C
v6CopFp7J57BiKRXo9PaJqEouybvK8Lgju7lYm77DAgGlbuFbzEoykq1uQYZ
oLr5IVPHZ3CPn2BcecEESmf+17ptDKoEx70UDUsw+tPRXuFmBlcKkgadr5lh
c5KFY3FhcP0Tg1GbZYF01lCiH4fByZsBxYEuVtDIHdoH1ihWqF88oS+zQhg5
HzJtoch+Kh/lDVuhezalo3CeYlTRREPrqhUOVZxLLnxE8YPQjuk+mxWcA+yc
dPcpKs4WjtwTWsGtd6Pau5nip43eBXdMFugUGyJ76imedtj50cqPFrDbzc0+
JqN48csaXUGuBfri8gI3VFK8HZXYESiwAK/Otfq6lKIzX2Iv1JvBGjRfEy2h
KBFZmyU/mCH5b4cQ/YcUWWUD/fbZZojmHD7xhZhi3TL7vSF/M/Tute0LSKD4
ze32jeKDSyAMeg7FeLsJz1tbl+DkpGVs0Jfi1D4Vb/+oCRpb498+tY3i3hux
y8HVJhhuis3w4FKUviJXJ8aaYPE37Ts99hRrZC1pnRwTsLg8Xd4KwWK/z4w5
bUZgnZyJ8DQQfLPLVZxcYISltfhDvz8m+Et2Quul7UZ4cP1gsHSE4K/bV7v6
PRfhX51mgv737EjTNQOkfM/hD9YTvOKoDo9ZW4D3W2pLC2UEx2Z9snMSF8At
0xC8pZKgTRJ217VFD1VtbHpLSlCvYme97qKH8ZYh1WEJwTb5qbCJ9HmYjzlW
xsklmBFeG7lBPQddn9+8oRQTnJHmnG11m4MjGf2hBxIIRn688GROPAs9k1e9
1r1LcMjd3bevdQbkR+N+nhYR3HL/DWPmyzPQwGUVHQ8huF6Tun+gdBqGHyly
awMIKqYuHrBadOA7tqcq04egeWe77WG+Dr5d+fPxg60EFxVLgZXLWggX5acZ
NhGUMTsc153XwgvKp5vqnZ7t4aVJQn20sBBRarJzIMh66btyoWYK/jsYwX8A
jYuYjQ==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVk31Q03UAxifDbcCkzf1+KQUo5I2Cw6ClCwj3qHh8v79wUTewBBdBSjdR
jrFO4EZbF/IiwcmLtMycgh6+QZAmdhVgyktlCWptCopLyaltyXZX0wTT6p8+
d889/z7Pc/dE5Ba+ut6Px+MpH+qR/w8zh4+upOwod4+q9riiHaWlHCZ6Tq0L
SryuenFeTyIp4jD2W/f4c9fvqH4w7hNvzOeg0510y0d9qsxwb+YvWRzU0dWe
O1M82P9qDelUc+jJODsRHyyAhj2m+VHFwaBcqsr8OgiDOrlo5bMc+vO1ok8f
SBB//65CHMbh9/r4Q4t0DJq/XWx/JoDDrxXzjSd6GRimTV0fCzh01C0UvR7A
osOz8RyfzwEHqVrAsUg+6EnOnaGw2prU/WYWiyIY73EfxZn5D0RVHSzy1o5M
zfJQDBbUlq8dYXFPE5W48hbFB+dfOJJ4k4VTEnKmzEGxcLVwR5SPRVz9/vYD
Ngpz4J/KiGkWikccpSjJZYj9HosF0jjvtXaKC8sKSqa9LNYUJFt7dlE0WWeG
tztZXErJUnY2UHRXfJ/QaGexZ2fNl0OVFEvc576bdZrFZ5uGY/yNFE+MM8aJ
QyzEvfOq84oo8tQNq2PqHvar3TIyuYEieBVRTepYWH6+4V+bTcG7zF1zDzB4
/p9AFFdYm6ixhYFCvj/dHUXxtFWR3vUWg7Z+KesIpRgvyfmCxjEw+ZWag+ZS
+FrXpWjvyjB0+1LjJiGFMSxmytUng8moTBNOExQ4h/t878uw71j9EbuHYICv
7Hp3lQxLm68edTgJqgvf+cbkL8OSJ2NzIycI0qzj9p8GpP/tQ6A5OWyR6aW4
ff6ptFvtBBmmTtfNUCm2bhHzR3cRpF+ss702KMH9MNeaGw0EK85uyMzZLMEr
QwNcbBXB4jcTdDxWgsrilrFWI4E8PEiuNzwGS+QbgURPcLW7ZS/zVTC2XVhg
C32boL6cTXXygpFVY18eoSWIfa/qcdeKOQhcXsNlaAg8L81OaKJi7N6m7e1K
JdCbD89k5QRBn71+7+UkggPhZfmpVYGoOP6JdyyO4EN5UXFGbwBGLMLPD8sJ
kizbIytnB0DLb5tMCyPYWWw3XMwWIfqPwq19DEHnCaJ7+bQQiqLNzfw5BMZ8
h58zSYgyw+65IQICnrl1WdspAf49GMHfhItr2Q==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVk39Q03UcxjcBFYY/uCno9wchGEI0LmQ5lWTP8oTP5xueIEU4lSjlFmE4
AZUhKecJyFo2FYMikcoou7UQjMrD88YJUQeJ2DHA4JZRQZOBJExAXKP+6nX3
vueeu/fd+/nj/ax6bf/2jHkikUjhnjn9H0UCvv50o3XK2KMsSFiamKMTEOg3
fefzn+zKmjMJk+EHBOzl3x5SUadS23VlPFQjYDK3KcfjSTH+ktAtmTsF+Mv3
1N/KW4AlSm/H2FYBi25uaJCUL4Yta+LetVgB2uCaq6kqKdRnFj3fKRPQIsQU
vloTgGP1SSNrWAFl6dmBQRoO29otjhvzBShDHktTmjg0N1gzv/EUIPvzzbri
BTxUTLLvabGAF03X/jYTHj+4oruTZinqc0b6bx3jod5b8P2UkyJ+42y2w8TD
GR9qO3mfYrnHSK1nJ4/qLxRBrmEKpqOpeNkwj60Gc+muXylSK/dJAh/y8B7R
+39kpYgen1GsmuURPUcDxZ2XZbkVMzwmdvuF9X1G8a3Dsnp6kof5QnOO8UOK
lsbvEugoj7SHcdKU0xTiumX2E4M8ZjTV3hElFNq+Lpepm4fR0fbSkiMUS9c9
0FtaeKw0tDrnaSlszfmG5ss8ylEx6pVB8VtRumfdBzy8fGM2rVC78z5TUTa+
nof830AUpx5cbD3F8nhiR2NU9xqKMkUkPTHLIdmQ8n4RR7Fwaq3f7QEOP7ZL
31jrR+GzoSHwyHUOpYzjE7sXhdFpPlB4gYP+4O9xpmmCKnmoj/Uoh67+qe15
owRPj60Y0u/mkJ4c0bZ5kABPlUoqYzjIu3W1TC9BbEh8vvU6iy22KwGVlwnO
WhrPfXWeheutjkvv1BLsKDt/91AhiwD6wnJdFYGxYCZNtouFQRWpVhsJ1p/r
9Ln9HIudmkP5UcUEib3cH5pAFiVXQ7SPdQR9cbYxu4jF4ph1Kks2wc/9TMQr
gwzGh7606/a471e3l1vaGETd0O8PSyVgTk7IpGYGHe1uEgjCPcLb3itn0BqZ
5mpSEUQdnpa/W8ggyD/cY5vC7Qcz8x5lMOg9Lus5LiMIEw6XDCQyuJ+XdTR1
NYH/peCsZzcxeP3e3YmbLMEj0b5gcQQD5fDZ2GEpwS9JySYVw+Cge/2iL0F9
Vc9Cpw8DSe7Hm8XzCYoG5v5nJf4rGME/fYJxRw==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV0w1MU1cUwHEsOsmGyVrdFCkbqL1Voa8Gii3GZWduybv3RYMSBSZ+FKo2
ccmw2LiB6BaQzkSBwQZTpxWlQF2o6UKbBR1ycAngtEEqU5wf24Blg8iHOEbs
FNfXtwR2kpeXX+5L7j8neXE5uWm7ZWFhYRB8xPf/5lMBzLFuY+twX2ts1aOR
vfkC3F76cdf+TyZa13pbLJEWAawxbu5hpAzXG/cfHdgjgGdlhOv++ZcxvXpe
0pOtwe+VOd/+DArMzDhuMWwQIEE1rvb0LMS02tF3PW8JsJPTXQpEvoHvFei/
2ZMggF65QHfHugS1902O1CgBGuP+OGFOJqi4Zk3MnS3Axh07bqUYCeY9GIz9
RSZAtDw1W2YjGC87ZFWHCRCxpnldWz3BtXpOQ58xWHT39EcHrhJ0FD4X3plk
sGHk6Yu4uwRz/EM+xWMGDfk37/0wRLDA8Lf3+0EGyw7GvrJtkuCfF98Mf/s3
Bh3jg6VDUwTdyWbvyTsMrMqEXbmz1JgkThMDd3d8yAf96kP+BgbNZyW3W5Qd
ltMMSm2S58uDU8Eg/j9vdc/JcpcwqLJLrksNOFILGHR2SR4dCc6HwfujpPsM
Zf2GMhODykLJRZreIk0mg8UruZB1oSAGGU7JhWKPmoFyvjbkTrFHycC8V7JC
7JEzMFyUnCX2zGFQ8VByvdgToLDvH8ljYs8IhZ9mrwo5Rezpp3A1IJ0fEXt6
Kdw4op2xHwop27XTPQ0UopIld4T2Q8EcKTmUU0FhWT833VNCYVMzN2M/FEbL
uBn7ofDMxE33mCjkGyQXh/ZD4ZRTM92TRMHZO95U94KgvDGtb9ZyCsfa1tXS
AMHo3o4sbQwFMMUkZj4muOm7yrOXFRSutRQZewYIuliTqz4i2Nedx7X0EFxd
vsI2NsXD5jPDXyvaCA5+NrH85AQP6UueOHsuEGxPWlhd84gHjbF4S3g5QV9l
me+lAR5up9vP2fcRnHJkdV2/x4NXV3y8U0/w1S8XCNU+Hjb+6vj9LxnBxsvb
jNnIQ+374a6lfhX6o3UKjYcHV429b3OdCos8p3Y+dfKQ5z1gO1qowksln9N2
Ow9jXx07cSVDhYfLX/N9UcUDoQ8WTa5W4Y/dK4azS3l4vf2DuYmLVViz3udc
ZeMB5frgflQo/e88/AvGgrVc
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVk31MTWEcx6+Spbx0biMv10vLuphoLlab2dcq53kOdpdh5SZ060aiwvWS
kLwOteVms4XRLqnRao3+8HKP0duEiZJaSUnycpOlURr3PM8f9/ptz84+O9+z
53O+zx7/uJQ1CW4qlQqOpTz/m0wJs6c9nloU/szW0qVTZR6QsLr3y9OX5nZb
4K/mu5vTJHju78sZ2PHF1rrkZ0BBooQHpSpSp+m3uRVkieExEl41ZHcbkods
eaHH/EW9hIIJPr4N9SPkC8MDZcWQcLqp5aghfpTsZm/9tTNYwmXdXDxK8pbb
vEIGLNMlpFqGA913+8jatR7Fk70lPFlxtt1e5SP7j3m4K8BTwrzRLVOGfAS5
xxzweMFICYXNXxu0kYJ8JHdx/rK/FIvuyYL5lCC3x/YP6n9TNBavf95RLsjj
2jZ1GH9QnCkq8U5rFGSv8fsj0z9TRFbU1M7oFeRXfUuJ5T3FvNdWz95hQU46
WVJV8obio255TZubWtYpU07Reh2MD9ZrD9UXUtTnca5K01SnXaKoVPG8r+CY
XIo7PZw3lHoYSk9QWPVhjK/rB636dIrzCyMY99ods5Mi47zIOCSnMyTHSGFK
kRhnBTVlBUVR6NrXMV7EhChuRUQzzlB8tBSrImIY1yg+Ggr1u1jGasVHoPij
3sLYoPh4UIx9H8f4huIzSBBO4xl/V3zsBNdWJjAOVXw6CWZ94nxc8Wki0GlN
Lv0QXJlkcvoUEiR38Xw164cgP5sz08klmC0kOH1OEPilxrv0Q2AqNrr043gv
xzl9jI7vy/j/HGP9OPJXNzp9dAT7UmNc+iHYlmxw+mgIQvM2uPRD8Kk72qUf
gr2JnK2sHxEf1NFOH7uI4M9RzvPqFBHzLcrp0yTCpOH5OjYizJs4V86P/Xv/
kYiyK5xnTpzjrq8Q4dfM+a1y4LdF3BS4X9+e7YejrCKMEZy3fu34+SJfhGTm
jB7Lsh6LY/9rnM1K/JyIi7WcvXYXhI04KUJl58zvu4h/k9nQkA==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV02tMU2ccx/EyUnGhxNAWb7BGHuIFA9Gs6EBj+4NNz/OcYSFGE8JlKihG
YCjOZKMOA8VqQmIjrAJBp5ha+0KMFFwmorjMKVuN3IJSjBEFuagbwhRLCLD1
8Lyw/pOTk8+Lk3zP/zknPPPAtr2fyGQyeC/p/tEUi7DWjra4tH16v+T/nnxb
KOKHv3q7PM5xfUvt/NWLC0RMZaXuX3B1Rq/9N3R4NltEd/O5prB+OTK/ilOT
NBGbTfGTNyaDIFbtcpZsFWH/XYx1nlThn1flLZ/pRBzO3Fr+qX0xqP7BxvdR
Iiy1q05kJ2jwjVUZGbhUhFE3qnjxOUH0q93H0+UiLicXhtsyCC6crrbX+IvY
JKx1pZYSrGlVzvtVJmINUQUEXiToOdrhcE4zHH0e7m68TVB5s7OszMOw1py+
accjgvzihVfjxxkQdGf9m2GCXa5z6p6XDA2FO/4oeUeQW5PTLD5nMLlUQ4pp
glNjhbazPQyJKbNnTs0SaKVpZNAVcR/pWlnU5WBI/pn7XkFYa8FZhmPXuVXB
3ilneNTGnVovT6s3M3z9jNueNHUxycjw7G/uN6PeyWeoescdaxmItWQx5Hu4
TdFuU3QKQ+pr7pi5IO/7DHH/KPWsZBjs4/5T6gljENzcSqknmGFPO3ea1CNn
0N/lviT1TFG4m7jHpJ5Riqgr3HFSzwCF7jz3ManHTfFdnu9+KJZm+PQ4KBoM
3K1z+/E+H889l1NOcSPGp8dMERnpux+KMo3vfiieqn16sigiFNylc/uhGHo7
86FHS9FuejES4j3PjLq4iu2rKFbrqtvt3vOmvVmhRg2FZ/mSZIwQvG9yttlC
KLQb9uUMer+X3YaIus4gin6jSXP6NwJL5fVG/wAK/5GcvCQ7QVFFwWCcH4W1
ZNl2tZkgKsEQf3haQJVgeziwk+CM3dDaMClAseHt2K11BPdvHvp+YkKAvK9y
5NblZXh6qfvLhH4BG7PnBeSaNVC6fgpc1yHgSt7BUjYRiuwV9W0PbgtI78zd
ssixBI+bI08qnAISrZNJ3TWLkF8mE8ZtAoy/LKwt7ghBREXM9JFqAcMx99aH
UTU8XXfr6iwCrMoAtcNPhdeJ11JKjwsoNvR+ET4TDP6/C/gfjAjS6g==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV039MzHEcx/HrF+piSrOpawvjFjLKONryivH9fL5jmZKWRkpFrERqRbF+
+dkp8iPF0JHNryIrqd23TT8oIrO6zRquRs1OLj/m2NL3fX/ceW/ffffYPt/t
ufdn35lxqRsTHBUKBcYf+f3fHBERMZi831zVpi8f8N58PEuEseHXutJog95v
NMOzKE1E5C6jasB9UK+d7xX4M0mEItZD0d1u0n8qNj8yxIhY8d7xlvPX7/p5
3p5XFm0YP78mtuiZ+o8+6tW+YUuoiNupJZN9JjpIqTVeFZpAEb6bZwXNee0s
7Wv8dX/IT4SDYTDIyTxJ2mry8Z8yRYT6/NjpyAuu0qMnOQuy3ESMxE2vW+rv
JkVqohN+u4iIWTnvalW1mxS6o/aNViEieX5wxGVPpZSxMj9zuYXDW81fzU5W
SqPPujf8NnPsCYzwWnZPKTU5Xdj2cpgjbn2MX2+/Uur60lfV8IHDkrn9u9Nf
peRfeM63oZfjRWJCSbOLuxQkz0OOCZWJ5IM96pyeao7L9TvJbWmq9rRKjpLH
u8nTPManlOPdtVRydI3LlppCjmN708k3wiy6sGyO03OyyV9N45PCYZaOkDVa
o0Ybz1G76hg5L6AvLyCKY8lFHXkJBXGs+XGHfEjuUXN83lRH7pB7VBy+jY1k
T7nHg+PjTIm8Re5x4dAUPyXflHssDL5/28kjco+JoSzlOXm53GNkqBzoJBfI
PX0ML8K77PbDoDd22nqqGQyV1u/baT8MMw53kCmnlCH7RKutp5DBUd9itx+G
B6pmu/0wFFTV23riGXLCa8n5tB+GxNnltp4ghk8zztjth8F11ilbj4rhZfBR
u/0wLE7Kt9sPg0ZnvQ8d7UdAvznX1mMSMDc813ZfRgFTW3NtPX0CLjHr9100
AuLX5pFbF24da2oR4K4uIPtN93cKqxdQNlxINsgXfleApcTa9y19d26UTkCI
93Hyzi8ff3RXCIgtOkHG0NmQobMC4t6eJB+Qj58SsGpiMdlt//XVDkUCFCot
2fq/C/gHw/LDrA==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlA1ME2ccxvmGgSZlhrECYeK9jCGg24CBW5SnWHzvLlScLFhlfkHmCDJc
A/sAwTFr54wbk6lgBkbG96YCqWHYZNEMTWUJC67EgcpMWlhLmYNi+QiEj13p
Jeue5HL5Jfe/95fnf7mInGO73/Nwc3PjhMtx/18qePywWZ1Zn2pM+cX96vaC
Eh7fSjTzWTX2lFvvd98NVPEIS2xO8le5Yeq1SLXtCI9cw5dpd+GHg4emT/hl
85B0vjFQcFkCHzu5uVfBI+pYdFxzRxDM1p82jW7lUdJS92rAnlCsyH80tcby
8IzpLez/dT12e60MNEl5mLd5hHS+TvAkqsvjsReP2ciOoNL9BBe9NbsSPHm0
10Tvf0tNYO6bvJbnxsP/gspmbyS4Xz4T/Okih4DQ0/2Ntwl2vVhdlTPHQRub
v8D/QXC07nfpK1MclntDVFYLQbh/W2evlcPE5KX4z6YJ8g9Ls+RGDqe+H5Wt
WRTmGyL9awc5wLhUe26ZIN6RGxw6TE4+bogqN7RyMI04Wa8Ku6eq4zA06uR1
gUKqOFT+5eR9nd7ZnRoOfmYnN2csNGWUctgh8uSEkEIOaSInV44kV+Zy8BX5
ZNzQyTglhwTx/QmrQoKPeH6ZwyeKwx6Rex0+YRw2ivy8wyeQQ6TI2Q4fbw4K
kVscPgss6kW2OXwmWISL521x+Iyw0It8yuEzxKLF4toPi5tjLj6twvy4k++t
9sNi6G8nr+pUsTD+4+KjYQGbaz8sbM9c+2ExPePik8uCn3eyerUfFl97L//n
Ey/Mv1vUW7BEcG3DkScjUSw+zh5QuC8QnNYGpXeHsVjvHh67U9h/j0lWdj2Q
xbgiMzfzqbCvG+OFeh8Wg7Iiu8RE8A6REI9FCstw+fAXDwjaE7W1h6YopC8V
hXfpCfIs9x8YzRQf+GXqarsIPt9SYNAMU0wOZqXM5xAUL758a0lL0WfLqpam
E0hTKdpaKQ7UXy6TJxK8qa748O06igbzxmcl4QQPbxt2zp+j+O7O8qzOl8A+
t/XxFQ2FPEl61muKwVcxPUFppRRNstL2vY8YNOw7uDxWSNFlijisu8MgXhN0
8WwuxfEQSSNznUHq1dGHsUoK+5i8+FI1g9/6hKRTrPUI7tZWMNBvOrDys4xC
J/1TsbaAQcQL0Z4ZSRSzm2uS25QMHq1+gBQ98rRP1DsYTBUfPaEkFBFKy3NX
EhnkPTXN9IdSSPLLbQuRDFKs57dZ11F8U+obUxPM4CPh8aY1FPVnNLoifwYB
RQ3b3X0oUDMn7GsDnD8gin8BGwAUsg==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVVHs01AkYHS0qZjCaMfPzTCKW9CDaornI/B61eSQp2kKeqZGyu3qxWZZN
kyikkjZ5LelUqAilpzxTR4ktI6mU2BJGarXtP3vPuef77/vu+e79PkM/iXvA
JBaL5T7BL/V/iGFQl8XKKRQ9EFn71idERjGIK9owYqv4QpTYY/fIZiuDs/uS
R1O13ovGktwGnYIYyG9NP+m+f1yUtFql5Zg3g4Nx4aPmVoqwdw762WEFg9TC
4OEWVxWoeQb3zhMx2Btid7rhgAY+JnL0t1gyiIh2Ha114WFql6fuBx0GRPrA
8LJgIWy8l8ruTGbgNaz22fGKEN/LOjLilBikswJ5i6cQ6OaufGE5iUHruSFb
a5rA8Mvc5hvjNFTVqkIsYwgkhD50Y0ZoOGhWF5gVE8hM7d1UOUgjsnpk2LiZ
gGnAfX3dVzRy+Zs8jF4SsHmSFRrSReM+T6vacIRArQLpktNGI6Z01NZwnIDV
F5ynEb52Hdd8jEBP/hnTJ3k03rokHKeGCITftY3MOUZDfnhHR1QfgZbMRmHs
QRopFtaNVZ0EJgm2TdsZT6NsWmmEoJ6ACowDknbSCF42fie2jEAvv4dTHj6h
p5V9/5vjBDIyznHGAibmFXUnp0cTMLi9f6OXNw3t/pufpHIhrP8VRCPWcSTG
pFUIg58O+z6fReOQQG74e4EQKxVbva7q0qA213dd2i1EfXuf8DqXxh9OkppS
FyES5U9O9ivTyMmUXdltIITUv+QdPlJgIkzauW8EeMhfq1YxSCGtbhE/4qIA
wdyngz69FBJOGUiyfhHA3tMhy6STgtWaOTvqpVr/7YdCUnlc4cJlWnho+e13
Y3kUSi7Lr6kqaWFht3E57ziFo37SWudKPlxdTYqjUyisKEHR83A+pv9ormOX
QKEhm7u7fwYfBR4LFJg9FHi2Cjbr7vHwqs9pfcF2CjMj1NvmR/PwbPHqBWs3
UfjkZrdBYsZD+lJJrI8fhfcviM4fUrj47bG+k74RhcSKqIuqjlw8i088oqdD
YeCgl3vEkAaei9qock0KZmFlhSlFGpAqT3Hrm0phHpN6NSxIAw/adc5dYlFQ
sXibxjLRQFWlZtiMYRKhRodWHWtWx4qi13uM35Dw/UDKC33UEV1Q8OqajIS8
eVRn9oAaPC7QJfI2EmlKPdLIXRxcnnxdNKuYRMcq7T+DzDm4XXkqVPUUieUx
5oOybjbM3N763Mkg0fWr0Lf3NBsd13O1fKUkTvh3ybdvZeOpoC79XiyJWN34
qn1iNhYya57qRZGQligXmRuzIfP2GHDcQqJG17/Wg8PGX8srbjn4k9DeeFRx
8mdVWOhJA7W9SASaXJA4ylW/+mU10a89e26IAhsVZ9xlCqYkLj/y29apxcZV
2S3vOXoklGfKbU8sYsO5KeVEhSaJ4EuBe86EsbF0+/ni3CkkZEfyxarFbNS2
mMUPfBJDcqM6uXSMjareIdMjQ2Lw7Ip8ir04sCkTpGW/FqNpfHPh37UcWNgf
aFB+Jka2itKOOHs1ZO3yabr7WAz7sT2NndPVsWUJn0lrEKMqWzHU4r069Jas
2+BbI0byOJN70VsDeTutNWdfEGN+HLHYs1QDasOZ60fzxXDu3fyuX5kL97PJ
1M0sMeqMqKa9rlxE5PEbUg+LUbMov5E7kQ9Jh9kb3/1imFpIB4/e5YJxacif
Gy8Ga+TLvXPx9R+K8Q+TQisf
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlA9MlGUcx49Dso6IuGsy6ELg5KWpTBGsqyS+LHvePxBYo9VACjCYYAEn
yhA5aggtq10cslJiMAsCswlypS0ypAR05kAMI1lzgCJ/4jgDzDvxrnvf59Zd
z3Z799m9fz77/J73DcsufCVHLpPJ0p0/8fi/9Z6A/EMfXs6YHY//yP+YJX+f
gDU9kbFd5Uvxk43tpQ/rBDxpUulqFXL4nlAdvpEroF6dbd3bpIBjy3DyQpqA
EsO7QVXPK3E2cbFB+5IAv7QlQ/PlQCRfK6r8Nk6ASqfMUD8Ugq+nBEfuegG/
5M327N0djisllaptQQK+w1Gvg5sYXKgK7C5cISBB+C06PYPBqtIHa67LBbSu
PHVKc4CBsajmQqRMwK1SUjP+JQNtQfsubpmHV2P1T591M1DockoS/uFxp6Q4
4YWrDHz3dU4rb/M45/1o0M1bzvPf/7T3x2keb29Nf1G/yKD2cIAifoyHRftq
n+8yg+AOzekjv/PYM3n/8xo7gxhxmXjUT1HePxSpH2rlUTZDuU+n7tc18FD9
RVkV4FxGHjlzlNM6fNI7qnkUmSm3pNiaU8p4bJ6nPG92rgIenS7WGia0hh08
ZlxcGTVSGfU6j1wXx0pCPAQXl4s+kTyyXHxe9FHzaHOxUvQJ4LHaQjld9PHh
0efir0QfG4em25Qtoo+ZQ9vflJ8RfSY4TCxQrhJ9RjiY7nr24bDO5uHTysFw
j3K/1IfD6DJlScfIQWn38KnmsNnh2YdDgszu0YeD1svu9tnBIVhO+YDUh0P9
CrvbJ4bDpMLu0YcDp7a7fdQczmrtHn04JGbaPfpwmKul3Cz1YdEy6OFjZrE7
yOGe1wSL1Hccbp8RFntOyBr+m5eJxSF/L4n1Uh8Ws3mUaR8W+jOUJR8jC6KQ
N7j7sOC3UZbmVcai6hPK0rwKWFj7KdM+LFqtlGkfFsV67wZ3HxaZjZRpHxaa
Tm+3j5pF1/eUpTwBLBjX/9J+9mGx03W9NC8bQYXr/lIeM0F+CmXah2DdY5Sl
/TxCIAuWe/QhWLamGtY6379+S214QhuB5enknLvO93Nu5vz29Y0EY1fmQm1T
zueFDY8t1hH0XYrp2TDifF7d6ZP1HxO0RISSIz8zuLi16Ncnqgn0o53tT7Ux
eDbaEV1RQZA8P3t/5UEGz6W9Nd5VShCYdXGjXw6Dge6mP68WE/yx8WWObGGw
lHVSM1BIEFLdO7z9zQgoeyLScjMIdi3cMe2sWwPN+LFvypMIzuy/OZ43qoGm
N+5xZZzzfiHG7MxYDVblj7UwGwhKr1k3JTWF495gXdIP4QTXO1anRqnDMWR9
zf9SoNPnqLzP+3gY6m+sNb/xCMG54198MJAYhlSj33ThAwQYFPdTKOgHmuBf
iP2Ztw==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlHlUzWkYx0t0LEklLbfu7c0oSgsxLZj6DvltbfaaFkWpg7RMNCI03RgV
Eh3RQkbKFiqnMbeMiLIblbp0FZXSXki6Lea6Zv6Y7znvec7nnPd5nvf7POe8
hutDV2wYo6Cg4CU7X+P/FMPBxul4kHdjncOWgabq0CgOvksbonCixyHYPn0C
CeeQfUV/o1601GGo2uikWhCH2gxrtzihEnjFwiM/enEIzArrLiyaiAe911oK
XDjYzxWwTzarQyXyz7QAew5Jfc58gw/TIOGSL68x52CcfCfCuY8Hh9BF0+N5
HBT2LzaePY/AqknUPzSOQ6T3Xdc6H4LYsNsndcZy0Nha/2ivkOBOZc12bUUO
VU8OZplmE/RP+Cz8PMzienDV/fs3CbS0jEuLB1jccbnC+NcQzBzwM1/Xx6I/
3JA/0EowK+/cw3dtLLgXJvTejwS6tiNpK96wKBfeK588TDCcujb9ZC2LtKMj
6YdHCeZ9VSGLxC5bsykynlHddOt5LotBSbskQXZ/03aVl7szWDStm3pZSUow
luTttEhmwUYXnIr6RND+4G5O814Ws83u5Xf2ERhFrfE6vYNFfPiqZu9OggJT
3xMBoSz8nd1tHrwlSGpo8LMIYCEq+fvC/HqC0lRx/qgHi8CyT3WvZP7myx/E
Qi9KVO5RRGBzPmdBzUwW6kYzXH0uEVx9pH0jRl/mr2Lezx2nCTIz94ms1FmU
+bZZKaUSjOh9sOocx2JPt+Ph7ESCatrHOE/KIDqCSni6h4BveDdlWw+D4u4u
EhdBUJdruntpM4NFfgtX3Q4kUJUcbNR/weBxiWkqsftvPgzsm828P5oSsE+i
8iW5DNJulPkN6sn6+QUcT8tgUM/0ZFuqEHAd71uDkxloqvgutxgwwNwtRlkr
98ny28eLfasNcK1lqNR1J4OFZpJXH64Y4Jl7JLc2jMHESvH69ngD7C9NWRS7
gcHFutHAJesNICHuqSJPBgOdwRO9CgT4a2BRVLs5g6MpVWorDgig5KR08ex3
DJ7fVDh5e5MAU3bYRjroMrgZ8jH/kosA9XGSl3+oMnA+fdlZ7XsBwjb3iFXH
MohxtwzpIgKUm4eHOQ7S8EyO1HJUF6Dx4brTHt00XrrGLdVUFuDW0lubnZpo
KB72GPL5wseG9KSn+mIahU3dNoYj/G/7KqQhVuyS867Kmbsqc2kou3XIuSJc
vyI8g8aSh21y1lCXKZnG/sh3cva6Os7r6l4aNcta5ZzjJs1220FjrmeLnHu7
ZQqhcezIWznbHWqyPeQvqy9tlrPQXBxr7kFDQdwkZ/m+5tEQ/hBSe3CQD8tL
KxoVZ9FQ11Atqurm46i4wsuST+P86rKq9xI+fK4fOVWsQYMZf2hORxkfiU6F
eTnjabw3CXlUcoaP6UdM9vWOUsgW+ecGRfMhONA/60Q/hbWikFsdLnzssdM+
ltVJYYZJEo/V4YNJO/RYuZnC48F9z0TH9P6dD4WAM08kUjs9aDdu7Z19joLN
Zg/f8hc8WF5dllKbSQHLZ/zEj+Rhe2a5wDqFwp7VVg++qPLQf74miU6k8OmX
2IIt2bo4+zymdZKQQs51TY0ga13Ek7tGwp0UDmq3veu4o4OshDNc3lYKl1K+
WA+76aB9qv6ahBAKY+Z4DKfWaiOoxILhbaSg1mAycMBBC2bTfq/U9aBw/HWl
eUSFJn7TaNMMYWQ8f2UWFzoVEdeUpmgvoKBed8F1qo0G3kv7SjXNZfWqX9g+
FqhjTEuhaZAhhWCD12u3G6vh7DbWWVWbQtaOnb+aZKhCcr7AaKIqBXevtyWO
syfjbGxPkacyBYU3I6GLpZPw7YOm8A/MCnO5
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVlXswlWkcx8/SkSJyznkpl5pio6IbocvoV3mvqkMjUdHhiBjSGVvuqbaD
ZmfpFLqMLUroQtZ1dst40sVRtCq5RKxc2kyOS7lvWufVzLHfmWee+czzz+f5
Ps88zxKfkN2H1Dgcju/UUM7/y0kGrlnmGsPnl+W89c1NEREMDLTe9ova0lnO
WR9uQkkYGAw6Mavqn/7yym/1zwL9GUjenjU+0DBaHpgy0t6+n4H8iG4mbZiD
uoeafHJ3MbDCYSxwl0ADOSw5sbNmCwP2Ib946j7RQkcNOjO2rmYgOG6XLGSW
Hopp1BLNNWHgrJbBu9YQAfL1HYo3n8OANFEuDn0sQKhJ1nJZg4E6Q7ckgS6G
3K4tD1JTZyAsv/xghRBDFsUPbL0naQgQct9Ex2FonZHT5pJRGvJHlvVtL8TQ
8Zd10T8M0kDdMsszqMfQlwaP0W09NFj7TuqNKjB0d9XbvMh2Go5aFBl2fcVQ
xps96TkNNHCScHmrmj6yVqaQhsDvHPXKPOZVNg12n6b5qcS4UpJGg/9NgmW+
3lRkNIz+SbK8L5+7P19KQ68lzfJN4XimMJIGxwmG5T7FVI7QMPnjTpbtEzvs
E8U0GOUKWT5t1Xjayp0Gv3APlm1YIRpS9xxgOVrpY05DVZUXy3KljzENE3Ui
lnlKHz0arMJ8WN6v9OHSIMoXs5yl9BmnIPmkL8v9Sh8FBfIP07xB6dNBwWTX
NJ9R+jRSUCMQz+iHgvsnfFQ+2RSYTHizXMn2Q0H/2WlmdWQU2Kz0VvlIKehp
Fc3ohwLeTdGMfii4EyNS+YgpKD08zT+z/VCw45hI5WNNQVGiaEY/FJyqEal8
jCkoXOs9ox8K6PszfLgUOAZO7yeT7YeE6w5ilY+CBD97X9V5dZCQuPeQyqdx
aj09QHVehSTkuYNnPEcfGX5Mbu/MJkH79UOjU2MY2lxd634/jYRYXYV6dS+G
LrV0XyqRkcDVeYIdfochK8OGjPo4EtJfEC575BiaPJMRahRNgrNLaMmFPAxp
mhA6UgkJglQGNz2HoR3vH0v4/iT0plV/VQ/G0PM6k6tPD5CQgjkK4u4JkE1T
262aVSTQz4ufrpUKkH3CAisPMxI2VVw8aeYpQD0ParvkC0nwH/+41ctOgJzC
NOuMdUl4EXp3bhtfgNxLy0dcZ5EgWdX2NmuQjwQxw86SMQKEK04XFL/mo2j5
3TaJgoDD/ikyrVI+Sr78/oZbBwEPuhaE56Tx0b7+i78tbiRgTrCNXaiQj86L
HRSxBQQIoiyajTbwUVnXvEbHbAI2/9U028+Uj6SXily5aQTEBlBlLjp89CFq
ne/DcwS8o3+aaB3jofakeI0IKQFuRz0r5nXz0LG6wk2WkQT0tKjzWl/xUCZd
qt58hIArSf49QsRDwX0yL6mYAL+EBCdxHg/VPtm+Y6U7AYWPQr52Hud9vz9T
XL86zFzMQ9o2Q6ZqFgQ8dxqO76B5iDvq4rPGhIB/lz5avXAlDy2KpRVlPAK2
HUg9Itfgod1VzZW3NQlIHwlxHGjRQzn1mn3DkzjoDwl/v5Crh4yza8XXh3DI
dLUtvheuh/I2Wi/L/YQDrW/qjDvoIW/ZGluDThy4G/VPu07OR2vvyC/83YxD
pdkibFHCfHTjfElBVg0Ow3dM7MBwPkqpCO8PRjgsvba89liALtLYpLvTtggH
y8WznY3v6aDBiQj5txwcdBpf94ZyddBB7h8+z67iU+9F0q3ooHmI2VttlJqC
g8eXjT/bdmqjgoHCzz6/4lCx901kRpA2ulIX0rMmDgfOF69zZVxtNP1f4PAf
q6bacg==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxVmHk0VP//x0mWJIw2yzD3jilabGkZ+2v2GcpSidIiQylla7ekbElRpD6S
ImQpFU3a49WqJKRk8kkbnxLZylIq/UTf8/n8nv/c8zj33Nd9nOe5531e55Je
AQt9RsnIyKjJysj8vv6/7LIHk+ZTr2V5b8uKFf9ibdhhD4f8niSqpX0pi4hY
e4MSZA+Wl8I7XDfJoPfaoMCuNfawLMSwfTpXCb3LLq5Q8rAHzd0XV9/JUMed
e8yily6wh4bcjCsXL0xESdmHpiYbe9h6zjX04zIdlPGtD8ubaQ+9Dm3PTCsJ
XLdLxilHyx7SzShZiXMY2KYkXtYw2h66OOZn3D0ZWLg79pG5nD3cjksY1Ipl
YEsnVeArYw8UGSK9NpeB6YumPt72QwQNBa1RkbcZWFGYtcKrXwREbHvJtBcM
DP6e9NWgWwTNKYazHrQyMNmu5/iDjyJgPD/2dUU/A2fueLiA+1YEb0WCMW2D
DIR8itKxehG8XzndO0B2Cpr/jkQEfjNGOLTWILw2TwQaGiN8P4haHpQugud/
eDxlKEkiuGQ0wsuK5D2KYkRw2WuETzkN5DiFiKCueIQ7O4biPzRPZ8YwMxOb
mIliEWw8McKRRtJII3cRpF03GubZw0Ii4K80Huaw3z4GIrDpHuEHv32oIgjd
bDLMGr99KCKQbRlhj98+8iKodTAd5tzfPgNCaM0Y4a7fPh1CsG8eYYvfPk1C
6NE0G+bo3z5SISyLMPtPP0KYdMTsX588IehmjnD5cD9C8D8+wsM6SUJQTjT7
1ydGCF1BZv/pRwikyOw//Qjh+Hizf33EQhA/GfGLGu5HCPtvm/zrYy6Evkc9
klO/GKheuPCdrKEQ7idzs4UDDNSUlnuY6ApBZjJtlns3A0WXkzOuawzNd4/2
fNbMwAyR5GyukhCy3TYb33zGQNqBabFdgwJQn9B5TOMWAx/s6TU82iuA5oSe
/GcFDEw1n3wk85MAiHvRrnIHGHgoOfGxQrMALHZvzjh2SB8NblSr7ssRwKma
3OmHN+vjYK5bnU26AAonycntcNfHHeon+w4dEoDjor2GAjt9PPb1THBCvAD2
x1oc+2Woj6tWbRdN3y0A76LxHlkT9fE+VyF0/TYBvKiZ7Gsir4+1+a6KjhsF
0PKBdzu3n467963peOYlgJTe4+uU2ulY94lp+stNAOMPB7hY1tNRJtRkOdVc
AEF7k/5WeELHGdX2QWgggOUHBcXNFXS0sVLsE1MF8LwgqfbpXTqal3m3KlAE
0FAXYPeslI5qHmLHAnkBbJjwrv+fK3SsUZWjOwzwId6n5buShI7bGjg+nzr4
MPdhpIPNWTrKlU7RTGjig79d8fvIPDpuvZpvaSTlg8oRKdv4MB1zYqwmG0v4
EPQ+KvDgATpu1Jdsqsrjw6+wLuzbS8cyndfn/dP5IFmqN3t1NB3T/MseqSbx
ITFsXEX1Tjp+01lcfi6GDwf+uRnJ3kHHd/rHsxxD+HAlxWTl1U10XBibtqLD
nw+K8V7LZ/vTUciZ/zVBzIfwe0vCJb50LF92IdjInQ+Pf2hz3iyhY6dSlqKx
OR/c/IPn+7rQ0bNi1doqAz78GJDL7nGgY7JDQK4/lQ/Xs6r5MXw6Ru6vuatK
4cMhn7p52iw6miRE3T4nz4dYzsStEis6Hl8Ql+E4wIMU6wOyLnPpWPH4lUdH
Bw9uOHMaPpvS8dK4Pf0JTTwYjDCTOTqDjl7jdgcbSXlwMkC6hK9Nx6+lBuNN
JTzY6B2W2jNhiMPk5WvyeODStyHqlBodFxjSmwLSeTB/yunJS5WH7mP4WbUk
HqzqNndVk6djD1/T+3wMD+KXKVs/+EUi91q3glMID6o8jSqjBkhs0VY+0uHP
A8PRx+XZvSS+8V1NSRTzIJ27tGVUF4lGOf3bjdx5MEuucKfM66Hny6qmm5nz
gGq3ecv9FySenff9bY0BDzoNtIwTn5EIDo77A6k8KLyZlu9WTeLPb+XT1Ck8
WCjzrZleQeI7ju+18/I8eNdp3tR5l8RuQxNbpwEueOx3yC4tI3F6AbWko4ML
pXV2Uw5cI3H/XVNaYhMXlCvV160uIVEz1C/MSMoFE2KDR0oOiTUq8d9mSbjg
Le72XJdB4q+iVKfaPC78TT2VaptGov5Ly5ygdC6kzt8zasJhEq0TA/vVk4b4
818nPh4gkV9uISqK4UKjav2GsngSeXuOHHUK4cKak9yNh2NItKiKbenw54L5
6TcZfrtIJNOV5yaKucCddmY0O5TEH13k0PnDBc9er1sh64f6vOo0z8ycCz0z
9KMW+pD4wutlW43B0HzvRtmZniQ6Fr06FEjlglZmko2ix9D7s5aYqFO4kN9o
N7fZlURkckvPy3MhXrel7bYziTc25YHTAAdurYpfme0w5L9o16WODg445ExN
jOGTaFdfNdQPB6a13QhZxyLx3q/koX44kKvj97zOlPxzPnPAcn992vUZJPaZ
nI6szeMARzRKmjGVxOIPUxqD0jlQurAtIZIkcfWyXDYliQNn8pNviKkkysfN
kBTFcEDF4auYM5nEjMASY+cQDry1oEaTGiQaT+CWdPpzwHDLIHVQZWhecD3/
gJgDTT9OGL9QJHHG/oAmY3cOXJfVlNfqJ7BQee3xWeYcSM3z7+zuJrBXuVKh
1oADPv6nlj/6RKCc0c4NQVQOMJbcmH/qA4HPA8Or1CkceLJSUhbxjsD1zx/O
LJLnQEBcfMmyRgLvrhDvcRpgw2Aty3iulMA3CvavOjrYsNP2xTSNpwTik3Cz
xCY2tFc453c8JtCndHCXkZQNm5s+RtjcJP70w4bvItvFWleG9pHM1D21eWxo
li10+HyBwJCC111B6WwwGmu+5sFZAr0dlQIoSWx45vM0+1g+gQYHNEYVx7Dh
JSVh9IbsIR+/wQLnEDbw1DzjLE4QaNX8aE2XPxtUVs43GX2UwH1fQ5gHxWyY
M+jy7dEhAkvyx9JM3dmwqycs9H7kHx9zNrgc/JIUG07g6GKrlFoDNpy7phAD
2wl83+anH0xlQ9KmS4t7ggmsb7rzhkJhw49ro2SzNhJYl8qpLJZnQ9fBtr0i
XwKbldv+cRlgwYbewM5WLwJHWV4z+tzBgqCWZLPYFQSaTC3OTm5iwa91Ls46
7gRuqK4WmEtZgORl6Sr+//phgbR63Mn3QKCkLyKjNo8FRMvMEm8rArNGhTsH
p7Mgdf2EiQ1zCBxcMp2vkcQCW7e7yDcl8P6XPbsuxLBg0jnrK6enE/hTevjX
whAWUAPCv8tPITBTYfGdL/4sWJQWG+9OI/BC2O1HKWIWXDNx98nSItDU6q3m
XHcWaHe+m9Cs8L9+WHDFpOK6piyBt2ZdulxrwIJNslsnRPTRUPrZtTiYygLr
u+tliltpuHWTBjGewoKqvGCr8lc0TL/YJndRngVTCxPu3aql4fxLb5e7DgDw
n1w/kXmfhlHbe6b3dwDMnPzzvvgaDdnf9f2PNgH8He5iO/YcDeNtA6daSwEe
1+TfWRRDG9nHJAC7TQ96nN9Ow1XKGWOf5gHMPUF1r/ajobPLN5nN6QCdWo5X
JStpqKDEHj8pCeBkNiNiuQsNI4x3sK/GALhaZRY85NDw5t0TiStCAJTeIvP7
HBqWVVzoHxUAcC0ldma3AQ1joSS8QAzgt6Q7+owWDSlTcwkXd4BK5TMz2j/q
/ekHgPVhbmtKgx4Kt5hsrzcASAYJtfmhHvb8sJTEUAFKJhF3Gi7rIbPCtdmG
AnB+XXjj9hw9VG+MGCujABBp8civ9IAeyvgFu6T22sH02DH+Z3booWqe3Hbu
azvId2I223npId9fEj/6oR0MHnarChXp4TncvVd6wQ4SJ9Gf17XpIjPpsQrD
xw7Gq/Vq36nRxar7asJcRztYsrbUmn5JFzf/LEsgmHawiLbT6ssxXZw+51Vj
MmkHKvNmT54bqYvtG9czfyrbQdS5N9WtvrpYmud9fFWPLVyKifKhOOti5rtK
lWuNtpBzgyotmKeLiXrZsSrltkP7VKHBRZou7vf4oOxWZAsbyhzmBD6l4sa+
ymr1NbYQoT3tjugGFS/ts1q22skWdob+w+edouK8XQXl55m2IH63C70Sqdj+
dJLmD9IWTJ2+m2Rto6I0NsqBP9YW3t9afFhuNRUHUjtXJ/bYQLRlQlesPRVd
lD08njXagNLVHNbM2VR81XBvnma5DWyzORb3RZeKJ5VN+5cW2cDFKZ9uOz3X
wTXDsQHNLQ99Z6MOLijbuzjXyQZKhPWt7QU6+Ho+2d/CtIG4zImisEM6qKNm
5GhMt4GDYdFRr8N08Kf82aVbx9pA9Uv9tMlrdDDO7KTWrR5r4N/6sp/hpIOl
SWMSVV9Zw+dpPR4KTB1Mn/r+0spya3g+aYriTUIH9bvmphQXWcPFE5+5eU+1
ce2wjzXoEwXH917RxqlpR9liZ2u4d26V87Yj2ghXPM+/tLKGVPtJKwI3auNF
vF5Ya2gNR79U3tlso407JacteZOtobIgKjpaQRuzDxotna1oDaYbLTMyHmgh
4c5VyvxqBXdtusffj9LCvjGdgrg2K4jTyX/XP08LDXKNNNtfW8GSk4Ef6qo1
8ESrGzN0phWs/Lla+nCbBrodrit8S1qBsUGcScgUDfwr4INCw8SheXpNn95L
Kei+I4HvrWQFes3B6urJFDx2odxv1zdLsNs2L63XmYJeOke2Gn+0hKlS0/i/
JlKwUPJ1jX+9JTxVWPWm97U6bg/ttIa7liCQu52uXqSOD4JDvmaft4RDcY4p
l6ep44pXLkVzvC3BoDLYfq+cOuJF988fF1jC2rOzWiuuq2H2U9ryg/Mswd85
2jA1SA1HWeW1G5KWIN7d4BRiqIavWztyJcqWIIQ5nkFvVNG6qW+PaY8FUBNS
loYfVcVJjLKDGY0W8GbtV6sTi1TR/6zglky5BRyq8VR8pqqK/IiDWouLLKCS
0uI2aD7uz/czxCfbR93oUMH9fYuc7ztZwPHntAv2p1Swbpr9e18LC7At2ulz
2k0FQUZk6KhvAYXGyrp/y6tg9Q7nSVvHWUCLy23py/NjcfcRz6I3/Uzo1cpL
Pe86Ft2W7OhLeMeEmtgryxf1K6Pz1bSW8MdMCEntYzxIUUa/sruxRVeY8MVx
dfc4Y2U87dtfMyWHCdvmbDo6vngMfrlVE1G9jwke33IOt1uNQb2HU8J/bWZC
ZlrfP8eqlHDmzr4HJauYwNbyjddbp4Sab9nizw5M4Gz5FrllrBJ+7FaeX2LB
hJxzp6szSxQxvcgxatCQCeJ7oYGZaxXRVFd1TJUWEyKvbvDZTCpi/jxRo74K
E2T2hZ+jNingyA8OJvwfcwKYHQ==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{0.5132107142410405, 1.}, {1.0115133763476933`, 0.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-5.502802971236179, 43.}, {-0.5028029699442413, 42.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlglMFFcchze2XLO7osiipUgVEYRoPUB29v7NsVFBvIrGejRWWtSWSOtZ
QCxQSRXFK5oiIRqogMV6gjbikVGporQ0YFuOWrGpVbEGMWJakJrOztvE/2QI
fNnZx/e+995mRy/PmPfhIJ1Od0n98fzWxZob7gwKUTx/6nLdWBXD+PmOpRde
ZrpRP45x4b68qsVr3Qj08pWQ9Msh6W5Mj2ZcPGwkN+kDN9ZFMR6y3fMGN3aO
ZTwupyU6Z54bJZGM73b9OnByuhv7xjC2NJfpJKcbuRGM47TLjfFezlbf3hKt
+nmfv/5pmHq7Yfb+v6HapY7nnc/ikz7q7cYXkxhXzu4/PLtfxms8455uzyUj
WGDM7/xTvWXUJjHeMqEtf0KbjND1xKdGRnkeY890WqpkJBYRn1IZQ4oZB3l0
9sjoKWO8yONToHI148MenywZg2sYP/HorFbHqyM+qTK+Vhjne3wWykhrZhyv
Ccm48DPjTVofGae93KD1UcdrJj5DZeTdZLxE6yNjkXf8Cq2PhFunaR8Jj73+
Fq2PhErvfL/Q+kjQOWgfCdejiE+VhMYQxte0PhL8jLSPhE0BxKdAwngDWa8s
CcNNxGe1BHsk8UmVUGIhPgslJJfQPhK4s2S9oiW0N9I+Eup+o30kfPMX7aNy
F+0jou4B7SOio5P2EaFvoX1ExG2nfUT0rad9RJxLpftHxNoU2kfEmOlkPxeI
aHISnywRa3i6f0QMnkr7iDgcT/uISAY9X+r4etpHxN7UBHK+RBTPmEr6qPO5
GEfOl4i0S5NJHwGTkye+8ukWsHfVeHK+BBQOiyF9BKRNCyN9BLRuHkH6CPhs
nOnVepUKkOUg0keAqyWQ9FHHazGSPgIuyAbSR30+Rk/6COj5nCN9BMQlc6SP
gIezONJHwKg5HOkjoN3L7PNHQNBcjvQR0OR9nfUB9F5mfYCb3vHZ/gG4ZOLT
BsS7uVf7uQZIF4hPFRBoIz6lQPgUjvQB9kcRnwIgawRHzhfQ4MeR8wXk9QaQ
PkDFnQDSB5i5I4D0AZ5vCCB9gBUfBZA+QHlaANk/QOXHAaQPsCaTceKh3hmH
el3w382483fP5cLKE4zXeIa77sKuVsa+2gAu5OYy/zTtciH/FOM+7QPWhc52
xkWevLwLxX2MI7TLhSND2H44u0yv3i4Ev6UnPk50RDK+o/k4MTCasTa9605s
CGHso/k4Ed9IfZy4eIbxv5qPE/MrGWvLzTvxopTxGM3HieMHOOLjRIb39STN
xwFXBUd8HAir5UgfB/xucKSPA7nReuLjQIesJ30ceLRMT3wcOJ6tJz4ORO2n
fRxIOcZ4huZjR0I97WNHU7ue+NgR2q0nPnakxbLzuELzsUPnZNyv+dgRnmIg
PnZcSDcQHzs6vjQQHzsyKwxkvWwo+d5AfGywPTQQHxuWGo3ExwbdHiPpY8OW
M0bSx4aZzUbiY8OCe0biY0NZt5H42DCxx0h8rNB1GYmPFcPajcTHipUK9VGf
T6Q+VtREUR8rlvhTHytedLP5RWo+VhR10D5WhDTSPhbsU2gfC3zP0z4WZNQZ
iI8F8U0G4mNBaDtdLwvCHzPepflY4PIzkvNlQU4s7WNB23zah8fsbbQPj3v1
tA+Pr/wHEx8eof6BxIfHlSNnvg16aVIK/hjrzp/DQ/f3kUXHn5iUS7/sObfQ
zuNW08PmU60mxShVX+2K4cGnrA8aedakrI3JSJ36Bo/47FlhPYUm5dnWu8U2
jke9tO5J7AKTsvX9l6kDA2Y8OnZ/+4/DTUpCTUP9xqdmVJyreNr6U7AykOM6
f+yBGb1pp0Ylbg5W2i8vn3aw0wxjfIltY32QkpebVPtDncpT/vtn59tDFZ+r
77zbV2zG3cu1RyMyA5Ul27ITIrPMWJ2XWj1w26Bsu3UlKfk9M66V+z4+upVT
ispiDqxzm3F/7MFPJm3yV1Y+OxFeMtGMZi6WL/zOVwm9Mf/2xTAztsytFs9Z
fZTyiDdbOg1m6PrDd1/0eZ19n9eZ8T84HCGD
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029708405484, 52.}, {-2.1744440616105294`, 51.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029708405484, 52.}, {2.4971970311956966`, 51.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN0l9I01EUB/AlOPprOW2xn/sJPUgTGikOyiA4seoeJzGziGgLMxe9aMNX
abgMB9Fazn+40V8wt2Wxhb056hrltLHGFKolyNL1IK05XKOtP7PfvC994XD5
cDmcw+XuvWRsvlwkEomqhCqcZmfbzGJRJRVtpAFuepkz1gv+fA4hOM1sHbzu
0qURjseYX0vbp6QJhPRv5pEyfmtNHOGzzLDhXbeEhgWEbD2zwjS3zzSHoNEz
x1Y+/PHNIHw0Mx+OPBKpXyI4XMx1hUwgWN8xXyu0uxCeLDMHOuWBzrsIqTXm
0kLsCC1ZZp2vWOfrFeanmR9rf41quxD8X5lXk0KuInhCzPW25UO2NgQ6znxD
+alHeQ7BLPlvnzqE8GDySuM6T3ufNi9tUiBITbYT9h88/RYN6A7wCGeCaoNv
iaeGyf4HkxIES3fJlHtWuG+aeDa2GcHrSOq7PDy1OKstqTyB97L4waoenqpG
MgpHhkB8PXnKc5qnaw17hh8mCKw27hwXV/L0jdcWEscJpP4eUx/5Iqdjs7pw
cIHAz6EdMrtRTsXPyzXDIQKJmDa4Uiyn0Yj+YislEF7cdp6MVlB+v0qifEHg
3p2jbz2aChp55WzJuQmcTae2l+Y4mrX24fR9AvktXK3Jy9G+gd2hgSEC/fP+
2mQHR53z1d9bbxMoa4qWGFQcLT8ZctdYCJi7jcL7cOz/mAn8Az0yHBE=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-2.1744440616105294`, 51.}, {-1.174444061833242, 50.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-1.174444061833242, 50.}, {-0.5633535313096445, 49.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5633535313096445, 49.}, {-6.502802974026736, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5633535313096445, 49.}, {12.497197031744463`, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5633535313096445, 49.}, {-0.5633535313648963, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzfBF8c9ftkf7QUyGBg+HhWJV9y9kXdw/J+xNdlWl
h0OAt54z15vt9lq796R6FXo4GHS56ewXfGi/UrfwbX66h0PD7E9zVxz+YC+6
jpP5dbSHw4fnC3ZL6/+yL7ZpW7bbz8PBUHR6+ZxUJoeDN55df2jv4ZBn6CvD
4MPh8K9Je3qsvofD2hOfTu84xeegYx3yRE/Ww6HirbPz4w9CDl6MiftDOT0c
CpaxrTPzEXbIt7mVsI/Nw6F43dXttQuEHZ5xFSbKMQPtZ92YsOOtsMOqHNWD
pf/cHaatnrHimbGIw77E7/VHfrg7bFvQ089RLOKg9OrZXK5P7g4PnvSIyq0W
cbjK+kXK45W7g0jFTCv1OyION7bIfa956O4QFLXpnzKbqIPW9zSjldfdHa6b
VzXUl4s6WC5nYEvb4O7QcGBhYPdkUQcbji1XZi91dzBpmF7stUbU4d0p5Xf7
Z7k7vCuLfrbnoKiD73v/oEv97g6blrxd+eiyqENUqQXj5RZ3h1pOv327H4k6
iMXe/XWw0t0hYGmNssc7UYe6ZXb28/PcHfQqKm+2fxN1mBoYcy4r2d1BuMnl
QdVvoP44sxUqEe4ODIfvmiv+FXU4ewYIfID+kbkH5h/Ti/u/x9HdYW4hhK8o
psnsb+7uYHUQwr/VpHujSdfdYSP3fTD/Y0l2XYSKuwN7IISf8ebR1/PSQPUT
IXz7l5PtXgq7O3icgfBLgcqX8Lg7mDE9APO5ixc5M7IB3WMM4YPTD4O7AwAK
Xf9j
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzfBF8c9ftkf7QUyGBg+Hkye1zr3893j/woN7Vl+p
9HAQPLXR3t/12X679H8pm4s8HG5+2Ragd+vF/qsfjmjPyfJwUPKyYmzf+3p/
cpwAQ3+ih8Ork9aBke/f7X+3/sHD7nAPB4ldsQsumX/cX/TU9OIkHw+H2iV3
0k3lP+9//4//3GIHDwfFJVL/r+h+3Z/2J+/GPmMPB9ad4mkbk7/vv3E36MNj
VQ8H42dqmx5v/bF/5d8vIX6yHg5rVj3T2vLn5/6rbaEzUkQ8HDLZwi8oWfze
H1VZskuN28Mh+2f5Iv2MP/strgbunsLo4bCl2XPhrZ6/+wtmvZ217ru7g8vS
02eUl/3bz3jSPbLkrbuDVNw/Fe4t//e/Tkj49vSRu4P09Q8hHtEMBwySzIuY
b7g7yOhZ5fx1YDogq8nXtHqVu8Mfxj2/mRYwHZCZ7SYlutDd4f+56dtufWY6
kMiccdxjuruDytSzc1psmA+8TizqdOt1d8gKiV3HUMV8YNe21AS+ZneHyzzu
r/3WMB84w+jks6DC3SFuX1dw/mXmA2rO7L5/ct0deDI1nie+Zz5wuGprklKy
u8MdHoVlagwsB5at8OkVinB3OLuycMJeVpYDZ88AgY+7g6tvAZh/TC/u/x5H
d4flLPlgvqKYJrO/ubvDt/O5YP6tJt0bTbruDjrrc8D8jyXZdREq7g7+i7LB
/Iw3j76el3Z3iFmZBebbv5xs91LY3SHoSCaYXwpUvoTH3cHkcwaYz128yJmR
zd2BwQzCB6cfBncHAFclFa8=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.4971970311956966`, 51.}, {2.8455262083181196`, 50.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.8455262083181196`, 50.}, {2.8455262082917443`, 49.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.8455262082917443`, 49.}, {0.6806891125240782, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.8455262082917443`, 49.}, {-0.5633535313648963, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.8455262082917443`, 49.}, {2.845526208242518, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.8455262082917443`, 49.}, {6.497197031734345, 48.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwl03tMU3cUB/BboB0DRAo6RkEDW8SqkFkYTFT4nVXu714WgU2rKzJEebih
dKBDndLyKCCwEWYHsgSEhIHY7sGIExjjMRUqAgYXGKGACtgLDOmakiFgGWW1
fJOTk0/O+eskxysu5VCiFUEQYK5XnRDUhtR0cl6RILJoWEogihV5HOA1qU8L
L9IwlN3FOerHgfxhq3ZGQkN5vkFp6GEDJDQvTsfTILyQm3byIBuoT7SuYVE0
DIRnJSlbbKDijyue9hE00I5MvpprA6i42slXSENt8y+PfhNZw+4H/n/XB9Aw
HaYFudwKUiXBN6/yaXBUZ4x5VbDAJOsIH+DR8EBqK+jfzIIvOiX/VjjTEG3y
HnqnnADudJGBY0eDOmy0G/MJGJ1yJ11YNDh0hDp7Z62h+/d483eWKAiWmgQ7
Ok3osbRwYaOegq39k/oyNxPibfoskmAoqP9VT6fkrKKMgibWtyMU6Hy2wS1i
FW0YTbNX91PgvMXncMdPK0jZq+xx+IECFX/wU23wCtK76/CTKgpmK5+OF7UZ
kWBottamlII/pRGtv/ONKHWxWisvpCBG/ZYxWf4S1WVushZnUqC4GH29pmcZ
jaW+b517noLkkuXq46YlZNfLZzjJFBjeNNpVeS4hv697b0zEUeBme2L45O5F
JL7tTXOPUVDYd04XeFOHhme+CxW6U3CmUiKMHXmOXotUu2a5UHCtbOfcfeEs
+qCgjYy3p4DdrJqWaGdQVYmsf86KghbT83dFrdOIOGt7y82IoUmiH7rUO4Uu
eMYYdAYMy9a3e546TaHV6vTCxBkMmXf3OeUUM6j0Rbws5wmGiLo81akDDApx
f+MhHsRwJ6g7cQ0YVO/g8DKtAUPZhKLyMM0gxx9TwxtuYFBdc+X1RZjnXY+v
z5VjMIrFY4kiBhVEfTjjfRVD7k7R5NtRDKpK6vOJy8MQbmfvw45hkGEhXFJ5
GcOhZWnr6ycYlLUyrNSkYChdUH0jiGPQQVnSuEsiBpc1hVIaz6Ajl624kccw
pLcFcubMDgr0NwcDO+k9i+eHtssGtmOY8Nhjseq8R/dZDwz2mnXHb+aagyG7
PMhiXiM7uoGNISxhr8WDImNtpJGE2IB9Fhct6M0hoWvDfotDS7V7irUkfPnP
uv/z18h9NSSk/xVscePgQ3NIwBD40b0jDPo44Pha210SjtZv8aN3me/pscM6
spmEuq0LSimjRacLfDXyn0nYq2hpjM3WIs2lMxniWhI2cj4Xz7O06CvDsxeP
Kkjgy7gKwalnSK4rCZktISFnsSbWs34StUvM60UkeJ3b1tU+MoH2p31/gHWF
BGJil8xlYByt/zsJ/wM4jNZT
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwl03lQ1AUUB/AFYQO0cQXaQIECSQ5ZhgXBdWJ8b4TfoWUYxBWxmCiHoHGk
5MbiBiFHBKwUNhwNKlgj15Kh4HCKHBEqIO0BC0g7CTS4MQLLIUTL9p158+Yz
8+a9v57tqc/8z+gzGAzU1lZncCsP3+xibpHBENE4qLbs83BlYv9CgHV4Ko03
K2d4/d8Y4tdiwZOPU2i86M8SRykN0EWRzF5NoJFaKRw0etsA2/rh5cFYGvcU
n12WBG1DiJo49eZJGv/ZX24YIdLHumq/mGuBND5odnxlWq6HRqVF+k1HafwB
XpcP1DDQ/8Bt7iVvGkcF3/MsIzYhK6VoaZRDY1mr62W9wH9h5FnmRN47NH77
afd1J/4GLOZ1509Z0VgdFVohFqzD9Jf+TIUZjSsDfwsO3X4FNbUuRLIJjYnf
XeLavliDI3YfvSdh0Li71fAh7bMGNYo+i0INhfNkgbukZhVmnubWms5RqOGy
hcFOq6BhlRjzpihUe3WK64aXob20tSy0hULPA/a55pHLUPhVVb11A4UCd+oY
b0oDifNBo163KLzPdR62PK4B/syQVVXp1r5Hts23liAslp0SI6bQ1cPtEFu9
CKeT7WdFWRRGegZYcPcugpC5nqQWUljE82o3Jheg0q7cvOFzCju8FZyKoJeg
6H3tcV8chSUNDlbhvn9BtI8vOnMo/JDnYN9GqGB3vd/VC/YUSqIljnT6FGQl
79zJ30PhuctXAjQLk1BbmHFXtYvCPlH7B3Wh45DDrMlmGlGY9HS7T5PnGNj8
kZ3Zs0Hi+ZQ4N/NsBcStW9buXSCxKX6C/eCEHBJSIzatZ0j0v3Na01kgA05g
aGqjkkSNRYptiY0MlgcLstzvkLhad6FBwpJBD527NPQTiQmNV+GsgQy8R6iI
xDISQ1we/96zKoVPkvsessQk1ps5BvXMS8Fm3459kkwSv4irmIiZlULunGmG
n4DEXzwOnqlTSeHHHuWY+jyJ/Pi52eJJKQT/GuuWH0li6hsd8XbjUmhqbBZx
Qkg0cWh8cUIphQJXD21IfEt0V+fuRw7CYQcSR6bv6bwRb9WbaEWiI79ZZ68d
u7Qhka26r/O5asMwiSGJVRdbdK46tlbpt0bgkEWbzspZtTYElv3WrrN5joqX
ryLQIKdT5/cd5ekcOYEmwV06Z/QOaEOgMUsafGNFCmlO/M2WTgL5hSbFxcdl
sM5y2uZ3TzsvP/kzZ0wGemkceXotgUbT8vzo63LITohLC6kkMLw16ahvhQKu
zfy59KSUQGaYq7xLNgrOz4sOzxZp73dsf/c5pYQjsdrxPAJD5kySqufHYSLx
ho/eFQIZz/YLzYYn4f9/J/A/QtHdfQ==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxF0m1IU1EcBvCbMi0Uar1o0qzrMNRQy5RQ8eUB8ZxbkMLow0iYlIqVka40
tanFVhElLikMNzHKqWEKlvTCUlhm+cUohGxhKKbG1FhKWy7Jrd17PvRwDuf8
4PDn+XCiTparSgI4jkv0b/HkkixZHW+CIF65KwKK4w7G2uWb0G4YVtTWCnBV
3Vwxr4YgqXxHXK5WQG9Yn8lZuRkvhz3RxaUCRmXv5Y4ROQ40nN0yUSAgryeW
8Lu2o/1BxZIpT4Cj5vTinqEweONlz59mC2jVGr3feyKg4vdVRO4XoLlr0lfN
KWDSTUdMKgS0VeS+mk/h8Slr78DSRgGRMiOXVsjja11Jy5kgAYvB6zear/JI
f1SePhUgwFdjPPbTwsNhy7lPvBSFalKksvFYeDcz0uGhCO6Kemad4JFhPfzY
vUKxdiLqSKyDx5xJp8pYpDjUmKs0u3hMnaq2Vs9QDEY3ZW77yyM+OnO2+zPF
r4t/zLe9PFKS/RmgWB/ySK4fj6kf76ZICWce1SpGtW0ULfpVyVvl/jRTKDnm
gn5ZQf81iknjb8ld+WuW/EsUtiTmZac/5yg+zrslpzXNpjYVUYT2MhsS7PoE
NcVYNnOyFIpqJXOd2CeGoj7Y/b+PgmLa6ZIsl0LRamc+LvaRUTwZYe4U+6wR
KAeYnVIIljuYU8U+swTh95j1Yh87gamReUwKwS0D89tEjW/wNUGgjnl3WFxg
/gsC33nmL+KAPoLLZczLlWUNaguBoZi59Mc39wczQaiGOWvhjn8R7FQzS88b
CXpUzCEXHuZsuE5gO8rM/jPBP5rjWXY=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-6.502802974026736, 48.}, {-10.502802974436122`, 47.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-6.502802974026736, 48.}, {-6.502802974515248, 47.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-6.502802974026736, 48.}, {-4.502802973318012, 47.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{0.6806891125240782, 48.}, {4.4971970297225425`, 47.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{0.6806891125240782, 48.}, {-3.5028029721611347`, 47.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAABihiDTI5T8AAAAAAABIQCi0jq6v
geU/9IxdvP75R0CLzKKHvjPlP4yUgadb80dAKGHdE2He5D/CFmzBFuxHQP9x
PlOXgeQ/mBMdCjDkR0AQ/8VFYR3kPxGLlIGn20dAXAh0676x4z8ofdInfdJH
QOCNSESwPuM/4unW/LDIR0Cgj0NQNcTiPzvRoQBDvkdAmg1lD05C4j80MzMz
M7NHQEPTKjsy4eE/WXlI+f+nR0ASrBKNGcnhPzoNn7cnnUdABZgcBQT64T/U
7jZuqpJHQB2XSKPxc+I/Jh4QHYiIR0BaqZZn4jbjPzKbKsTAfkdAvM4GUtZC
5D/3ZYZjVHVHQEMHmWLNl+U/dX4j+0JsR0DvUk2ZxzXnP63kAYuMY0dAwLEj
9sQc6T+emCETMVtHQKobjdwHouw/8OWHBxxNR0DU+UFkGOjvP1wGacUDQEdA
ICahRnt38T/g+cRM6DNHQHUJxytR2/I/fcCbnckoR0DqppLhjR/0PzNa7ben
HkdAgP4DaDFE9T8Bx7mbghVHQDUQG787SfY/6AYBSVoNR0AK3NfmrC73P+gZ
w78uBkdAAGI634T09z8AAAAAAABHQD2cym8=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwlkg0s1HEYx4/NyzKSOS8RKXlpTs3dTDb9Hza/363NrtiKDseRLS/zllvz
tiIlG3mpq9MozcutkLdQ4Wc2VFhCXCbuTpRL8v5ytXT+vvv+9uyzZ7/vnmd7
7ITx/le0GQyGq+btVYZFRS7n3RzFoMWF+WlGU+TyLMUPCOX37mBQZfhYdPcp
KIf6W8dFqxgOqwZE+eJpKsQ4OdBEhUGcO+6+8kdGaaU6qyVyDLyJyoQXnSOU
6c8afcNxDFm1cdzrbf1UScRSdswHDO1MN5Qf2EjdnP0b86oTA/fLsOf2o3oy
FT3arXqJ4aC5epAJ70nlTmKWQQWGli72tPTNMLGNDfJKlWA409rfXhs0RqJi
fNxFRRisVj1EZhkTJGPLJW43F8PFpDtm8/aTRGBsqWTewLDo3iyxujBFjFp1
H7wWYZiiOnZbtaZJ3o+NHFUsBof8Z9x29xkyVjPfIhViGLSJuma7PENUazK7
9UsYShX3vTfN5IRNa2+/xzSnjzhmjDhi8IYKmvsTrTXGkGRdRfMhWhjkMTU0
X27Q4TfoYMhzldJcxVNX8tQIkiL3+0u0EDw03P/vUTCrMQK1835+FkumMYKo
rnyaOXvjNCOIu+fmW8SWE786f6WWFIF+Auu88K6c6H7t558qQ8AJyxRetVCQ
0J7iJ2+LEawJTqRXyxUkIKS5rjoXgW/8sTJLpZIs1DnfXs5E4FSQ0ttj/Y3Y
tGw4SVIQlHfYbFQUzpGVeHPx01gEVeojLm1e30mEomBINxIBcJOjte0XSIp+
8McBvibf4WxHROMiqVaanhP7IYh28TxZ/u83kW0Fh4UDgoBa9qQsZ4XocTkm
LA6CT5+FLN7iKuGMlgp2nBA0Fj83anJbJ2GSQm6fjSZPeSBTK2iD5JUyh0qY
CMR92Wlegk3SPO78K9wQQakXUy/Kd4tM+g1JT+siYHDJ0TSDbbJ/zwj+A1wa
ZtY=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwlkn0sFHAcxs/VnZcTySomhhRaV41rsZq+qf1+0guV6ppQaC0mQ6OuMCYz
rusuR0tWXZ10Rrqssrz8fs2G5khXJi+R17rkunTHEQl9tmfPP8+ePX88LpHx
R88xGQzGlgUtOkPoOTvHHiSMJQJAv+r4+EnBECkcm+9WT2NIdT1YGeQxQmys
Oa7lExhuv7byH1n5lcTFuHTkfceAeopL7HgaUj7nr08YwJCTNdmlkYyR9ub4
9PBODOEvHfr5m7Sko6U0+YgKQ5RPdvfzNB2pZ491BVIMA6eGuTmsCZJ3xVcR
WIVBsfvJhXLFb+Lrlj8cXIJBOmse4ligJ60CsqG7GEN2NSu4J9pA5KJtco4U
Q3rS3bBRu0lCIkYjRnIxXOO2XPNTThIH7Rf++QwMGaPSiiHuFKn2db4pScGQ
e8/4s0M0Re76y5nRcRiKjk/uXf1xitSbxVX1RWJQckQK2dwUcRMKZCZ8DN6d
tc5XOUbivQQG9wnxw2Z7I+FWHB008cDQ2GXtodxnJMLeptCtjhhsRL5KntBI
Dr25db9mFQa2tZXfMZ2RXAytqnhshuHx6RttlgnTRF/mma37i0CX/CryrNUM
6a00eNwxIBgOE84EN8+QjTFrCx/8QJBlY1nYc+8PUXeJWtnDCFor3cNy1QzK
W5xThUAl/1xXkGNCxWr3VHUpgvXF+U4yPya1TVzXlFCM4EPB/vRyPZPW2Cwg
QdArme9/VbaM5ihZoc+uI9glfgENZ5ZTwZEZeZAAgUEcK2tbw6L5v7Ra7UUE
plIXZreKRdslQz6iKASJdzojRzLZlOf1KZPLR8CT3WjQ+ZjSOrVKpTqI4Glp
StG4xpSmeIfP1+5B8D7kbVir2IxW23suC9qBoOhJ5gox15ymXucuFCAwf/RI
sZ2a08bk2DS+GwLnfZu96gMsqHR80PDOAUFf3rpSzyYL+k2T76exReAvuGR2
eSeH0oW43BLBYWveCUUJhzolPdxrwkbAOBAqrmNZ0v9/RvAPff9m6Q==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwtUwtQVGUYvezdXaA1ai1UVoYRQxYElFhHF0P+I/nfC0xbSRIooxQIBQUE
MrYIIYaYgw/QzEZgK0GUIJLkkbDGboDg4pMs2tUBifXFxCtAWTCgtToz33xz
Zs45882Z+VxjUsLiBAzDwDpPN5NTGljWKn5KrQjG8qIR9dRJMY5ViLSPpnis
3tqljssSYx67tHTNOA9XAx/4IEyMmOfC6y/+yWOgJ8yQvUyML69+NfG1mcfR
4jEn7wkRzq6bi26/xUMmkPuONItwOnrnpLKLR450VHIpT4RshVA72c6jw6Cq
bggWYXVjRaXgAo/B5XhRayvCtdHY9s01PPy2L/rF+7oQGU0r5EfLeWxSCc1U
I8R2bUje+SIer99neXGaEAXjdX1XCngsWblwNkklxFTMR/7X9/K4Kg+0+2Sl
EKfsswp0GVb/DXWcYpFV/+D3fk0yj1qPDscjtkI0/p2rSIzlMeTr6XR8hsVL
ITl73CJ5MEOalKBpFop/Yc0b/iBENcniRLWs0CTnofy1uztpmMUrvQ/mH3bm
EajpXXjqDosFF4u0b0p59IbkzhvtZOEZo8h3FfNwvtVWt7GGhbr+h2zmCYdH
qrLnDQUsbHSOJ4ZGOCSWuyx5O4FFa3a06eFdDpl9q82WABb6icNkzMThXeOg
xidHAHXf4aqmcxxuxLrsjQgRoFUTu37HGQ5lbzTud39BgPf9t/R4lHDoLv6p
qqjHBom1abtvF1rzg72Gaits0CKplh/I4xAdLlClpdtgZ5B995pdHBpagi7/
Bhvsi/gs/49kDkmFg+/1PmuD4VA53R/LYV/z3NKDtxnUOA+IvCM5MDKJx821
zP/9cLBMKFNX2TPQNnrW3ZRzWCzVP5Z9P0d0Dm5lO505ZH3LHLoQPEfW+y1l
nKUcFtQqylX9syTAze1yq4jDgM9mcm3XLKm/6ylMnqYYc0qNCpw/Syp3KKpk
IxSrPs6c0lTMEFkX9AYzxVmqdhpaN0PsZja+mmmkiL+/6eSs8QlZ9fScWgrZ
vSufG7c9IVHPxIV7V1Dw53ZLNJ3TJGCj1MOkoRhVJdm95jxNjLbKKv9jFA7n
v8i/99YU8Vph6lUdoDgzajmSkGoh/m0TLY65FE2Tx12M6ZNE0JkfcSSTgl5N
8X1522OylxSX6NMpQlNzO9J9HpGf3dyPliVTXDJ3mUv7x8mPGV7KtQkUQdGn
2/y0w0To/p2DIpLCo/2v8YT4++TDjr74PcEUn1okVd2HesjgVgOWraVYIT5Y
fjvtOskbiCtx8aEofOeQpTOrkigTGzKSXCk8/Tboi5qbdcK+JqN0IUWre+mW
sA1duoehOxolDhTHSk9+k5Bs0j2svLM4SkzB6G3XP17Qp/vv3yn+Aax5vcs=

          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1QtMU1ccBvD6qJswUaCUVUFj4gNhOESDuDn36bn3HmQyDZnIw22kIs5o
EQ1Rh9YhCI6HXSZMcTqmocqIQ8nq3FRgiOOVoGGg4EbDkKLiqBUfDMsUdzmH
pD1J0/zS3Nt/v/9305nabZEbxyoUigT5NfKe1vnf4pkvNVCwE4a15iHmZ3kf
VwzbKV5W2ZnzCvaXxD2lSM16zlyj3npVbaVoDB5kLvT0dQnqobBeG2B2z5Uv
6KDoWvKM2U/fMlffQlFa8IS5+0Hbi/IGCuFmP/O7f5xSkCoK03Mb86KF8jFR
+M96yMwuL6Gw7O5jrt/uU7/9BIX53wfMHu7y+ZrCs6iXOa5cGVeeSZGTdJ/5
zOoh4+pUihWf3WPut8kniSI09y7zEoMl1LCBIrm9hzkj8HZ6YDTFt8TCvJAd
ilXZuvZDdg2sZyO7x/hRLJUmXWy1aZDVXh/3ti9FfGpN6xOznOfFw99f8aC4
OvtQUN81DaKpqezM6xRxYbqmimINDufOy+ofljC/W1uyaa8GZ9MH/I4NSFj6
VHe1L0ID41veR05aJaTvMUxd+aYGe7MN1yf0SPjCoqqsme6NpkRj0CKj7MHw
tfY7amTs3B5sPy6BVm45F/WjGutbezd/mi/h1qJdDX/p1YjSu7Qn5kjw/0RX
nBmlRlJK2+eT90uQlnz4/roQNc78uioyZpeEgDrNidW+aijCdfGCTkLb+OZL
Sa5qpPqFGpu18v0HkgsvKNTw/KjMd3idhLSmYTkfr9F8JGgvvWJm+5orf3+2
InTEbF8+EtrfG8PM9uUuIeEWd+zIvpTy/daMZT49sq8hEf7nuW3siEh4zB06
si+LiADvccxsX7dFpHlx8/6IyFdx72P9EfHNNO4G1h8RB/25PVl/RGxczr2e
9UfEgvhxjnlSRVizuB+x/og48jM374+IQKvTPNEiIqrHhzryEeH+insPy0eE
NkTplI+IFYncLB53EecM3KzPShGl57lZn4cEBDVysz7bBEgdSqd8BPxzl/sA
y0fAvftKxzwmATGj5s+XgN/vOc1zQsCcUfPnS4B+9H5sX5kCbvRwG1k+AlSj
5vkIiLQ4zbNBwJfd3OksHwFNfysd+1ooz/cL916Wj4De5UrHvnwEXNePd+qP
gKNbnPalFBDm6twfgs71Cqd8CGLjeV/ZviwEl71eLHb0hyAt4qmjzyYCGjkv
5vhzeZ47Kf0BPxAEdDVXTOzzQl3ZmoL27wgCBx9ot96U91VYNz2kgCD8aMoH
1y7I+Zxs+4rmEmRWJ+90y/NCcV3afdcMAvOOTktErBesLrWzM/YQrDlXmb9/
hvz7dcXhZSkEXTvcsko7VNA/nBaVk0RgqG6+XGtQoTZ3ftjUzQS7q17TVu3z
xG+2Uy2aaILg7t1ZYw94YNpAryopjKAyYJbf4SJ3tBWNm+z9DoH6+ESquzEF
tr7H1apAgmVB8yz5nlOQaDb5b5pJkNymtLua3bAseeUqN28CRWHgnINXJiGl
5KfZLm4EC043RhyrfQOu6Y8uxk6QPx/+c9uKIdfR/wuC/wGaGo6Y
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN01tIFFEABuDZbkKGpStKaZoUaIohJahF+ss5gz6YWxvVlmVspgiaIdaD
1o5mClFSiUUh0Y3VBR9C8K1WwsgSyswNvBSVWD1sSCm4QSbWzL+w0+EMMx9z
4T//YZJOnLaXL1MUJUs/jLMyleay+j7nGZdKk4qUsXQ60HbMu1SvIsOSQV++
ccFTUqciyrmdfhZTPRBTreJtIJO+bd24OuOkisqnWfS6K8YLKj7176RTXL5k
l13/3txueso/tthbqKL0cD6dM/pAEbkqKn5JegeHiuLxQvqc/rovWcWG8D30
y9p4faoYat9HR3KoOFR1kC7pXalP/f6tErrbtuC2LUjExzrp2R/GkLD7K+js
q1/0KVEdcYpuSZ9oTp+Q6KxtNvP0STTOXqKN5fg8EgdSr5l57kgkJN6ko4w4
7RJjbzrpI0aeVommnPu028jToD9/vIv+acSpkejJ6zHzlEmkfnhENxt5HBIV
3V46k4Ek3lkH6PPsR6JofpAeYj8SvoJXZp5ICWfEKH2U/UgsFozTXexH4N78
x//6ESiO/hbcH/YjEOaZoS+yH4HMXWGa2Y/A9ecRWiiPR8A6HU2/YD8C/R3r
NbMfgbbJeC2Up1WgsS9BC+1Xg0BnUqIWylMj8H5z8D7zlAnkP47TQnkcAsNf
Y+nh1/ooEnhSb6UHt5X+9eYL7LWtpTfFbF1uyxJoKQ+nJ1mwgMMbXM/cmSrN
sUVgZP8KunJmOjASJ/A9zULn+Tty/VYBt1xiH2f1x91rBCx3/9DhdQ+FZZWA
kv3b/L8UgX+CVYgN
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJw1lwk0lPv7wKekm7QYW5bBzDuvtLphjLE/syotljYVKqKo5E6hJkqLkkIo
xSWVIrRYW9zUU6pJizTUz5U1chUpazXIf+796znnPe/5nu/7nufzfJ7n/Z7z
Mnx2uPuNp1AoI4rr3ztSrTbtGGeMlH8j0glUerVL3SnGOHDC6+7PPU7Q95Gi
qzNK4vFTB7LX7XSCsB/9kfdHSHyove2B9jYnSKb39SwcJvGshsHkBZucwG39
0NZiOYnT/3vBCXJLpn4Z94PEWREykwh3JzjHnLPX7BuJzR/fDucvdALTHFc1
/gCJ1q8vUPgOTrBWdOA6u49Ei//CCToHWAFaPSQqCX1OykycIK+wbXlHN4lt
thM1xTQnSA0/GXSji0TZDKN7VKoT3FrOuRP4icSXtVfjCpSdYDyn3kKvg8Ta
fTei3OQiCJ8d3lj2gcReFZPMnm4RkLN07qxsJVFHovFPQqsIhizyy1uaSVz2
apebea0IirldZkW1JLL+xSkSgWfthwmz3pLYGN5zUpYtAv01FuLEahIX6/O1
xWki+Fxes6e3isSwabPKqQkiqNJ5pr+wkkS/VefPFESJ4NlqDY+k5yRq9uUl
uUlE8DYy37TmKYlRbc63eoJE8D3pQsbkJyTenBMxPtFXBPMS2nPZ5STmPuaF
mHuIINJW/uXNnV9+RKDaSyE/3yTRrNQ6UWYighsph+PlRSSmqG3SF9NEsM08
yvxnPomB7MJKKlUEdnfHT/1+jcQLc8mrBcoimGU1YtiRS6Lg650iN7kQZmfu
2lKZraj/8M4PPd1C4FMCPuZeUvT7H1duYqsQdi2ruxBxgcQMPXepea0QKE+H
q4eTf/kRwsvHLyr+SiJxSkNIkixbCPGuaVv/OEni+LQVdHGaEGDL1jsGsYr6
g1/9TU0QQusUmyI8RiJ3Tfv9gighhDlMWrP2CIknVqfI3CRCGB5+k/vpIIn9
gR3U3iBF/oWZV/7YT+LupOqIRF8hNNGD3b/sJVHv9VptCw8hzPy8J2Vd8C8/
QqgbPn7hyTYSN956pfAjBK9Zr7xmB5DoqXzXQEwTQsEOfuUhPxIJg+/VVKoQ
ZLKO3jcbScz/eaikQFkID9zuPzfyVtSTu/6hm1wAB7qeeGxcq/BtdFze0y2A
6ZmjKamrSKR7T/RObBXAtpCA+OfuJNb5v+4yrxVAe+DbNp5ojKdIACMT2O0+
PBJ1151T+BHA1bkbOiUOivk/NajwI4DexhX9MTYkJjbavqMmCOCFoea4JDaJ
TJughwVRArDvTKcmmZPYnRX71k0iAIGg1/i4qWKeydQZvUECeD+b6rB3Domm
xUlRib4C0E6Tr/GdSWLmCgndwkMAse7nW7t1xvplIQCX9qsaUk0Sl46uTpCZ
COBd5OSjZ9VIVDFumCGmCWA+ccfed4pifi89fEKlCoD/7LaVySQSfSImnStQ
FgB9j0pImxKJP29cT3eT8+GRad5A6igT7exKHvd082F+Z/od5yEm6hM07cRW
Pnhfb8G+QSambmyNM6/lw87IXd23Ophjfvggnd7Kd29jYk51c7Ismw9RdxMO
tTUxMTyUYipO48PVI5HXgt4p9vUTv1MT+GAbdOPB17dMXFB+erAgig+WOw0x
UMZE6nbVWe4SPpw9/fJK/UsmLtXtO9EbxIdNb+7uFVUw8b10iXGSLx9Szbs4
Vx4xsWa3To+FBx+yzHn7IkqYY374MNGmsaoyn4k7rlFPy0z40FYUrap7lYnx
DeUzxTQ+OJ7nmnpmMzGpfFEHlcoHzdFJ1mcvMnHP+sy/C5T5EFDVOPdlOhP5
BVVyNzkPrDXLJw6dZWLv7deLe7t5EPWspIJxiomHQrNeJLbywLXv5i5uPBN/
fFwWYVHLA/91M3cI9v/yw4OlksGJKyRMLHv/9pwsmwfLamJYa0OY+LSwdqk4
jQdbAlq/rQpm4opMDqgn8CDVmuLmvJWJ64sHQwqjeNAuaHFk+TOx64P6F3cJ
D5yPH3mkuVGRzyo2ry+IB9IpXxs71zHxaK5f3ilfHnhVGMTfWcXEU/Zp3ZYe
PKD4rN19WTjGY8GDCS6dNV7ARDfXBVdlJjxY7MH4oWLLRN0Ah0NiGg9qIobb
ciyZeDzC67Y6lQfn7oeftV/AxEuxsYuLlHmQZ3BR4/EcJm5JqbRbIeeC/My2
VWCs6Md5+omBbi7EmNZvuGHExI+Zh6zPtHLBq+WruboeE69c/CawruXC1NQl
dxN/++WHC7fY3ey6cUwMozwqlWVz4ZLkuVx9mMDC2bFl4jQuVPm1/WY/SOD7
63G2GglcsPvO8fb4SuDEk09ZxVFc6DCrGNn0iUD6S5uclRIu1KifbvdpI/B3
/w9nvwVxgfJnmo57I4EW654qpfpyYfuzpiTzWgLnX239aOfBhbqKkxVD5cSY
Hy58Mzx2rrSMwEuS4dcyEy686Ar5bfMtAn3Vd+jtpHFhjcXqCeMKCAyWx0zR
pHIhrXfe6ehcAl+Yu14pUeZC8pxvd0YyCQz5697n1XIA53cl4g3pBG4/9bZe
3g1QPCHgfn4ygUVlZ0LOtQK8yVI73x1PoJPV+Nu8WoC+sr+exu0hxs5nAIfw
6JzzYgIN+xoo1dkAjy9GKqdsJXBxf/+bnWkAR8wu1YdtIvAv9u5CrQSAA7P6
TO29CAws3Zx8Owrg9tHtwx0rCfTeX37AUwIw10VDuHcZgYlRx3eN2wFQu69t
Ur+IwEkv7wdl+wKgdovTckcCceWG4GUeADNNwt26jX/5ARg6/iNymiGBSt7l
HtUmANf0DlaraBPYnBFjGUIDYFdrLWqeSuDz79EVOlSA1JLilgRlAh9suad5
T1mR74F3uuEIA6ObVpo+63eEL980wo/0MxTnQ/oF/UZHaFldE1HRycD3Ue6H
gqWOcLUl4+I/7xnIMgytfprvCFPfiI5pPmag/3/hCJ6n0ja//4uBs3o+Lc1y
cQQz3hHmmUIGijSz6js4jhDXqFRmnsPAh6/OqJsSjhAcoMUqyWCg4pP+EqLq
CHXvS6MNkxn4YrrRLux3gGfO/aVBJxjoeao4Y2qjA8CFB88uH2SgU0Gk2Evq
AA7txO3y3QyM9z/UdSNfsf/G+fqX1b94HKBUbPutcikDTzr3ZWW5OMB+StmB
BD4Du/ZI4RPHAeL2vVpqZc3AsP73FmaEA7R3idehKQNNS4WRe1UdIGZxdu48
koHaz78YV/TbQ1jqNttwXQbOM2kh9Rrt4frfD6femMZAcaVuRJDUHhao5DIe
KzHwH0wxfZJvD3qrh49tbaKP8djD3i8Hslk1dLz8Qh6a7WIPH94Wn/7fUzo6
HPwQ+ZljD6umnl6xooyOvx+deZhD2ENlItGWW0DH0HdlkdGq9rBss5fg3WU6
au3PC23ot4M3McKQDyl0nCb+4mfVaAebRupCK2Lp6F18bFmy1A6G7hksOnqA
jhNFkgXyfDuY+WcezceDjpv/41E8T9JnFi2mY06KlfyKix38Ln2WU+lAR+eb
tbF9HDs4eigvu9hMsb67iCEi7GDrmodGfiQds/Jiis+r2kH9wunqzdp03Hj4
TyelAVt455a4z1iFjhJReN32Rlt43pH8LHDQCL/2zNveLLWFoQ0hJ4zqjPDx
kWujawtswdl9W6F4jxFWhY64TvW3BWZZy2U3TyNUe8o54+1iC5Pa2KFLHI1w
q8+63GscW5A/2cr0JYywWegXI2fYwoBf5LXTyka4TbzKSqhqCz9xl2ZbhyGq
dZgWxPbbgGbtQo9lLwyxMqv7W3WDDbDyhnfX3DDES9dPq+pIbWCjzcnQ0CRD
TBpldq3Jt4GJOdEvC6wMMdhH0LrO3wbUJh+efVDfEKe1DOWludiA3QNoWTlq
gHEPwLyBYwORlff657UaYLeSRqgBYQPNZj99f5MaoOkVcZiXqg14dv40/ZBr
gK7X17PT+61hQI4rn8QZoLt2XWF9gzXkbhDU5ooNkNXc0qUvtQYJ7djNxFUG
OKga1rY23xruhXnGLRuiYX58a5WPvzWkDFVPsG+iIZvlZXzRxRoCVyy/MK+c
htbC331bONYw/2Cdr0E2DUseromhE9bQcjhgyfTjNMy9Wp+6XtUaoj0p68bv
oKGe0u1T5/o5QFfJiB90p6HSk86whgYOXI0Rfupk09B/IExAk3Jgdktf4Hs9
GvITPOVr8znQXnYi6el9/bF55sAlikYwZupj056IcZddODAt3Szx1lF9nG31
NbeVwwFGUsePa1v10eHcPR+C4EDDe6vsTBd9pN/omLVRlQOCE0apZy30sSog
aCSj3wpWxWfITszQxyWVLs2NDVag1nXLNXJID5PrT7w2kFpB2MUtmjub9PD6
KePXnvlWQKF4XYPDemM8VuA/N1dtZLMeVka7rMxxsYJD5hoM18V62CzmyPs5
VuCmdbbR2lQP/yQZKxcRVvC6mrOoVE0Pf6ar+GepWsGEoIENr3t1cXJTz7wp
A2zoan1pvL9GFx/883eOpJENRywfnikv0UXD2w/qe6RskPnIbp5L1kUT15zH
fxSwwV99yfpr83THeNiwq3T74T5VXWyXWugXubABRh0Oz/6kgw47Kqg0azY8
b77v7SLVQbGnifMFgg1q679q+GXqoCR+6SPeFDaoS6oyA/fpoOcku0jKoCXI
zDZM2+ChgzOkvRF1TZbgeiRjudBMB3Of/1FWVWEJx8Piduqp6KC29h2H1iJL
YKXGwuSQGWM8lrCtZtpZgdMMDNf446umqyWk7NRrWqQ1A8+l3/PPtLGE+2H5
WnpN2iid4FJBnWkJfzdX2ZZc0sZvCwmdDeqW0HV9r5u+vzaaBXKWx42yYLAl
f9USpjaKtyRI0j4r1nuCFy+s18JS/vy4mHoWdIeW/j49QQunDKvGebxgQX1t
nNIFrhb6JcyXTCxjwYGscZFFGZqY+HPG0bAMFvjEW1yMUNHE6OW3iSmHWbA/
iQwc3aeBgpPTlj4KZMGbwpr/cSgaKC3Wm3h+OQu2fOZ3zo5VR/UH9UszHFhg
yRdfkhmrI1Gygnw4lwX2xeuVLJ5RUX7y4LFJ+op8MGXSYgkVU1f4R4insIDS
EVaox6b+//87hQX/B32rRB0=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
+B8GAmYM
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-4.502802973318012, 47.}, {-2.502802971058145, 46.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.4971970297225425`, 47.}, {9.497197030995835, 46.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.4971970297225425`, 47.}, {5.497197030123743, 46.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.4971970297225425`, 47.}, {1.497197029099084, 46.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3eB301zxr6ADAwg0uDu0GkP4X3ti9/yrdHfYJgrh
d09pXB5d7O7A//UGmH9ILOegWI67w4SLEP4MYVkugxR3B6vVED4/WIO7A18T
hK9Re0m9NsjdgTsMwn/w8tqfDR7uDobqEL7lxYUMznbuDg1fr4P5xmDg7rCl
Pul6709BB/vVQY8YNdwduluYtl1+J+hw8crxaH1ZdwcWlh2XP90RdHi5ftL8
3ULuDnL/mgxeHxZ0aLHZvHYZh7vD7aLkM3sWCzosq9Js+/DPzcEyKXJ5eo2g
g2/WV42ZX90crM6kHHztK+hQyS0+bcEbN4c7G1qlPCUEHbTi+s6yPXFzUBDY
s6n+toBDQlL0+dO33RwE7rV3XM4UcMiNF/GadtbN4bjMWSsdBgGH+MkxCYkH
3By6ZohPFrbldzD/Zyyku8XNQfBme+aNTj6HT/Nnxf9c4eag9vvVj2XPeB0m
VUzwODbPzeHkPwfH+mBeB7EO0bOTp7o5/Hjc6ZR4gceh/pzm28ReN4dtq47+
8YnlcTjnfXaFQZubA0Pwl3ynX9zQ+HJzAAA8c79S
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzSDTN2EvK88BEJOhwd3B3hHC/9oTu+dfpbtDThaE
3z2lcXl0sbtD83QI/5BYzkGxHHeH9hMQ/gxhWS6DFHeH0r8QPj9Yg7tDgFk/
mK9Re0m9NsjdQawYwn/w8tqfDR7uDic3Q/iWFxcyONu5O6T9gPCNwcDdweEb
hF8D1H5J3d1hRRKEf7xQBojcHWbaQuwTBAN3B4n2HjA/agNr9AZWdwcV+y4w
f6n/ryX+v9wc9qS2g/nvwMDN4cGvZjDfou8xELk5TPhXD+Y36d4AIjeHswXV
YP4ZMHBz2LqnDMw/qhf3f89BN4d83yIwX05Mk9l/u5vDN6U8MP8myIC1bg5e
tllg/oeS7LqIJW4O2XPSwPz0N4++np/t5hDjkAzm272cDERuDlKaCWA+WHmP
m8OysFgwn7t4kTNjm5sDw8kopPhycwAAYMnC/A==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{9.497197030995835, 46.}, {4.4971970316237275`, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{9.497197030995835, 46.}, {8.497197030613165, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{9.497197030995835, 46.}, {7.4971970314391, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1: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
HreU4bQ1seAZc3iWoQxaS4nJ+UeG/wOw1tHs
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{5.497197030123743, 46.}, {7.4971970314391, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.497197029099084, 46.}, {3.4971970316349825`, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.4971970316349825`, 45.}, {3.4971970319130605`, 44.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlG1ME2cAx2+wooMN7VEkKjXTRSkjMJM6Jpmb/93bxPCysA0NpR8ciAsj
JcheGBMtIpUhQ2GMN4vQwYAP69LZaXSwRdi0xGwfJEY72HhzHuimrcncpAKu
9zwm7ZPncvfL3XP53+//5Na/U5y1N4RhmCz/oZyZB/MvrV9UQ7lkzBLcW3yE
79cZB5c+lrC6jPKxpso+Q6mE4SHKw6uKhlYVSbiifki4NUobvjlfQuq7lFeQ
BRJ0FynrKkbjKrIkFOsWCE/durbg2CFB20g55YqN4V+VoA9ZJKwnQ8Ln+ykr
y0fjJGz4g7KrJNY/JUy8tkSYVStDgquLco5DZXCo/PfnKX+V6evJ9InYkP6I
8F0yRDS1U95af8M/RehnKFclug8nukWYv2W2KrxFieMUcfUy5YNKnj4RT7VR
HlHyWEU8G0s5SonTICLmLfq+XCVPtQgPgvKUi+ifod/vUeKYRHAp1FeKkidP
xI/CfCDPbhEFtntBfkSMGz2EPyF+RHQb7wT5ETHY9RdhokctYlPcbcIG4kfE
jHeOcC/xI8CzOEvYS/wIyMiYDfIjYGlaJnyE+BFg7pcDeZwC6m1yoK8+AYUn
5UAeq4DIZjnQV4OAAw1yoK9qAWc/o9xD/Ag4XysH+RFgqZEDefIErDtK+TDx
I4CxUCZ96QU0VFM+QPwIOHeEMukrVsD+qqA8agFDlXKgL5WAnkNy0P7hoa2Q
g/zwiC+XA33d4HH5Qzlo//BgCoP98Pj0gqH1O4aF254180Q/D90vA+dNESyS
J12GFzp4jNWFWTO1LDJcjZ0DjTw6Q7Zt35XMYm2B095bw6MsMbe7OpuFbSDe
4j3II/+ZfSNjFSwmXfd1bR/w2Ptl7jfZX7O4WhvT3FXEo/zvbW/PT7OoevL4
r2H5PMytb546mqd57IfHVOq5f8+c1mD39PveBB2PmzuTOl+8rYHe/kbTdS2P
EyfPtISFR2O4+dK6ZA2PiZczpnRsNJadunb89QgeowkPyqwh0WB+Ms9GhPIo
fM+5Z8+4Bg7VxY1VDzn0+g61f2TVILqge6f9Hw41vxmfmxQ12Pzn2uzauxwi
l6cvtFyPAmNO2rHmFgfHI+1/ddtZlN60ja52c0hKu5RY6lqJhTtzGtOI//nx
Y/hiIhLtbaErYr7nUOJK6dhkehrpc/cuaOwcao3NJe2vhCNqzPn8PhuHnA7b
D9605fCYUtMiWzj8bjFUxlvDMNV7emN4PQfNmp8HhQQV5ErP2RwLB2bXeDHn
C338P+TwP7yKKxY=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{8.497197030613165, 45.}, {8.497197031953078, 44.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{8.497197031953078, 44.}, {3.4971970321109893`, 43.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1QlMU3ccB3AoFgHFCXhAeW0fU4F5MLQ4cJHxfZdRxmSTxQuZbmUMLxCm
bmJRQAEPFBAy5UrAcZjFYZHNIQ4VnYBO4oZyiYsooE5QzknAAmv71/D+yUvz
Sfrab76/38tz+ip81dcSExOT7frL8Im/xrJSRmmYGM8ytIwR/5cU9PvokIA9
HibZBh9Njy0K7BcgCyO+NmNb5YwuARVniTPs5Fbu7QLUPcRTDTe0CLBeYmq0
a3SdS3SdgIsJxK3/Nui0NQJCm4k//DvPhLus//2FEqM9VPpTKsAtnnif4fYi
AdJa4poIqjoiW0COhZnRdjb6kypg0JN4g1YaqI0XYBdIXOA/nO8fJaAvgrj7
pf6ECTihIV5yvM3ruFrAqyjiAwua4hasFeAMYpXxCMhyI95ryOMioMeJuNqQ
hxLgIiO2MR4BS2cSBxrySAW4OxAXGvIM85hAE/cY8rzkUTaP2MuQp42H31Li
g4Y8TTxiEkV5SnnY5hAb6y3iYVYsypPN47NyYltjPzxeVxKvN/aj//4N4nxj
Pzy2XBf3w2NBhSiPmsfK88Rxxn54lL7pyzgvFY8Dm4k1xn54ZK8zG58Xpf9/
X1EeGx653qJ5SXkkLRTNa5jDZWdxPxy85KJ5tXEYmiaaVxOHq2MSUT8cvIck
43mKOAT3EVcZ++HwfqdE1A+H020S0f5wuNQiGZ9XFAfNXcl4njAObbckov3h
0FspEe0Ph/U/ivZZxaGzwda/f4TG4arJaxpdOCQf5EIddTQGGa1bPMWBP5v+
1GJIv18F8vKlNhwsV5rXXhqgMbP386ERKYfHm0/Ze3TTuDl7dVfNMIvbY763
Ip7RSIdTWk43i+p3FI93ttLYzV94sbedRX2GzSbvRho73Kfr1M0sTJpOdWWU
vO2HRWdnXphZof75/S6gt76IhWl3x03rTP28zf88uT+bBf8oeLTsmH6fH2Y4
u6ey0F5TTJbG0nCSXM15Gs/CN82uv/dbGlvDvUcKolhMCeBK94fQeOFsK2wN
ZzFqWuxXvJbGGdePdnkGs3DIDbgS7Usje2flMat1LHAusyPN/u3zxSIx0jPI
15JG8nWrO40uLHR17KhTvxJTPzgzJZFiwbqW/HCnTolfj0zqgw2L1vaLB3JK
lIiu9NgjNWfRYhF042iyElvuz8q/N8zAPT0zMHObEpr6psjibgb/JEQuu7lc
Ce35gI4T7QyetLbH289Wwioy/XVsM4PbjyznB2UpMC9rTuofJQxmtUoLD+1S
YLjml1ptIYNcBXzCPlUg5osaXVoWg2U5ZYPW8xUoC9ykCEthYL0h/M43Fgrk
X9Us8olnoFsfXLW3Qw7hmHzJxCgGtpknH6y4LkdGJbuoKoyBn4OlbV2eHHlB
XXKNmsHPTWUh02LlCPpSpnNdy+CTjfnsfQf5m34YKDJWD9gNUVj+fUxPmwuD
0IkBkikNFAYs9qf/RjF496eMbTVaCos73JTFNgz8Y+equMMUrK1TUqrNGfQk
SVfv20hBE3P6mZkOmFA7t36PikKsT4iLuhdIYjK1i6UUKN8Wv44nQOLzgGcl
9xyxMtd03ZEHwKvqNZqXeY6YzjZ/vKoOCE1uqtytdkRKXmK9QxVQ1J97ssvV
EWZ19MzCckA7oB3x75Nh6938qYPngLgTFgO5V2SoKbC7NrkQoGuLoh6myCBb
sX3e02zgUP7x1EkhMqgrSvwS0oFy+wqvOT4ynJY8mvM8CSh7T7VjPiVDg/3r
C7YJQExjj6fTiAN5f8UA/wNp7up8
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029699442413, 42.}, {1.9117616010537404`, 41.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029699442413, 42.}, {-0.5028029702885988, 41.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{3.4971970319130605`, 44.}, {3.4971970321109893`, 43.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbCOpcDpF7cDiMnQ4Oqg1XRY/v1KbodUuTv9Pypd
HeJYOtO6A7gdPG9Vf3UqdnWYbhLqIv6Oy2G98X2D+9muDteENHZOauJymKjF
5nQ22dVBZj7j0b+8XA7f9n3Q4I12dci6+TA9YgKnw60P857OC3R12HfwxMJF
nJwONgcEKprcXR0kIrYV3ankcJDXdXuw3cbVoWrOqlusD9kdmszt5ewNXR3m
H/rweYs/u0OS3pkYdzVXhzlN11pi97M5KHuEOTlLuzoU3Inu/a/P5nC45e45
IwGgeRcaeGcvZHVwfJLIJMbq6jAr1pXVQITVYV7a4ztvfro4fGpZWbKvncXh
DndS3PZ3Lg4Kbmuj3f4wO3y/fLet9LGLg8rCgF3HC5kdPu8LC1O/4eLAMG3y
BKcXTA5nz4CAi8Mu9erpHMlMDkf14v7vOejiEB3J05H9lNFBXkyT2X+7i8MT
Lfek7HxGh5tNujea1ro4BM3RVuNgZHT4WJJdF7HExWHF2p2XHWcxOGS8efT1
/Gyg+riPWRLWDA4OLyfbvZzs4sCTsPS6+PH/9mDlPUD3Oe1eY6H+356neJEz
YxvQPSkqoZOn/bOHxJeLAwDS6rq3
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{1.9117616010537404`, 41.}, {-0.5028029700770276, 40.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk1lMU0EUhm/BVkUbI4IbjZGAgkjBheCCOoeZmwYsFheMCCWKIBpEoSEF
BYqkSMGFWsBU0YJoQMAtLokGNBETgisuyEM1sihKMMGqiHJvaYu37UP9k8mc
72HO+TKZ8d2TuXWvG0VRq7hl36lU/+1Vehuyl1QRDRdCcYREYkN3mmVpI0do
iHh0ZlHssBWpJ0tig7Jp6PMUed0ss6KMeYOtjQdo0AQZBSk+VqToC2lOT6Fh
meCZ9WC9BVXtXDg/O4GG3gYT88rPgt6Utgofb6ZBNzWaKakeR4Hp1uI4CQ2S
5cbxSv44MlDfCsQRNEyIDO5/95lRsFTFSEO5+ZN0OskXFvXzMtmH/jTUTBEu
9c5i0YwRLPOeT4Nf0Kx3ydNY1OLD/o2bQcPz/ZfLgu8xqLew4nf+JBrOtbdK
lVkMKvSZTp9gCRxfLxetW8ug87/2Dx01Eah9pzEXzWJQKK+pXz5AwKhZO0gs
Yyhy47NgXyOBlxl5fcdGx9BKe+4SuFqf7+CCrgBVVyOBdG2BgzsUoicKA4Hp
QSoHe87kUkHgVK6T5bf4ibdKCAznOPlKrLk+No9ASKCTf5q4HCIgO+nst0Y7
sFqbQmBLnXNesdioFscT6JTlOjjMIcT1C8hxsMruE8D5ZSsd/NTuIyLAW6F0
+cwkMLpH6fLhE1ALnOcb7D5mDNdEuS4fE4ashsMunwEMb+vyXD5GDCsnF/93
PxiGTQnJXW4Marux9TOvCUPxjp7BVjGDunufJIbWYDCDR9YGJYMyOyovPqjE
EHPtk0X+nkGnU+/euFKGoVCfUj47gUXhLUs0PwsxaN10vgfGWJTa/iewWomh
4EdaS8JtM5qrmaOvy8AQlTQU97V0HG2zaTsFqRhGpF6jHvkW5CWWv36RiMEj
2mZ4EGlD+gmvjfpNGO7lU93xQxNoQpi0OxkwjCnKYxT3KZDFh3mKwzB8bFuc
cz2dB+re87vYQMy975eDPUI3MNTpojoWcP43VbX8SxzXendWeWMIk0XU+Pm7
g9q45HuyEEP4FP7AqrPuIJN1Ni0TYKB6PmRiszs4/heF4R+ILJ4Y
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwl0glIk2EYB/Bvh00bVg4vTClz5IE6O0yTcn/e76skzJkWWs7MSqKSvCDS
mmmlqLFpmdo1rQgd4TqYHSZFB6hlc7msTFuUF2rTRFqZgrZ9/eHhfX888PLw
8Hrvy4hL41IUFWwt20kdEO+srJ6T2q5UAYOSjpK79+3npWSormIkl8HXUGno
cOm89KWlbJqbw+B0l0+OuyOFk6tehMmOMMh12P69XU4h8xKJ0e9j0EN80/hN
FG4GLN6g2MVAraifeyPiYNHISk6KjEF7c6fWM5eDh+9K1dkMg6Q/ddl/hzm4
Mhjm9DicQfw6j22pci6afVbJJYEMfoQIUiN1XHwZeqrcsoJBqSB/x8A8F+pE
w8E17gwCn+T7xhIepk+kjU05MuiMcug9m8fDuKzApZjH4JjOK71Qw4Oie9mo
eZrG8pkW06a3PGgcmDTfCRp6z8Fg4xAPGT/NpaEDNE4trU5ZaeGhq8gjwa3H
2m9+n0FmeFhji45GYFk365NGX4WxgUb/oQ+sW7M827Ku0RhL/Mha5GTNeRqb
Ez6xlt+zS7pXROP3gR7W9bKZW7I8GrOFn1lPTlhzlEb8nV7W61UD4ar9NOZH
+1ifCeo5HZRIg5J8Y72WHYiGyvltyCEOH2ONcf0cPxo/lilzTK58KPrakiRe
NJZs9wmvi+Bj9NmFuhaR9b0GVf6ddD4kCTptvT2NZrFhs1DLR+wt/+LJOYLI
tsGKB7N8RNdb/C5bCJTlBrk20Q7eyW7V180EDYry21Ov7GBsV+kXDBKcOy/O
K9q4APLRJENHH8Gm3VWdpuUCuLxx3lqtJyi5KDoc+EsAwZB8b+pzghhci856
ZI91EWtFQU0E6uTVxxoPO+Dq6yspfzUEmebuYZPjQmyorIhqrSXoMJ+ptbux
EK41LvrKKoLGPVK1j1iIgA/+46lKAmciGAirEeL4Nr0mpJiAqrHtS4j//5ng
H2sROC8=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwt0w1MzGEcB/D/hWvd/3r5izTHKC2FcpJ1MfX1PP9Sox3ROmVqFOKSLuEs
eSdDUhOhdXr1smt1FZu3zUxncxcrKgrbNRvTG1Ymuvzr77s9e57Pfs9+v+3Z
Hq+tGbGpDgzDhAhrfGdSfOKKiu3h40fmKA9vqaFe2T4W3qP6Htag53FugeeT
z7cZRPGv6wN0PLS3dr2vPyPBQu9STUYaj6YcszHnpAPOtcYvPZjEI7UmUBVp
mARtHEOiNvLI9TPoXbomw3Kn+OSn1TxGxxS6t8FS3G6d+Wflch6fA8q9rhsd
IbWer9q2kEewKSgvKcIJtpLeE+sUPLbfdAt+2e6E6Jap3j+n8Zhe5uariJeh
ICH5ud2ZB+4GbVE3y9AU9jY9Syr0e76/e4cPi/uHMhXr7RSOA92GlEwWV12W
tVwZoqjyTb0bYWShGZlzenUvxROt619ZJ4vhlUE02UYR97SrsPE7C9273VNs
HRTX2l5kkBEWS8fTQBE+YlKmSeRoMcbaJLcoLpfosj54yOH2yZy4uJSipN5R
VbZcjuHmwrKHhRRRRJdbq5XjaGqDsTqPonqNKZI1ylH7wP/0YC6FyWouaPoj
1JuH/EqyKbQvTJuNGmf8yptRbNBSvFmRdefHM2e4O1y0SlMo2ESL6UiXGwJb
KpTBPhRn46/MjPbk0De6N+i3QphfeeDptxgOTge+pCW5U4SS9JodORyOhco6
tssodioPWh5VcNgQ0a53lVD4ZVxVfnsm1K+tjd30i0Bvt7b96ObAhqYn830E
CR8977X1cxicq6p8bSOwuOg7LvzmsCTWONveQdDQ2x/iNcr9fx8C9bSBCee0
zj/cWkNQoBJtzpxlzrxBkL1J9FROyCUC+37RiXVTEutOESy6JLpKPVKpPiTU
a0QP9AvZQ7DvoejQ/B5V/jaC/JeiTwR0Hg/QEMR0irZahKwlcO0R3Ry4ZezR
KoJlfaLnevhPUocQPB4W/e74eAOC6jHRg/t252p8CH46Dk54Z69t6JWCoNxV
dPjXorCv7gSNHqKzheuVcgL/2aLZrHIqkRIw80RP/C+G4B+hu3Y5
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlXlQE2cYh8MRFMQjIQQSEkYGBVSoVVRkRu1vr5TSilSQU2S4bIVABYoW
BOVUFKFWPBqOiAjCtEApULEDVkatMGhFESpCKyIB0RZRPKAg2CTbKbzz7ew+
8+0fzzy7O2sV/MXWMF0OhxOqPjRnzs03TlZTUmguOckyJEvS8l6opJgXmeg2
HS9Dje+csdWtUqgEUyO+sTLkpqVtHqiQImssRcWXy7A0b6xwbrYUU4J59stC
ZdhVGDJUEC7Fhshvrxf4yxCQ3WxfzEjhylleF7lVBp1w6whzSymsb11+le8i
g7fj3nPvXkrQ+rtvpu0m9f1PrnR6N0uwSTwetchRBqagPa9SIcH8rl79elu1
34YFEp5cAiMv7uXtEhmMW+N8UzdJ4Hji80IdngwDtKGHDk+CQ8cNi0q5MvAr
W+bm9FvA8NOh6y4TDHJ06xLsLljgQps+/69nDPyYG+W3My1wfEFgytF+Bl/F
Lcg96G8BxfwxgUMXg0yuMmBbrRjh1sOT3ZUM3ju8p9ssW4ynm4cjFecYjN4J
NvaLEENWEmu2TsHgVm/wSws3MZJtksercxhcrdnzdcBaMY538HlG6Qw6XJUP
La3U+1Urgoh4BtNl9wcDeWK41rUOeUUxoFrtihcbiPF8YKTMNYTB2R+z+EHv
RIim8pUSHwaDZ/TWW02J4KgdBo02+lre126b1G7LwKmQ5eZoiXox8NTjapmn
HQY8X5b9q7nqxSBayfL5LRMlWyZoxN1l+fkzzdAQj7O8PqdfvWiEGBtoOd2h
K9Whi0atgcGMTy2NY7osJ2l8ytT709wZnwIaFpMs8zU639C4Nsayn8Yng0bd
K5ZLND4JNB6/YHlEoxNFY8fILJ8Qtd8wy6kaHx8ag4Msr9EK0fhJxXKitg+N
vj6WW7R9aIQ/mOXDo/FJN8vbtX1oZHWyXKrtQ8Hm9uw+FCStLDtr+1CQX2U5
TduHwuB33Fl9KDRmzvIpo3B4FcvXtX0ouJXqz+pDwUClN+OTQeHisO7M80qg
sOOKzoxPFIXJIM6MTwiFYzennf738VH7/DLuNNOHwh/VIiZnQgSHxQncJ7YU
GtyT5Z2jIhwpDxu6IaGQpLSvejMgguzm654eHoUleZZGo3dFCM5a/tB8DoUq
yiu5uVGEBwN6r1PfkrDMv7tob5EIl3pSxOJREjFFpxo4B0R4Ky9xf/CYRKXH
meRQHxEKFBGn2/4kUV3RktGWYI6YnMW53lUkYqvqjW0/NscHv/J7J8+R6NA5
nKiUmqPUQ7AnRUGi/fyGzrWjZihyXuozlEMivLBdONxihpV7mYz300kUD7gS
186awcs4bso3nsSXB0o9GxLNwP+ntik0ioQq/JF7u68ZwjbqtrmHkHhRprPO
0NkMbvcD7Sx9SOz0yHBuvif87/siwbP5/uzTeiFUExMDHDsSS1Y6bTuUK8RO
k13hK6QkCqKWeRaGC1GfmNRUwycRr0pR2m8UonPd+qFTc0k0HcOatfOEuEYo
+u5NE5DHhpnWd5gitbCoIu41gf1HnxM1ClMsdHX7aPffBMZ7+n628TOF/MPi
+uZ+Al1BzkkCoSlOnywY29dDwLooQZyUL8APLnZrvH8jMHF//630ZQK8vpNr
sqqJgP9CmWJFkwkiVvWeNKwjIMPthOhAEyz8zKjhYTmBRrk01muOCR7FmKZd
UBK4dMIhtbuej35PzrMjJwm4XOSUT+3mQzD/xmRANoHAe6dUl1fzEZMfV7Hy
IAHO6Ij6/eH9978g8C/K7Y1v
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-2.502802971058145, 46.}, {-3.5028029706674033`, 45.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzWCWMWEvK8sBBjBwd9AodghbuZT5wJKe2D3/fro5
VDk2cFRYMx/wnty4PPqzm8O3BerLNY8zHfgonHNQ7I2bw8yJZkb7PJgOzOCT
5TJ44uaQKrx2pekBxgN2zVMal992c4hR6+adoMt44EnhJfXaS0DzTl2IPTuB
4UD3rWt/Npxwc2j9/9vk9uX/+433LmRw3ufmkNaj2v6w8N/+W5LGxsab3Rys
OyRF7PX+7i/dB9S+3M1hYt4F21brP/sLk2SOF85xc8iz92LZMvP3/nOsgoKC
E90cTvxqSz/t8Xt/xwrW6A2tbg7LFkD4i71+LfGvcnNgM/QEq5d78+7duzw3
hxerz4HN+9Hz2KIv2c3BV1AcbJ+x7o0m3Qg3B5NEJbB7zp4BAh83h97T38Du
PaYX93+Po5uDisNZsH8UxDSZ/c3dHDbtbwP792YTyAA3h/wny8Hh8aEkuy5C
xc0hbp0BOLwy3jz6el7azaFOVhEcnvYvJ9u9FHZzOGdYCQ7vUqDyJTxuDn6v
LcDxwV28yJmRzc2BwSsBKb7cHADTgMs4
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.5028029706674033`, 45.}, {-1.502802970808716, 44.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.5028029706674033`, 45.}, {-2.502802970827588, 44.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.5028029706674033`, 45.}, {-3.5028029706821826`, 44.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN02tIU2EcBvCToYha5CUl0fACTc2RMPGyD/KH874iQipCIG1iOpQQUSZ9
sERN3eyijlXTUkwL560cTDTI65t9yIGscJRN1NJmiOJlpdvSzNp5z4f1wOHw
+/Ce8/AcTnhBWXahG8Mwic6LuzNpJKzS+xdhaFKhpGiC2taUO3F8gCEhcZS6
UVPbJ9nDIB17Rf02sGQ6cAvD8u4QdZt/qFfcGobxzzrqM9yBRQx2+QB1VJVJ
UGXC0DilpV7ZmD/SGzBUT3ZRi+eeM+wUBmNpO3W8yJlhDJL0Fupq7ngfBi+D
mtogD5mRd2D4ut5E7e/rzAMMpoF71FK9u0SvxLBx6g51T+ahNvMWhogAJfXu
jjOlzvdP1FMnqyxJKhmG3x6864XmOmEOhqJq3iIaDLOjvCu5PgIMT628Z7g+
IRgWIhTUvjQYarJ4S7g+7hjUN3n3cn0OEfh08rZyfXYQ/JzkncT1sSBAC7wV
XB8zAua80tVnGEFvNG86bx+CsUilq08HArEPbz+6D4JIC/+8q3QfBBX9vLV0
HwTJUsV/+yAoPK539ZEhOFbxrqP7OPuYa13fS4RAyQx2Cv84SLIu+9uJKATa
5ovnsMlBxpdmJJdCEeTWMOrp+w4yMv2wa9wPge5TzMnuCw4ikA7rej0RPFa/
KN/osRO/wegG6zELwfqaLxpPO6kYskW12VhIiH+R2pNhIzklQa3PtljYCol5
GVyxT/RLKqPHGgvi4r/eNsUeqXOTfphdZCHldbAMTf0ge8sB6a1GFrSy0Ni+
ICtJ2Zdey3/Dwkfz6ffiiG1SgOP9hCMshPUMCTKubJK8ufa8g34W4mIjC+8a
1onoiTrtXScLbqWyho3K72S17azxUQsLmuLyRnmZhVyfj97Ob2ZhMzzrRlj3
KjFcNvbHNbDAaI7AHrjC/1+3WfgHXQCd6A==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzeCVMGEvK8sBBjBwc9isCOF/7Ynd8++nq4PG13gw
v3tK4/Loz64OiUcg/ENiOQfF3rg6RPdD+DOFZbkMnrg6iIVB+AIgDbddHaZI
QPgatZfUay+5Oly5FgfmP3h57c+GE64O1yZA+FYXFzI473N1mOUG4ZsYA8Fm
Vwd7dgi/DqR9uavD04exYP6JQpnjhXNcHfqvQfjCgkAw0dXB4imEH7OBNXpD
q6vDI16I/qX+v5b4VwHVB0D4798BQZ6rg81aCN+y77FFX7KrwytliHubdW80
6UYA3bMFwj97Bgh8XB1e+kLC57he3P89jq4OZfcgfAUxTWZ/c1cHh7REMP9m
E8gAVwe3pxD+x5LsuggVV4eu6CQwP+PNo6/npV0deE5C+HYvJ9u9FHZ1OK2b
DOaXApUv4XF1ON4J4XMXL3JmZHN1YLibjBRfrg4Ah+6/JQ==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.5028029706821826`, 44.}, {-3.502802970788707, 43.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-3.502802970788707, 43.}, {-2.5028029709316115`, 42.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-2.5028029709316115`, 42.}, {-0.5028029702885988, 41.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-0.5028029702885988, 41.}, {-0.5028029700770276, 40.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029700770276, 40.}, {-0.5028029698629553, 39.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029698629553, 39.}, {3.4971970308686195`, 38.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.5028029698629553, 39.}, {0.4971970300874773, 38.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1X9U0/Uex/Gl4Q/8iZUITkNMp1fkhtAF9vP13UCgVGSmIJiiGBgKAhYX
MFERrlcCBINAQOAaClnKaEbeAN8liYpagahEwzsE5Mdk8msMp9CFrT++7/P9
nu+e53zP5zzO++xsS3btl384icPhHB6/J56czJcYnq+miY+cIzIETDFwJT5q
upF7QTkaK0OW+WfZ1RlqenD7u0TfAzKUFZUpIpvUZPf5kgOz9slw7mbInoBl
rXSjrzf+zd0yHExQXo2LaaWv2q1LUwNkePuXU8pf61upIbxU6yuXoeZrMw9/
h8eEk1/I4z1l+MfCmbHW2Y9p2L3jHkcsw7+4573mTm6j/lOZUf9bI0P2SE9V
aXgbuXjs3ZjOk0Fzv63P9kEb8SxVXAlXhqOX0zviXdupclLnQ81cGbZk9udW
5bSTbnrK0S/MZIj4ZIqFarCdGu1uW0kMUtz2/dWj5d0O8t9bXNShlSJEsE7y
45kOSrxuOT+5TYq1Nof0iU87aItgWZxdkxSXf6+0PdH8hJoj0msclFJMyzvM
eW1pJ1l9dtG/vkSKOu+fnyft7aQ371V0ReRLodOfmP1Y2Uk9nt+Ezc2QIvXz
38S8l50U+zS1uyxJipO2Ocmb3broTnXANu84KcaK1f37Urqoo+qNWm24FE3W
Fz4Oa+yimu7K5WlBUnATh+b5crsp2G1D/Go/KZyO/bD6glkPORpHio///U7v
4fU9JFc+SWjgSRGqScuPyuohrs7yUSRXigXf1AoSWnro1Eitm4WFFP+sU9Vd
WqYhRfVghcJMirS19V4jYRqKcytw2mhg4GdTfGV7hYa0KbXVz7QMmn03Wz4e
09Cs7H3yk20M5vS2f5jg8ZQe7kofsG9iEDymjFzo1GvyKBnELVrQbX6ol3or
ziY3lDCw3qmvENb2UvLkaaOR+QzW3fL5QzFHS9OsgpItMhhM3cLbErJVS8F6
5ZryJAbyqTG8wC+1dL7AoNsYx2BFi8w7r1dLN2c7N/aFM0h7mHx3gcszqvP4
6G56EIOE4XVnmxKeUZlXRuvbfgw4wyqvZEHfX/th4BK4zo+/s4/qNokzG3gM
Wu1demyO99FodPTSKC4Dw86iP0UX++hW/h9qCwsGx54n5mTc6yOH62F3ys0Y
xOs6Li80jJ/XZ/fExwB0ba55X2XTT/WLrOwHtMA160Ux9zz6afqGNcWn2oDZ
boOLX9nfT6ojMZ6OTUCu7sWM0Gf95GTcD+BYOFVobzlA76y1/L6hBNj5/ayL
EZIBKkXzpah84C3x7B0OewYo1fZT69cygFjH6fKIjAFSa14+VyYBu7LHklZX
DtC5/G3rN8cB6o+0hj0dA9TslPe6PhwYuNCksJ07SIcvX/E+HQTk+FeX+AsG
KWvhd2MCP8Dp3CeeQXWDf+0HiD797SvvjQzS3quTp9/nAeKv/fT6lUMUvyRl
+CAXON4csjJ0xxCFb7vzgmcB+PDU2f/JGSLn/T8v+N0MKMj4SVpwf4h+UHbl
LtZJEG4182+B83V01eWKY9YjCX68Sus7/XUUE6Z/8cZNCTKPqi46fqmjbp/z
g0XlEqySY6tr2TBtTUrxn7NbgtcDzpzdODJMJxKZ0tvrJVicOSvnFxc9/Xde
8KpYZwk8RtNdlRF6av+7oc1yiWT8Z4R3fKxQT+aq0foScwl0O+qPKGr1ZG8Z
qVsxJManW9OW32rX04bWTRvyWsSwPbY9xtOgp1D+edVYrRjdKibafuoIJdru
KdqkEMNR6WJzcMYIBRtHjKQmU48UexuKvcXIetXV2GltLuOXGIHOpl5qOzFi
dEWYuiJwxvglhl25qd8rHPIqHBLBfsTUj1omRgSNO9/YUdwbkdwbIuzONfWU
AIVZgEKE4DoByyPCDAehsZ8bPSI0lghZHhF+shexPCLUXxexPCK8GiY2tpfR
I0TAWxKWR4hGjYTlEeJADVgeIe7WyowdYvQI4ZDtZmyD0SNE1Qp3lkeI8IPu
LI8Q0pPuLI8Qwt2mftfoEWCbwY3lEaDIx43lEcA8VMbyCBAcLGHtR4BEBzFr
PwKcWSxieQQoXy1keQSo2i5geQS4Vs5nefi4tpzP8vBRWe3K8vBxKdqV5eEj
18fUuacnho95YlOnflA1FnuMj9JVppbYyacUhPPxgbWpvzWbOIAPO3NTq7sf
vFR48sF9Yfr+/dZ0XVPozMfKXlPHN/AONfD4kKtN3TPxuhUfeY2mnv/E7fik
mXxw6kxt/H/n8PF/ZxzWoQ==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.4971970308686195`, 38.}, {3.4971970309151175`, 37.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{0.4971970300874773, 38.}, {2.4971970309078415`, 37.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.4971970309078415`, 37.}, {2.4971970308939717`, 36.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxN0ksoRFEYB/A7JiU2HjUrxGI8YqQGYcH/G2Vhc8tKDRY0EiLPxeQ5EyWM
RFJsvJqVmqJsJsXCWHhkFpo87ozHZsqrJJmEuedT179Op1+dr/M/dTKbumpt
MZIkGaNL3aWbyy5LRA9JxIKa4ivh9+kG7/cnIbTInloYc1vfCAe6a+EDQ8e+
4ZHw1M9eSkmLL3wg2N7YierAFSHHfiOcM+TPHvITSuIV4VD44stzRJhdZ5ef
r0pVewRzdVDYrGabMBJkD6rjbsJ5fUj4qDvV171CyN1jJydFM0dw6m+FrZ5Y
q2ec8JDP3pQjG7KdUFPOfnmOppOwk8cuc92XupoJRh3baQo4THWElq9/fcwE
3xZbPCebEGlj+9Q+qQRdETtJhBCIC2p9YgmOsKL1iQDShaL1eQbkU0Xrcw/0
+BWtTwBouWOfHKsB3B/sw4LGH+8+sJ3A92UYcvXyLjCZzlanHVtAViH7ta99
uG4DmAG79fHu/WwZ8MrsyvB8RXge2Glg96vHp4GBv/cm9K5V6Sai/QeC2v8Z
BX4BHHkKJA==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{3.4971970309151175`, 37.}, {4.497197031051428, 36.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.497197031051428, 36.}, {4.497197031040287, 35.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{4.497197031040287, 35.}, {4.497197030979692, 34.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.497197030979692, 34.}, {2.497197031027781, 33.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fD8nbniX0EHBjBwdIiJvi0lflbQ4WtP7J5/Px0c
2pb+Lv43XdChe0rj8ujPDg7/jvo7X48VdDgklnNQ7I2Dw8E91zsWygk6zBSW
5TJ44uBwqXOyS+wtAQcBkIbbDg4Gus1lXBMFHDRrL6nXXnJwuL1smdxKJwGH
hy+v/dlwwsFhxdvflUX3+B2sLi5kcN7n4GBsJbS4VJffwcQYCDY7OITExDhl
lfM5dIC0L3dw4Kxd9jDuIK/D10KZ44VzHBwC5nxoCObmdagUBIKJDg5au6wU
PEJ5HIQ2skZvaHVwmHatZb/NfG6HwwG/lvhXOThM+XguzvAll0PXh3fv3uU5
OKhxS/5TNeZyyJjw2KIv2cHBSzl5rlQtp0OswY0m3QgHBwartTb8xzkcMi+c
OXPGx8GhIPFwqpAYh8NCw7j/exwdHBTvFy4yymd38JPQZPY3d3AQ2rzjU/4l
NoeSFl2gAQ4OTnenh52yZ3PgK8uui1BxcNgSy3/OcTurg9zbR1/PSzs4pJnI
R16zYHVY9nKy3UthB4fIxOPf24+wOCwGKl/C4+DQ+4R9VVgUi4NY8SJnRjag
e/Y9yHf6xQyNLwcHAJ0+tj8=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1GtMk2cUB/DCJgNasLUMghZEZFQUoRGG8LZv3z8XscOoyFTmAOWinRmI
4kA3Lg4R8IYoIl64pDiYaMBRZQEFtA6RKgIyZovzQkAaFXFDLSXQchnwftk/
5+Tk9+EkJ8+HZ1H07pAdxgwGI2S6Z2b6639XLprggDEbXyzQ0dblRDROjgFO
nw7N+viZgxVhWqDEinaTddwf1u+ATGfaF7h25gIN8MSHNntm4RlQvI62S1oX
P60LeLSddt+Aelx+H0hIpU38eZHhfxtIL6Dt6TGdGqD33VThCz0HnZ4xJf0V
QKJC0DxvmIN5BjNJbTEgssioufOGA30W36MyD/BSa3e+fsJBlqpha1M2EDM/
W5PdzEHdQEurIQVo/tvbWVbJQW6TZH9oArDZiuUmyOXALNJ3u0oK2LdOGXzi
OFjaJM9LCgf0Jut44Q/YaG8LzV7mAZydX3eis4iNFLOrcW18IPtyxGeSeDZe
7j7guIsHPJT7Hm0CG0aMtgoLDhDlEcMFlw31zYLxq3Om9yMz1xx8OBcPiDrf
4mEK7PW30o/smYvNm4Quz19QEKxIaCn4fC5C7tZVL1BS0JuV8q7UW+J2pqvq
WzkF25BSI8FOC3jtv9ZYEkZh6KarJGaBBcbOn6tduJqCbE9KgaybhQj9tuyI
FRQc9+UMaIpZiC4ydw21o5DSui3AI5YFk9RzFSxTClW7dL8e82MhqNhkLO2j
GDXb1loOOrLgNh7qUPlcjFOl36VtZLFwrei43ZkWMfwFAdqWSSZUyRffe8vF
8OD17/bTMyGdjRgZ9rRHy9fry9eLcdSWdm6/93SJEWhBe7HjTMSoHXs569pI
5nSJ0dNDe41s+CvZMImGRto9L2ZCIjif9l6eMoGnJFEYTdskTD4nTE5CWt73
v3tI7O21P3LpAxO93zfeEweT6GV2d3Z1M7HMMNgQJCRx3dk8SFnFRKCNTnKM
T0IjuKE9tIeJ5YruuAkrEj8u7Ws3XcyE5mM+v/wTEvHcrCebms0Re93lpwNa
EVoGy7ixG82hmDgflaMRIaOG/Fnylxn6H/f1tqtFeCWpLlQnG2NLcFF6aYAI
T11iDryuM0LVlRuXdJ4ibObnH9boGeCv8QlJchIh3JeqbfdnQOlpd2ghV4SO
oQ6rwC+mqBzpdp9hhggjBTamDzomqH29lknaf4RwS/om0ClznDryC8/L7qkQ
SSfyHoWuMlCNVSdSE+4J0dbTVBYzT0/ZTkVJ3lcL0e4QFVEcOULR7yPE2q7k
LOlKHbVXGB7/dbAQo+dTE50mtVQCGbu1RCiEMlG6VP37Ryo6Lt8rYIkQDTu8
K1LCPlD+9x+PrLYWoqpbo3LRDFE2G9xll+dM32PpMuj/4R313KTMXTpCYDye
zF3VM0CdHnC/nP6GgK1+kcKt8hVFjKlMR58RSK9Wp02F9lOPvyzY0NZJwFrZ
8dD5bSd1x9BnZFNNoD6xb3R10BXF1rF6kfEpAqwM7o7gYypFtZuDce4PBMou
MGv28/oVvxVxQuq3EHC6yDXKL3yrCMdJ18N+BO4OBlvekr1XNPIu5A0vJyC1
f5ZxNkuraBe4HzTmEUjeuaRHNalTnEzdYJCzCDBavR1SmKMK+j8k8B8g9Uj3

          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.497197030979692, 34.}, {6.497197031092469, 33.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.497197031027781, 33.}, {2.4971970310650704`, 32.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.4971970310650704`, 32.}, {-0.5028029688596689, 31.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbDvQb7TL2YHBjBwcPg648PE13rMDkt+K0zy+mzv
YMjWs/OvBZMD84ZZW14/tnfYwrr5WYUEo4OYbG7644v2Dl/0ThvtmvXf/oHT
jFWGe+0d+MvdF4es/2OfpChTd22pvcP2x7fkDub9tJ+948fDi932Dq9KWpf+
v/HVvptD75pyvr3Dai13c4F3H+2NBPdEnfG3d3jN6bDiafRr+wmXFuWf1rV3
OJke7Hf8ywv77cIngl8r2TvE/LzzgO3aM/twiZ1ZS8XsHRbtuxO/5P8T+/wH
pVt+ctg7zN4edHp+4WP7n9n/DF78tHPweGKn/FP7kf2PXUEPCl7aOax0WZi+
Qe+hfcHZokOTr9s57LlROeNo5QP72MVx1wOO2Dm0Ljix1YL3gf0BGzH5Fevt
HBgspOuFL923nwkGdg5ViRB+d+yef5XNdg4zOiB8W50gtnl5dg7hayH8jazR
G1ij7Ry2nIfwH7y89meDB5D/HsI/f+Po6/nmdg5hvDJgft0l9dpL6kDzNCD8
VyDlknYONY4Qvtgzl3YmHqB7IiB8SHzZOQAAdrXTxA==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN0ksoRFEcBvDruWGhiJSFR5oUJZJJnXO+PMqjZjRWkjzCwsJjpCivRlEa
I2XBTBlpSikyGxSRBSYLNFPTbLxmpLBRQ5iQe89/M1//0+1X55y+Wyens9/U
HasoSr66tK9ydN9fGYmDIgM0+8jPmQcjv2GBtxdyRkGcce9JwBP/ID1dFLAU
BQRussnFuoq0do9AqSBnp2sH1P1t5MaIyxhxCTgs5BPf1nfHosD2BnlovSpm
ZkxAuSL3yAg0fZC/teNGgd6MoPR8SG8L6QVqysi5MgJBA3m3PUkdgcoucr3z
vc75ztEzTL690cJhsJAHs87V4fiaIye07KjDYV8KRvXhcCyTv2QfDmWNbJN9
ODyb5DzZhyO8H92HY+qC3CD7MJjvovswnH2SzbIPw2RqSDpR9mGwl5DtK1oY
xk1ka+vh3+g0w8IAWRSaElf7GC6tZLf8IQb9Bjn47P/ZqWXwHZOvA6evznL1
fj95wqsb9+oYbK/kF217JoP7j5z+VD0bm8ygpDxGvR+Gf8VKC/c=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN0n1MzHEcB/ArPdx1XXc/l5BzSUiWE+Zh/B7e+sfq3O7kaUizWqFVV00P
EsZ62KmuVkYetttaHbVZpTJH/BH9elBxhRpFuRDFXIW6Hubq/OG9z2ffvfb5
5/3H1ztcHRJpz+FwZNadezlP+tWBlgXgzAcIFxkV1xsdkDO1ojB4jEFz75Y1
2Y8coau8UTtsYrDJRzjJ73XCVknsCZORgc4Uyvr6chGyq7hi42MGIqmX9u0t
HsakkvNvyhhkdB5QraL48KybGDDmMJjm2AkcuQKwC2RvfNQMUspXPEufccMf
l/ojbUoGU5FvHzZqRbjbWqJ+vp7BhtnFWeXvREgXNO8bXsmg5SVbdNGLQKHY
EF3mYe3X99mkOEJgpDepdpLLwH91arJbLgHNqdmAoUkaf/Rp8qe1BKINIf3x
X2msjfgRHvOKQEFbYkNRN43Hh7vqecMELCVh3apnNAyX/Q7fnCBwm/TwulNJ
I4pn3uY9QyBqPjSEhM0TpUpLqZLGoIfNWtN261jtabPPyrnQECy3+f5xvnVo
RPyzXDcepBunMLjM5vd9c6GgXWJzoqQpQdJEIVJss9PRKsejVRRuWH7+14dC
RTl7cNTal2mfbdykolDF7q6JHCFQlvGr3nOn9b73tOJsN4Hi3GC51JfCteA9
qzc/JCD+NBNPuVM4U/1iR94VAhKtUJZqT0GZNZuniSJwL/vCpQ4ziaUtPdK1
AQSMRkUcPpLoORP2/aRZhHMxaeb2LhI5xfmT8goR6g45uqawJKrFhX6SASEc
1FnfRvQkrrYnnS3QuEE30GPfoCHBhrUOjSsEyKyc3v87jgTTlJ8QJHNFTY+5
X3OQhIMzu0i7jg/ZsQf6dJBwl8a+bgh0wSip0nf4k4hzzaz6ksyDfarhw4Vl
JBZ2Cm5Ps1yEuo2HFLiS4KidDXabuf/+M4m/PJk7Dw==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.4971970310650704`, 32.}, {5.497197031111455, 31.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbDvQb7TL2YHBjBwcMiS5XlsPp3ZYVdK6rp5n+0d
HO46z1VWYXaIDlmjavPU3qHtb/s81oVMDvfOXUm9ccXewbzuxrO7vEwOLlfu
5RUfsncIizctW5PF6NCbcsqBd529w6MF83wKtzM47KqffnvpdHuHba0aVyJe
/Lc/repmb1tv79DSpTN3t+M/+/1h17Ivp9g76AR4fuGq/mM/TcgjMcPD3kH4
jVzo0/bf9s6Rj1I+mds7HJSYvzNq4y/7GaYXL+9Ts3cwu3ZSMfv7T/ue5SLr
zorYOxSozO8Vi/ppr7x+zWc5JnuHQmb5vzE3f9jH+MxcsumdnYNFsWeBXekP
e4v6Wwc6btk5HCuWe75L94f9NvcCj4VH7RykWOclXmL6YX9taZT1n/V2Dibq
J+63fPluPxMM7ByuTz0O5nfH7vlX2WzncIoHwrfVCWKbl2fnwNNzDMzfyBq9
gTXazmGOMIT/4OW1Pxs87BwqFh8F88/fOPp6vrmdw1JrCL/uknrtJXU7B/k7
R8D8VyDlknYOL1sgfLFnLu1MPHYODGYQPiS+7BwAt8vYbQ==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.5028029688515971`, 26.}, {-1.5028029686789068`, 25.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAAMo4IHsL+L8AAAAAAAA6QA9my8fe
zvi/DNeGxcnzOUB9Cxf98qz5v6AdMoLo5TlAR7obwLel+r+60wE2XNY5QG1y
2RAtufu/W/n14CTFOUDyM1DvUuf8v4CODoNCsjlA1P5/Wykw/r8tk0sctZ05
QBLTaFWwk/+/YAetrHyHOUBXWIXu84gAwBrrMjSZbzlA1Msy+WdVAcBZPt2y
ClY5QHHFVx9h3wHAn+0+LbhCOUBxwCVrX0sCwC4XOEH+LjlA0byc3GKZAsAB
u8ju3Bo5QJG6vHNryQLAGNnwNVQGOUCyuYUwedsCwHRxsBZk8ThANLr3EozP
AsAWhAeRDNw4QBi8EhukpQLA/BD2pE3GOEBbv9ZIwV0CwCkYfFInsDhAAMRD
nOP3AcCamZmZmZk4QC/pH3xHhgHAjl28/nmDOEASTjFPKRsBwEAsUgaebjhA
q/J3FYm2AMCxBVuwBVs4QPfW885mWADA4OnW/LBIOED2+qR7wgAAwM/Yxeuf
NzhAVr0WNzhf/79+0id90ic4QCYETl3nyf6/6tb8sEgZOEBfyu9pkkH+vxbm
RIcCDDhAABD8XDnG/b8AAAAAAAA4QEM80hg=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk39Q03UYxwdMzLaIzw40uwEbaAbBneZ33x8E3aNhN8A1mmUIByEeENxi
uMOQlB8Wa6AS2XmdEj+ykAgIh0eYU+IxBZSaChqWNoMDFz8HCgHuQNpYf/S6
57nPve6eP557P/eRJmtUKa48Hg/s7Xh53azkgGC+nbdMKGSolTrtPlt7knko
RDLNgfn6G1lemsV2K10fsHWQg8b9X2ZtPMjD74QxAyk3ObCOuI03FLviscS+
1CNGDqgLSfULf/KxNji85ewpDvLHmxv8c1fi8AdF1+7pOPg1b27SJ+FpfCe8
sdY9jQNfzaYca/EzOFPQEr15Gweh/WckUfme2PZq5Y+7JRxIuZqHd2544ocf
YYTqOQ5S4MER0xqC6xXMK8UeHPBntZNBOwleqHKpcHPjYGGXQjx1mGBYjl/a
lX9YeFOdLfJpJdjQ91lFt4UFl5DhnuY7BPltb4et7mNBWFEX1zRJMCoo8/Vv
L7OgPf9Do+gJwYO+d415Z1gw3Xr26n1XEaYuw8Kuaac/rlHaapQsBAg9l71s
kP10kGUh0NfpAf4OWEgPdHprksBeLFhCnB5dPRNZPcPAVy85/b7ZAQPH/Z2u
FXftFXcx0Clyunu8YUW8gQHTpf/vw8DEuZI8vd1/Cx1oPa1kgLo+V3nIRYS2
0IJCC8tALT8u0LREsC8VLr/oz0B4vMEvY5Fg2k/rCtQCBpZ6bIWxNoJNW4Jb
mmdoGHmPU5yYJfj91M7keTMNNj91UeAjgkm/1JRAFw2yuc9fEE4Q7O7xDjps
oKH89NVzsX+Q//ahQZegHdh0i6C3Z6I9HxoW8vbyBSaCC2Vaez40uKzslAx1
EhRbvrHnQ8OxeQ3dhgSzRI/s+dDQpNJs+8Jon/dKsEckg1jvKwpNC0GcGPrL
bJZBKWQq5U0EjRUl2eIuGcTcfj9KWkdwQhq9Kt4gg86jjQLpcYKC106W7k6V
QXJ0/dBiKcE1HePrTyll4GP2fjygJ7huY2V1PyuD2S2TctMhgpuL6m1+/jIY
y6Vvtx8guPWSF/OuQAY83Vj5+X0EVX/fe6tqhoKX93hUGjUEk2eXdpjNFBR5
Vd/9OZ1gtrWQEndRMH2ickfvHoKf3EicjTNQUDi16qmRBILlJx1QMEo3RobE
EjyacPFJ7scUWPXbMzpUBCFY5V6VSUHZ4Gh6s4Jg8wrHwSm4FqmXP5QT7B/p
WzDIKagySt11EQRv/t4xVs1Q4EEbv1YDwfzeDXm9GyhYezHGty6M4KhjfC0F
uP3BfoYjuNoSoXcVUsAbzjn7PE3Q+d8p+BcC+NDk
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJw1039Q03UYB/BhgTRmjm237Ttc3SYhEP3wOjL9frfvGxaxTZIJZschfziZ
ZIwG/iixWzDj3BnaSfN2bkA7rk5NNDCgKyFSRPRmEkwl6eRHDBQBf1BALBq2
7WvPPZ/73Ouez/Pc889HpjdlGZawWCwETvAu/+3RGpmfCDIAwDfMePZQXtti
KbBnknHlUcuJ3F3A1BzjDqHxgtAI5D81HfIxvpT9aj5wm8uYG2oANj3PON7s
WWXOAtwvMx6+1/dvoxqgacbreutYKiXQrGP8WigAx1bGwXbPKsBQzPhyyYpA
AkIzY150MICTVsa5jeGBBJ47wljrmtG4ZmjsszMeGggGjXNOxjuD4y7TGKxh
HBEaQMP5pL49FDR2VLiyqxYI1PZs7m7OpDGi+ub4H3MEpF+8MyhfS4Pd/+xq
3kMCY6f09kY5jT5Vz5/yUQJ/ST6Zy+PQ0FXcn+T3EdCMnFhMnFNit3P7irFO
AuOs4W9Fw0qkHiAr7I0EfvkwbmmsW4nWdOPKeAcBn+rjpbpmJSSs1V5b8v/7
KKE6b61rFgXq61cKTmcqMXl2f8oanxhVZdbZx28owb0puxjzuxgvhtnYerkS
DQmGOP05MTp70rI9UUpcbcgoZDvF2PrA9atuVoH8gltVglIxFnPqygYGFSjV
RTrL3xXjS752294rCnAKb3+6IVkMOsa5T/adAm/P6z+Kaxc92UcBa973py3H
ROjstZVMZiowLtdQBpMIP9o1hf61CnygjonrTRUhrcWaXROrgLg76f1LPBG2
vbQh8cpyBSaazJGpQ0KIH9c8LF+gMORbFpZ+UghD4u6vuu5S+Mc1kH2jSIi0
hutpjhsUqONTrIlXhGg73No3f4GC5KKt0NgvQEFoHwrd1/lD5v0CnFEn/eTP
pHDQ9KhImyDAlp31jrfWUVDbE8Sea3zs8noX8AIFtvrnAUExHw+qb3qnuBQ8
FWfbeVw+PNXlG7V+ErUZrNarZ3iQekffzJkgYXTVe2gND90lS9qJWyRSzE3h
ppFo3E3vb6vsIiG5I9qUUxqNAsOOlIYWEp+Rzr2xl7go0o61nHIE3ndF+w9I
uaixHM6qLiNh5vg7wsKXY5qtF1kKSET8fX597PgyvHdH//SWjSSkGaaje0Y5
iBAcIZIUJDqiImtnfVG4Zru3eTqRxExypeHr+Cj8YDC11UtINLnn71uK2XAf
lGlzOSRYbt3rn/c+w/x3Fon/AErQsHI=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-0.5028029688596689, 31.}, {0.49719703114658387`, 30.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{0.49719703114658387`, 30.}, {2.497197031161704, 29.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.497197031161704, 29.}, {3.0249056296723893`, 28.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.0249056296723893`, 28.}, {2.2273220293798204`, 27.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.0249056296723893`, 28.}, {3.227322029438483, 27.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{5.497197031111455, 31.}, {1.4971970311047471`, 30.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAAADbE34T09z8AAAAAAAA+QCprkDXh
nvc/SntRD/LzPUCucmctoD/3P52uXKmJ5j1AiUxJx8HW9j/zmSHOxtc9QLj4
NQNGZPY/TD2gfanHPUBBdy3hLOj1P6uY2Lcxtj1AH8gvYXZi9T8OrMp8X6M9
QFXrPIMi0/Q/dnd2zDKPPUDi4FRHMTr0P+L626areT1Axqh3raKX8z9SNvsL
ymI9QMtZoCmA/fI/aP3nn8pMPUD9bjTmBWfyP0SHAWG0Nj1AWegz4zPU8T/h
00dPhyA9QN/FniAKRfE/QuO6akMKPUCQB3WeiLnwP2W1WrPo8zxAa622XK8x
8D9OSicpd908QORux7b8Wu8/+qEgzO7GPEBIS/g061nuP2i8RpxPsDxAAMTC
gnI26z9nZmZmZmY8QG2mSTZxNOo/X5zFEtdPPEDxO/jRnhrpPyTBEPCrOTxA
iYTOVfvo5z+21Ef+5CM8QDSAzMGGn+Y/EddqPYIOPED1LvIVQT7lPznIea2D
+TtAy5A/UirF4z8sqHRO6eQ7QLWltHZCNOI/6nZbILPQO0C1bVGDiYvgP3M0
LiPhvDtA6LBR+osvyz+I1o758FM7QEO4CwMEdcQ/Paj6Tg9BO0A/j+m3/3O8
Pw7SC/e4LTtA+L0ZCv/8sD/5U8Lx7Rk7QMDyn/IXFJo//S0eP64FO0CopF2D
W5+HvxpgH9/58DpAr6tCeqrbpr9U6sXR0Ns6QBrneGm36LK/pswRFzPGOkBa
aHL1kWS5vxQHA68gsDpAM+Ngb6sNxb9mZmZmZmY6QPB30JQdkce/GeSHOqdP
OkDpzLLpJB7Kvw7gGY/sODpAH+IHbsG0zL9DWhxkNiI6QJC3zyHzVM+/tlKP
uYQLOkCfJoUCXf/Qv2jJco/X9DlAlNHbCwtZ0r9cvsblLt45QKbc66yDt9O/
kDGLvIrHOUDWR7XlxhrVvwMjwBPrsDlAJBM4ttSC1r+2kmXrT5o5QLpTAPIT
6Ne/iSXMDAqEOUD4IgQIxDjZv1xBFlEMbzlA3oBD+OR02r8w5kO4Vls5QGpt
vsJ2nNu//xNVQulIOUCe6HRnea/cv8/KSe/DNzlAfPJm5uyt3b+dCiK/5ic5
QACLlD/Rl96/atPdsVEZOUAssv1yJm3fvzYlfccEDDlAADRRQPYW4L8AAAAA
AAA5QIyQsP0=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.2273220293798204`, 27.}, {2.3585953735815792`, 26.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.227322029438483, 27.}, {2.3585953735815792`, 26.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.3585953735815792`, 26.}, {-0.502802968616038, 25.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.3585953735815792`, 26.}, {-1.5028029686789068`, 25.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN03tIU1EcwPG7G5v5IooyNKO0ckiB9Md9mXp+vXUqxojA1DTJFKQnJJho
MiUT0lUo4qCGZYESOVfoCo1Qt/UydWRokt6aWqk11FXbfNB2zh/bj3u5fODc
c78cuBG5F5R5NEVRnPv2PKn4Y5A/TgOFJxZszOOmqmoapqZGA9oWBfgxf2TE
IKdBml7WUDolwPeL2yddBglkpv96WDgsgE3PG1PjJTA3HcUW9wqw0qkuaX9G
gV6yO/FRmwAby3f5RW2j4GmLc2yhUYAzIfaBE85VNDd+Z/6USgC9PiyuQrOC
spr+3pgpECB4+KVyKGIZyeZ33q9PFSD71itt3v4lZH1Aq/zj3A7pWcgpcaHn
v7deF6Pd6/N7k3sHnKhqqOhJ2Gb3/qq+1psJTqRICV7qXCNAQYFxXbfZgaTZ
XwsNNh5CQ01Xjxc6UKf/IhU+xkNRnWlWGe1Ap1MOvPhm5OHaZ1OuQeJAtHyg
IUjHw/uPpolK+z90Fg8PqlFiZ3OaqzmNh5olYrWVr7XyPNhizdg7Ij3DQ3MD
cUdOoPvioX39a+xkrT1Ja+dgQwvx+BfPcGDOeoN9Odx8KdzMgSXmLbYsQyfN
0HHQf7Lfp4eDnPoP2C7cw4EsaRC7Fvdw0HXFgo1zIjmo2DLs08NBZuwItgL3
sHDYMubTw0KCdcKnhwXFuUmfHhY06I9PDwt1MS6f82FhX/kqdg3uYUG9lxa9
58NC7UGp6O1hge/wE709DKir/UVvDwO3uwNEbw8DSBkoensY0Bwl1jR6hoF3
NrK+JqtrtbiCAfouMdqjlN07734/jbhd6tmAgTIZsfjz07IukYG+HvL9wRHj
rJZjIKiSuMwiL7XIGUhXEM94locy0LqJOGT6UBUdxAA1vRab/F8M/Ac0kruE

          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN02lIFGEcx/F1HjSPrYykEBQ8QksSk+YsrJ/VimalKRgiQonaQuURvRG1
SKG8shJErHQ1xBeJsGWtZItRYkqemJSCroayleK9pm2m7c7zwvkzy/CB5Zkv
/2F8UzLj0hiVSgXbz35XhcXiqomx0zbHULPDp+3dLIOhBFFrXZGQ2548mm9l
0Oq1rm4yS6i+4lLb7ErQfPHk/J4RCWuLfs7RXgSG1Z3qkG4Jlddf7E8IIeh3
Tk1nWiXcGtb19p8msJaE/yttkFBxkAS+SSQQ8hoHex5JWNYOB7hkE9wbq5j8
kCvhceXe3s/FBOYmp+CMNAkBRS15afUE6ona0ckLEnIc3mokA4FjWWjaeVFC
qcOBwIhugr5X7QMtvhKSiiw+Zd8I0uMjPD3cJMxUBh11myYYuNEdnmERIQZ9
Su6YI3BhNFEfx0VoNF11ry0EHu7GEPcuEe4/gjdM6wTzVcGrl/Qi0p+vZZ6y
2s6TRwSqfsv+0xBjbYgRsVWzKvvhlFg+JYqoM1hk+/vZR4T/9xXZhstutktE
sTd1tM4SpbMI+HJtWbZp3D4CNnuWZN/06sr26hKw6wS1U5LeMUkvQPV+QdEj
IDGD2ir3CKhJoS6XewT0P6WWc/wE/PRcVPQImBujPiv38DBNLyl6eLSFrih6
eNztsCh6ePS5/lX02GzeUOyHR0HRpuwHcg+PmYUtxX54EG+HrO0eHoO7mazt
Hg6x3dS0h0NBBMna7uGgLaGmPRxUWmraw+FIPPW63MNh4jg17eGg9qOm++Fg
cCSKHg4mM30+fV8sCjuVPSwa6xlFD4vIXEbRwyI9jvpJtX1YZB6iLks2buYU
shhkqHE4zqk2g0Wxie7jpaP9ABZVRurJX1839JEsNp9RD450zuoEFsY71LeH
AvOHAm3npVLP2P/uySLsHPU+85n7jJqFiqem3zuL/yRrrrU=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1H1QFHUcx/Hl4bjdW7nBGDRERuXSxMHGcZ8dqQ+IJuJwx03oGE4IwpFO
4/GgzaggpPYgKmcoHRmEBkMPmDApR06GMYVohVMIIYfgdIhZCWmgwWUQ7PrH
7zu7s/Oe3z+v+e7sLki3WzN9KYqKn7qnn1S0BVn9vqDUWYEFYbMim8x+WO9z
2+YYUbA5uYjf0umHU5dr9ZO3FZz5syQ9/TV/eM1rPYmdCoL7Y859PVuHlyuv
PNrXoqA06v1Fub/o0Hz22dWOMwoWd5+4WPhJAJYczGwvLFPQ1cfvunNUj4rw
/Q5LvoKT2G2pfYtGyN6Cwz5pCnZOpiVeKmVwvGJjS+kqBX/YU78fCjagouDQ
wfm8AtucZad/f9OA7UsDn+kwKRicuN7xxV0DJuo8VR8/pSArPCE1fiWLDePM
2ClKwfCusjWfF7HICzkQ1TwkYw997p3+RhbJVGL0ZI8Muqt6YV8vi8cXti/J
aJVR2ZsV/unfLLbF9ozcq5fRbvTJjvWysKkjo/eW1uM1Zm+NWUan01dtx4Bc
MiDLcIl+apsipkfGgYtau7awU5cMOdJf7YSq0fiqUQk9+Vr3902PhK1NWufO
bcuZ2yah+4bWASkNupQGCT92+xMeCcFPzr2qR8KLv2pdonokZI1orXIiJNiN
OsIjIWO51utUj4i4VB3hEWEs0xEeEa3XdYRHxMnLAYRHxHiQntiPiKGNWh9V
PSLyPtAT+xFR3KsnPCLEp2nCIyA3iSY8AmLfpgmPgJoLNOERYEtkCI+AQLvW
Y6pHQPHrDOER4M5giP0I8CoM4REw/JAm3hcPVznp4WGJID08LpXqCQ8Pyqoj
PDye/+hqmOchC2vM3hvfmXnU/jd7XstdFn+99FvAVoWHnHF/960OFitPf/YA
Jh73u6xR0edZKItay18J5PGz9QXRfYTF4ID4+Kt/OLjdjU7XZhZx7smwTR4O
xh0uS4eJRRIzf0xo57BtRkzaUo8BQTnOY9YvOdxrTL7a5jRg30zb4NlqDimr
56SfX2FAWV71oZzDHFz15a9mDzCYF1p3pGknh4nRn27++y6DWb4Fw0WpHJaF
fNu8YQ2D/OdC69sTOJiD7MY3KAbWDwuvVSocNt3p/GHPNzScSQ3rHyyeOneO
Plo19X2vW1sXeSWUw3LTNcfNJBo79mdnRszgQBWnvRdnop/8fzj8D7zX3uI=

          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxV1A1ME3cYx/GDUt6VHuFtUCUUcBonLHfX9q4T84s0DMHJy0ZgIgHcJjpp
ALNNYeLGEN14KRGVycuEaWHF4VARhL3wNhGio9OBEsZ4cShOYC8FwhBGHPRc
cntyl3++yeXyyXPJee1OiXzLnCCIyOV75SQCwpE0bA7CNCpoSg1pMU0iPGDb
JrfOcHg3q3ZuoM0CRJWrR88Yh+emHxsm/xYjQm2pPXuHQ8zUsYWCOCsMuOSr
r33LgUrNTm8zWqNYWrPFtYqDPnMkNPuqLXKj4g635HL42qks7V6VPa6265dq
NRz2yBsnmjtXwykxr+PXVzj0p5wZdMmV4AItvhW/kYO2M0I91y9B6RuffmPm
xSG8VxNVKyWRdYcu8nPm4F4ytZqLIRGX+fOOcSsOEy6G1PJcEi8k5RnXP2Fx
fbvj+/fqScxogzLmfmNRrWre9KiXxMVZu8c7+lmcGO342DBBYteZwQDqOouj
W/zz8+dJmGU0HKqsY0FEPVV6LZHYYxoWh1v5fqILW9CFsZh2J9iVLhxjtWMs
i8Qkvr1lK8OiW8d3Y4Ld8sViQy/foRWz2ypmlcie5nt4aGWUuGtuZuoD0q40
aZcSXhZ8W8ZeEsdeUqL0Bv8871HCo5HvBZNHiTV1fGtNHiUqL/Nt4siUOPed
0KOE7zNPiMmjwPr/eRT40l3oUaBuu9CjQI+bucCjwFA03/x+FPjkFN8FJo8C
BoO5YD/L77cUCTwKyDaLBB45mBSRwCPHcIVI4JFDZhAJPHIQOy0EHjmO5/A9
b/LIcfOKhcAjR9d9C8F+5PjAUSzwyPGXWiz4XgzWpIsFHgaiOrHAw0A3LhZ4
GBDnLQUeBj6FR8T7FkmQEa8HNoUx8Bx5qMEciYmT8Vde5BgYizanffE7CaNf
ev2PMgYlFz5yOHufhK+sOui0PQO3dU3BPj+ROKYZ3581R0MjHpKqWkm4kirv
U6M0SoKNeSN6EnftP0/uuUmj/M/Z006FJNoTPII3NdCodyjwn1/7n4eGZabd
wdFFCc6X5XCicBrHm/cWJfdJQLVI8napaLCduqxyvQTOBqvYA740XCtb1amH
JHj51ts1apKGT0jz4KNACXoauPd6lygkfn8iSGQnga7gnfa1kxSKXYtsc8oc
YIj0yFs3QKE7qMU/1M0BIWK/3okuCjFO+n9i8lfDraq2ZP81CradzrJ92lW4
baX6waaMwtjRjuj4c/Yo213tqf+QwoNXv/rspW47HGwwngzaS8GaGphZemqL
NwnphocRFF7zDNxZvc0WCYG+I9kBFDo9pm4zVTZIObKqUbaRQtzzfdE1jjbQ
Xu672O5OQbp18Q9RkTVaf8m4kWBPgUhOLFZ7Wz/7H1L4F89dC8k=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlHtM01cUxytKXcZjaIkDhtUWRVQQf21/7a8yOWfqcGMLVRAyLNuIDBQc
qJjBFB8wFQeM+go+IANFlLgRLcKMDxBhYIdCeMxhhRYq5V1oGVQpiGzl1z/s
N+fm5pN7bvLJyc3l7NgTHG3DYDCk5jW7M9ZvwZ2dNsigsw7zruSGX+PYYJhx
5r/gcTE2td1x8fOfg3+dXfi9Q48Y81RFh70EDAzpWLfJt1WMb6LrnTqYMzDZ
mPzz3UoxjpYN73P+6g3cjaunblwX46KrZey3UhOcKfUNnZMtxjg++8Ocha/g
ROFv6kd7zf3feUtVKf/C2fXrWvu3inHznop/rvnq4P5PnbyktWIMMx0faW4Z
ABcMeMpcLsbq85X+Gx70QchtMnGDixhPBsbUT+p6IPpFyYqV74vxOuto9kSU
FoL++F13f4pCztj8LD+PblgYwHs4MUihqZdRU7fyJdzMwoKu5xR6GWJ555M1
sCy9TZZYS2G5w0ZVib0G9pPGX+S3KGx0Zx9ltXZBDB0K4+OW0jxZJJkqklBo
E86l+ZSWkmkpCjMHPGj24M7GfO66nOY7kXbmojBhyMJfFBg/LzCKsDHCk+ZO
9WxEuGSvhRPdFfvcFSKMWmZhplRuK5WLMEbmYeUjwiCDhadoHxEWP7b0y2gf
Ee539qaZ1uGKsETJt/IRYRjLn+ZA2keIibWBVj5CnNGFW/kIcSpjt5WPEHPP
3LLyEeKac39azUeIhaZnNGfTPkKcqNZazUeIngaDlY8QqdRJKx8SvX5gpL7z
IdHUOC/1nQ+J1zOZqe98SGyotfRbfEis9E45W63qgtGSzU3FEhLzq/T1T6e7
IGGua7eeIrH8oQ/L1VUDHbHt+X5cEh3KNCEH/TVAabJsZXYkqj52Ks5I0EB6
jM+iPqMAOREV9ptvaKBm+mHzxk4Bqpx6j9/Wa2C0EMlihQDtpZkfNPi/BMfw
2xudSgWYl5yUnpPcDY5pDXXRMQLMjc00ZCq7IeBCXEqRRICCFoeCQ2ItLDix
wEdLCXDXTUZOXK4W4gOr2zlc8/mcqJZtb7QQ0X/geKSd+X69YJtfRA+opX6r
Cox8zJ2ftJhd2QNjxbYNajUfBQ88fd4u7oXzT5Wx7go+7uwJOKY80gvNj8vn
SuV8zF4bxW6/1welJRK/0Bg+koqtV3a79QN7+lrsBQkfQ+YxPXIO9kPATNLq
FxQfe/qPXg1r7wevsppUNy4fh/ZVceXiAah2y4iV2vFxR2Ht5SsXB4BFPunN
M/Iw6MCpxasnBmCpTfqrDjUPb75ecunL0EHoSau4+JGCh8fckljMskGIKo9v
2i7n4a/zn42PvRwCnXfSpsgYHmJwac2Evw4S5WrOZQkPQyd+jG7L00FYUZqy
i+Jh++tVKplJBxfe27FrCZeHTVsUnpzQYSDUR1q+seOh0Dbo0+zSYfDiKln5
RgLtnatEfzuMwKHn8b5qNYHbDrvNjMWOwKq3sMxdQaDdJ5EXh+tGQHAuaGy7
nEDBt6eZjzh6yL00GwJbKlOGxg/qIfvripkDxwgc3DDe69ikB/QOZuYnEJiq
f21yYhug1Hb2ARKY9SjdY2qnATSDbdPyzwh0vlcY/aTEAM3KOl2BiEAXZWBV
2rABDreuMBeBT2Tgcpo1CkOz7a4EKmoLVMFrRmFR36aTNvYEMhwfe2cEjILl
fybwf1I4pPE=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1QlMFFccx/F1gQW55JjhUDxYaAst4uzuzO6M5fghKl64QqQqGkC5YrRF
sUqllSLWKiKoMSIil0W0iAhFpEVoRM7W1kWgiqAcLSLQohFZBQnSwg6N+zKT
yTeZvHzyf5mM/bYo/3ChQCAIm7ynngL3dYjsFEKgWYvxcsBXZibWRcIXNaTd
MAdzYvh84Q962JvrWCPp4RBU4RnrmayPtngHA697HB52yVR1pTNxzazqycqb
HOIPNp6FkzFe+o9tXHOBw/oci9aiPlN879MctuIwB5esibrEN2ZQPfcx8Ijg
UHvF5xGTZ4HwFZu9Fy7lMLw37KPH+wjsXG9sZTWfQ8z1JZW1vxAYXBXptsaa
wwl97+2G5iQyJpozbplwWBwdLi1UkoiNUip2CTl8PpxvXfgNiWOZj42CXrHw
TjKzNSwmUX80dnbiUxYXuXPy2iYStMQ5dOg+i9QJ712PBkg0p/b3ptawmNNu
Vq8cJZFV/tN3+4tY+Nb/q7B/SyJCs1iM1/D95qJy7KKSxdpqvk/0sCk9LAv3
23w7iKcWiztVfJeFGE1eLEame3W2emW2WoHa6fc7O6aWAtT0/tF2DbvtGhRw
q+NbtLlYb3OxAukqbY8CIQ/4HtN4FKjs4ztF41GgRChgp1rDEU/u9wHfvEeB
oAC+V2k8clgl88175IhU8c175FhrO4N955GjVC5k33nkyD7BNz8fOVR9fCdr
PHJ4e+qw7+Yjx+gZHS2PHOp/dLQ8DCgvXS0Pg5IzuloeBjEDuloeBvGv9bQ8
DHSWiDQ9qvEw+PhrkZaHwfvXRFrzYVCtEml5GFj8yTd/XjSIXpGWh8addpGW
h4a0WqTloXFdJtLy0EhMK716fJyEsiVl7mUlDSeHKsPGMRI9GcycQZZGUouT
f/8ICfuawGBGTKMk/3nCw2ESBssnBhKMaOTkmWdmPydx7r0FFX+oZVjfcCrH
vZ/Eg61VzR92yqAyjUou6SZROdZJHW6QweSr/NCJVhK+L76831MsQ7r/JWvn
sv89Mlyov/rbwQISoeUx4ktKGT7b8KvJ6ZzJ74Npc+1nZRDojXdsOUOite1Y
kotYhk8al7p1JU7O4/Jxdo+RDLvLcp1mx5E4ndnJVKql8Ltpk2sSTaKwMv6Q
fqcUr9tzC8rDSaTr7rEPaJAixGbZknmbSATuvTErr1gKOoBpP+/6v0eK4Iht
Hgn2JBZmH3HLU0pxdBMdH0iQCP7d5uwTVooi14JsR/3J83xmu89RLEVTb31G
9xsCozpJbWFGUryMOxKTMkggxHTn7Ty1BKZjg4tcuwhITX5e2NchgdOGkbpb
TQR2COLmOTdI4JF6ifOuJWDSf+30jmIJnqoftM1NI6Y9EvyVMNrz6bcE4jw5
v0PrJNhPlpsd2Ukgy7drYIubBFeu2oRsX0Wg7uRGathZgugV1s3EAgKvDPIc
l9tK0NJfGpH4zBIuZbX1AYYSqJKH5jaUWGJH2o9W4rcUtinujtyNssT1ogNE
wRCFU70+6kxHSwjHrape9FHYkLbVUtFkgY0HDtkOd1GIq/KbMW5kjqMT4vJZ
FRTac2Qqr1ZTxN8yyHc5R0F5ck/i6m4jeFTRAytjKfgrQ2lSNhPVgsv7I4Mo
/N0hbMxqFMH0YHDg4WUUCDf/Tf03dLHAKygpdxGFe9v9WoZ6hRhDrnG1HYX5
kQL3iuAZSI937ew2piCgg1OXOgim/xcU/gMZe5RA
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-0.502802968616038, 25.}, {-1.8608945495807347`, 24.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.5028029686789068`, 25.}, {-2.860894549566524, 24.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-1.8608945495807347`, 24.}, {-3.502802969022241, 23.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN02tQVGUYwPEDAYLAikjcJFEsodjbOWd3IXfsPDJSwILsrHELA/NWITMI
wehgotgwIotI3DSm2SUgQAuWcAUh9T0sFRkLqMSarIC1XDYMiOEm4C4ty5f+
87zzzu/T+355dhxOkRyzxDAMTGftxvSnmjwFm2nMHA8cek+lSVqd6GDe99W8
WRKohIZz+u1OdHZRp7FYRwLHP0DZ+oRBN3lKGNsekuA7kfVK4m5HekAt6nv0
IwnJS+QkfcSeXqxTRjRVkWCIjU4djrKjHRT5Z+/kkqCxHbvS5rSBdh3uOzyT
RMKKrS5EUmJFu72dZxCHkZAUF/F1zTMLmnFXEaHdRcKW40JByV4LWiYsW0h5
jYTiCGND4C2MHplKWExzJuGfTWU2JUKMHtbYiUesSSA/sM4Mv76KCmbLsJ8W
CXgnLLd6CFtFs/ts7Jz1BCxMK/OHzhoRoyvm0x4NAQdFUiJ8uxE9zZHuWOog
IPWgfZmv3oA+yvgGL1IQ0M0gWk72G9BxcwR0dXDNXqqOXK6OJOCanGN2gS7Q
NASwK9lm7/RZi4DCLpbZzYfsTUPAva3rDpPPhcrncGguYpo9NLgWDpncdad5
daZ6deJgP+9vtk18o3V8Iw5fDfr/7z84HEkIcC3pML2/U3ZPLMYBdHGk8bIB
DQ+myYuEOLCTixkKngHFlo7YMv1MXtLV1rS8RMuhs8terjhQeaLVEdeXSLUi
yzhmjcNR799ckiQrSHlj/LT1AhfKbyfq+UnLqDe628owzoU/oxwyQxKWkDMm
9gjXcsHthM7SLbsffRFXGOrI5cKLpzN7P1c9QJOrirGbr3PhVU7I5stv3Ef4
dWLF0p0L1/hz9c917Sg8yv3ish0XFst7b/qdb0GZtioX/jwHLLXS9730N5Bj
ssfGX/o4gEtZhm0FZUjcL5iqVXAAFPNo9C0WCtrn2T6QywGN5K/HwdF5lO52
x4WERA6o1TFviiq/pLrVa7Fh1L9D9h2/lPr4VtilDRVsqKP/MKqn5dREunfK
3XQ2SIPV1TH6OkpiL8qaCmNDVyUtd2luomSnu5vLfdggbPy5tr69jfr9To27
aoUF0m93Z5wRqajpx5qqoxoW1LeOky88f6Vm7n8Ye6GJBTkuE5sienuoJ0VC
wdZCFthpK6z28PqoWuLkHk4KCziNgXWr+weosasH/OIELBg+4BHUlv6Myv/7
s+wcCxZoD72n7s7WUaW+D0OUD5iw8VxNWtv+McpCciJrtIoJyQ0C/nmtnnr0
SZCPxxkmWE0vbvH2e07ZJEfzIqOZ0AMTjKu8SaoivlZ5kW9yleMuPTZNyQL4
VSp3JmAOPzAvvfsvtb7vTPgP/tLqNw==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1: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
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-2.860894549566524, 24.}, {-2.502802968926744, 23.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-3.502802969022241, 23.}, {-2.502802969140248, 22.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-2.502802968926744, 23.}, {-2.502802969140248, 22.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{-2.502802969140248, 22.}, {1.4971970321042818`, 21.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1: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
AXBZ7dQU7wG+4f9FgP8Amh96Bw==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN1Xs0lOseB/C5vO8rsULZpDIyY1zGba6aXeRXLoeiodLF7aBS2kVsZesm
lVJbc4qULhKb9knUlEsu6X22OsY+xlYqQhLKHpeJnXFNx1HOH+e7fs961ueP
Z63fei7rMQ2LWr+DRqFQEmbG15niY36+CscQ5VscYJnLzcHcBRjKPHuGMjUs
At/UHAHBwlBXv2Pk/R4ReDrZBnYKMPSctchz6WsRMFwhwsEdQ9v5phc8akXQ
eKvNH/fH0E3D9e6chyLYvmOauy4KQydeFOz6V64IXiXc6dc9haF54bxxowsi
MB/tOOt9A0PQ0KG2OCyCjbXX52FlGFqkUxY8uEMEA07e4vbnGJI/71e5S0SQ
F/tg2VQfhtr2P0q5JhbBoT0K7VA6jjZ9tlqhMhVBFPvaQ63FOHIIE06s0BLB
8SyGeIqHoyP5bTWn1UIobt0k5XvgiPPSJPdZuxCwZpeKu0E4WtlBuWAgF8KP
Fz9U7ovBUXnd0XNbZUKgaHJqyx7gKPxbhEB7lb85vAZHCzW0sTyJEF4drEs0
asWR5h5OSbd4Zv3kz+6NKhwtS/8tnskUwrsNA3nnqQTKPv7cN1RLCEanB7I2
fkcgD6G/0021AEwvpggZVgSyyw9w7GgXwOhBxTaVI4F83r9ax5AL4OqKAttq
HwLJumpjg2QC0DCOCGq5QKDFbtx7dTsEoKx47HIsl0C6P5RXciQCwNL9IkaK
CSTu8B5NEgvA/47tH+InBDqfrQpuNxVAzxf3mDUNBFr4IGOEqyWAgpRsP04L
gZ7pSiqOqflQsNnpp9fvCFRRpVuoaOfD++BFrRt7CPSyrL1eX86HTTniQ1m9
BGLQSpdslfGBsiMjoKyP+N/+8KE5cdYTuZLJXAkfGq/PWtotnik+DJXMmsX8
Gj7Y1c+6NERrpvgg7Zr1miy1Z5aaB/NHZ/22/Wt4UKpx5Ztjlsijl8h5cMRw
1kSADA+Q8eDq6iv/1w8PtLVfWgwoCaQ/dN00X8KDqHUnU053E2hUJ9J6XMyD
as38M2dbCTS3puWED5MHxEo3k5F6Am2Y/45TpMWD7/v9vOVVBGpQH1u6dIQL
gXpvFlDzCZSw99H2y2+5EC1rjslJJdC2w6ljC2u5cKDWY/edOAIdNKW35N7n
wvKOsgiBNoFo7O151HAuzJ+7jlbYjyP7gFvBfhIuJP6zJPZ6HY50/qZ17ZZ4
xhWDiFqAo2xlqv+IKRf0YarnTQqOup2dMldpccHx+7Ye20gc3b2iX2PQaw+j
eSlILcHRJEO9Oa/SHlxP6cby+DjK1zEaspPaA7s1nPpeH0dVP5yQFoXYw+f9
UesPPcSQT+ib5ASFHchH3E7QrmHoHWgotbPs4OjB1qbKoxjihNQHZ0TbwVLM
1vvXsBmTdipTVzsoTHXqeTrz3juDrNNuG9gB21w7R98aQxLHJz72vbaQ/Djj
2CUdDB3wH2UXVdpCU0B34ho1HW0oezpfJLUFnf/053Fb6EjpZ2dYEmILso96
YepEOpIrWh/XKGygNHmt1HInHX0InLB2y7IBg8t9ihAvOsqsaox5Em0DjUaD
xpk8OlJ9DE9b5WoDPbpbE9sN6KhxqOQcaWADmw5bjplO0ZDvEzLUqdcaTAKD
EnZ30mbuw0mdykprcJGNGT2soSH9VvplsdQaqn8aq9EooKEtjJXjJSHWEJ79
4Pe/+9FQveJrONDZUBiXvpyGVsY/Fa/N4oD73qihZBMaWnWSsFVEc+BS/Jhg
OUZDLarU2xJXDtSr3VbfVlIRpTTi7isDDgy99V/cpKCiR2/OrgjutYIvyxxI
JKOiuWGjPr2VVqCebraNuEhF/W4FHw9IraDJAXY2xFFRcHKBvkaoFShiFv17
sxEVfWtHYQkxxbJt5ycoCAs+8DghyxJ40sJY35cUtM3wD5cbMZYwh6L35ept
CuoefxFo6W4JY5ptU3viKSiJlqzJWGQJ03e0YuUuFOQl7PNM+GgBjJ6csPw5
FOQgnTT2emIB9/atumB9fppcrVuedDLDAta7zfVagE2T0RXsRMtICyi0iVvb
eWuKZLzo7TSuM4dc/qmksS+fyTMmKw+OZJqDTZdrvtzvM5kTRkZW7zMHjxVF
5b53J8mI63vJky7mMOz0vChdY5JsU3jscTQwB27fjYy00Alycthnf6+SDV+c
l+xa+2icfKp3qvXnSjYEOnsyqwzHSUdz5TWWlA1eSrZc+eMYGcqLK5eFsEGQ
VkTNDRshZ8/LDHb/rv3d+mI1uUt4ZLD+phkcMvZxa/44TKr29Wo0x5nBrn8c
SRXMHyb9j+sZKH3NwMYkfSqc8Ym8u2vEiGpvBgrFpRPRC/4i+1npC5g6ZiDl
4pJbXYOkbvEQbe0nFojo958Z7lORDKM5ykOvWZCmx0tZ1tBH6m9oqy7+jQW/
BCQl4hQl+Sl0d9pIIQv6PLmsYxUtpOmW4eJPO1lw36TLq6mnmKwQM/QSLFgQ
aVy+9TZW51xK7//16gATpifmZd6If+u8sHxrvNtDJowG3mPoN/U4v9uyOynh
NBMc//xQM56ictbtXqLwCGLCwLn0Xx7L/nLO3RztnS1mQugRsuGZldo5q3Sn
5hkjJlCqh/58wBt1nv3fmfBf9+qntQ==
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.4971970321042818`, 21.}, {2.4971970320100354`, 20.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.4971970320100354`, 20.}, {3.017220663882881, 19.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{3.017220663882881, 19.}, {3.0172206638794705`, 18.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.0172206638794705`, 18.}, {1.0172206639261958`, 17.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzZCTOM1FmcOBAQyMHHaFQPivJHdX/P1s6MBiDeGL
aTL7b39m6HBDDsJv1r3RpHvD0MGaAcI3VLcSSThh6KB5PwHMVwBrMHRYuhvC
D/i1xP/XEkOHdVMh/AOX1/5MnGjo4JIL4RcvcmZsqzF0SHOC8NPAACgvDuGD
tfsbOvC+iwfz+x5bAJGhw8FjEL4SGBg6JCyE8LclcAORocOLWgjfa/4Xz/lf
DBxiYiD8e3dBwMBhpw2EXyRzvFDmuIEDkzyEzxa9gTV6g4HDmWNxSO4xcHj4
v/iqrAyHw4WopUeYAwwcLj/YPGklG4fD01392+OsDBwWZ8qde/6I3WFZm6p9
uaqBg/esze03NrA7CO1Li/YVNHC4UFS8v7qA3SHo0DKJQ7/1HYw+x5ZeVGR3
uHb/2uKUa/oOedLFK28eYXPYfCU2ommTvkP7603RUyLZHJ4tsDaTnqDvUJMs
28P4gNWhwKXAVj9f30FIaZX5yj8sDl+WBmtEmuk78C/SmhOlyeLg+6W4sZVR
36Hw8bydomnMDrX6Fz22XNBzMHvGNuHWJiaHuvDsuqeL9RwSVyXJr+RncgjN
cVKSrNZz+KS/Kb2xhtGBKS/MxD9Mz+FZ2deM5J8MDo0xy7e0m+o5ONbrKPu3
MThcMzddfEhCz4HBMxwYPgzQ9KPnAAAcW9+6
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNk2tIk1EcxqdReVmbksnCy9is2Ob2XsobWfZUS6cW0gVJLdKay3J4aZVB
ZZldKSTKEkPMMkslps5b2bpJF6y07CJlJWZa2AepNCoTaTvny/vn//Ly+3L4
cc7zKDZnr0l3FYlEcHzOv8icdl4f5OZEx8zH4O/QoISjbnhpTLeWj/KoC5zM
2PLXDa3rrs9dNMRjU//NrQX73GF9/jr97WseY4u2yWukHmh+05dlaeeRFSI+
3WvzQJfpCWZYeTx/dPnmLJMn/h4qeV9VwsNnTFuWrBYjRBO9ZPEBHkvtteE1
E2IUbujJfGXksUbuf8qlfwYGZhvSMgw8TPqGlOIkCdw3DRh/hvNQKHJr3j2Q
wHVh96s783gUNKfs6lZI8bTWx9rpw6PQJffu3hwpjA3XRwNdeWimNhx7Wy9F
16rSK7YRDrvv+XV9HZDC7WDvveO9HBpL13esm+KFmYYcw6WHHCatN75JJF4Y
qUqOnKjj8CWdib/s7QUTGQ5FhZTHryQ4lkN+OeWizxGO5dDUQjlI6RwO7DPK
LamejuXwvY9ycdTw2ahhFn9GKNtvOYfFignK5LgiFu+msYQ9yQEsVgZQ7nzm
HAaxSspjsRcdy8Awh3LA41z/x7kMYoIor9A7h0G0nHLmfV/zfV8HyyifIz46
xEhYgY8OBhfKg8RHh7gf1E9MfHRYUM8IfLRIrWAEPloMljICHy3sZYzAR4vh
aspm4qOF+Y7wfoKh/yi8n2DsmCr0CcavMFbgE4xGESfw0UDztY2852RT3Inp
FRqc9Esh773cIs++vVOD6kgFyUPZ9Pj8kTgNPD60kLxM29HZckGpwRJZHsnT
YdtVWfs/NaK/p5G8+Xb0VBp71Ag05pE8tjVvXH/IpkaHpZXk1bInMszvtBp6
uZLkOco7ZzGbrcaZmjqS94L9a1VJYWp8GuRIHxLfWAqOuKjBd1eRvthl3Yam
Fyrsz5KQPtliMvOHKlV4at9O+haxeZly9l4VZPY20sfVGYkhCYkqmMy0r+NJ
15qOharQ2En7HBoeWtkuU0HUnyrouwr/AdQ9kwM=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxNlQlMFFcYx7kUCmK1UCx0F5bdBXaXa2d3VUTt+1cEXUCgVqhWrICIpHII
KoeKB61FtKEQtVU0BWE5qoLUAw+gKtggLSiRaNUU6i2gcog2CqKdeTSZ+fIm
k18y8+Y3/+/NG+eY5IUrTYyMjBLZgzsbJUT/OFdmASNaGtQT30h1kzl67esy
RocYDDdsmPhusTnslKahpx8xOP1IWlXzYDy+8byZ7XmTwfOzGh//uPFg3Hxt
oy4zqJ5++Fh95zhI6A0Mepfn2kwJGoewYUPosIGBQdO+YlG1GS50VL2OLmBw
59jm4nXmZlhb4mf83SYGhX/taUmPMEUcLQbdLV3xCcUmCCtnbw9l8He5wiK6
1xgPu33y7vswyEhKrQjXGUPuJWWLwTlJfUDgZiNMSrOqjbJiELDRqjUr/x0p
u/BCX/RCjbidP1uukr8lj6y7Ojs71biexOjDzrwhHcuaU0TNahQoLuXMCB4h
q2tqxi2tUePxRLdP3297Qf44Pi86fr4a/6SNHOq5NUT2Wt+LfT5djZc1G8Yv
Nx0ihpH2jt9c1VA2GJKS9c/J8Cbb6jZbNTIPZN52ODpIdhccHXI0UaM76LU+
2n2Q3E3V6Fd2emP9FVnDnOYBoug5uW3yKW84yV5rz28ZIP9uv5M/Z5c3uvWZ
1TcWDZAw/am0V8u9oXMq88gNGCBtrVx5IVXVfnimzwCJPRmYa17sBf8dYS6f
Ww+QzjVOyQ3rvLAoJdinaFc/mWYStLkv0AsB6SWOMU19JCG+rbZQ6oWvpKWj
fRefkZzS8o8aRzxRnBpy3T/nKdly4kZp7A1PvBdvKIuzeUIW71u2OPu4J/ab
lCV9FtdDPlg4c9rH+Z6I8as1m63rIBFO+Y3t+R44M+owacHVK6Sv6lLLg2QP
+LU76145XCYVq0oqshZ4IPbt1vUbgxrJtmBl5AGlB9STUiqrLp4jGyKXPJ5t
5oHfb+cX29YeJ7t/4vJxx8SzjeVfdFeS1lEuH3f8Gb7TtK2/iMh/4PJxh8pu
oeHI1L3kYBCXjzvaWvuZoJKC//NRIfbLVg3HXPf1RSrEP83Vcizi2p2iwq1s
hY7jgLlcqVArrqSccNGOHSoYNVhM5Xj3Jz3sUKI2KpByfR1XStyySKT8gFuO
eUp8fWoN5Qns6quNUqLQ/iWdj+q0KnB/fSvlIeqjwBL52PPGfBQYke+gTHXm
KtCSnkB5NfVRoEkUTnkP9XFDr80cHe/jhlnLtDrexw11r8bez4r6uLE+Djo+
H1fc67fT8fm4Yrr/hwIfV/b6MfanPq6wTLQT5OOKHGIv8HHB5AKxwMcFv0TL
BD4uCPlVJfBxYfcdvcBHjhbfUIGPHCeuhFAWUx856uvmCXzkeGjsK/CRw/uQ
i8BHhsL9lgIfGeRPurW8jwxX917Q8v2SsfuORMv3S8r6DWr4fklhl9Cs4fOR
4sjhUg3vI2X9tmt4HykCixI1vI8zIsKXangfZ3R1hmh4H2fc95mv4X2c2fyD
NXw+Ehi+DxasZwn8zugFPhKsPegn8JFg6gxfgY8EO/M8KSuyrrllXXNC6kEx
5Yx0rpzwLMaS8mVuOpEThu8O0e9pCp3AkfW5TXlsf3bEt2vOU9amDQ4/tnZE
8oJyym9q5ttnnBMjsiaPciP3+AQx9PszKGdXLB1qkorhYxFLedaKKce2dImg
GA2j/JK+nwgOGYRyJXf5ShEmZHpTjthnI7ZUi9j+OFMe+3+J8B+wtfEC
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.0172206639261958`, 17.}, {2.0172206638148964`, 16.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.0172206638148964`, 16.}, {2.017220663584453, 15.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.017220663584453, 15.}, {1.017220663620492, 14.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzeAZPs1FmcGBAQz0HOLCdJT92xgcmk+cirF9ruvw
WPprRvJPBoc3SyK8K07pOkycuTG9sYbRwWTqytMbVuo6pJ1PlF/Jz+QQO3Pv
3Wctug5Je1kn3NrE5JCxcUqjVIyuQ3vy3J2iacwO4Xf1tnvr6zpcPqgxJ0qT
xUFNtqeu6p+Og9uN5eYr/7A43ChYc33ZSR2HR8ukehgfsDpk3eg/dGGCjkOB
7IboKZFsDk9Lj5x8kq/joOlTsPLmETaHgzaLltf66jgIGEeXXlRkd/ijoxkz
W1PHQeFSwf7qAnaHaW6Rz21ZdBxiNTe239jA7jCx08gz9a62wxELmXPPH7E7
vPq6pVFwq7ZDOMOmSSvZOByWdD+Y4NSt7SDWUHRVVobDYY/X1rIf8doODDti
geHD4WBiDALaDo/d48B8qd0Vfz+zaTv0n4fw6yOW8Njc1XJg8o8H85O4tyVw
b9NysDwG4R+4vPZn4kQg3zQBzJ+/sfu6fb6WA8McCP/XEn8g0nLo+wXhXwEp
N9JyeBKQCOZrn+nkY5UAqp8P4UPiS8sBAHP0sLU=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxN01tI01EcwPE/y/bgLYouZltS/f+7/v+SKLledn7U8kIhtrC0WU7d0lGY
q7QSCi2wh0INl8lfcUZ2edAyE63UMCskmg+mGWQjyWRJCdoutnnLnfPy/3EO
h8/DgS8Hzo68s3qziKKoxNUdPKnUY3W6XRRQeGJBlEE8El86F3BxkJJHzOrF
TUVDHIwUE4sN7WsN7Rw0lxPnpl1Q9Ndw8Ow2sRZf4EDcQtzsSbV7Ujlo6ia+
9sjgfruTgzIHsUt3QxTuZ4H/QTzkCA4LJnEmNr5uZ2G/jlg6aJUMWllIaCQ+
oAsOC4mRWdhn3mxeXSyk8cQ27XStdloNl+A4dm9PcNTQSRmwf2qqJjVVaggZ
Jw7vMoZ1GdXAb8gR9KiAijQKelSQtUQswT0qeDCRi52Ee1Qw1Z0n6FFB1PV8
7FrcowTtPpOgRwmZXpOgRwmnGs2CHiXwlQXYOMehgG3rC7HduEcBTyoLBT0K
SHcR4xydAkTxFuzTuEcBAxaL4H3kYLtpEfTIoaTeIuiRg7mGOAz3yIGPtgje
RwbOP4xxQkrBEvOrvs0ug7qO7L7nERSgxDttGedlcOtLdPaVqRVko0ZD3yfL
YHR3sUnEr6D5ipb2BYkMQq0va32aFVTUI7b7/zLA1vumswaWka818Pn1BwY0
D+UF7J5lVH20POPgPQbiGg6FFdmW0N4Xd6X2ywxsumge2+5cRN5hiH2lZ+DE
TPThnm8LKLnv6TpnDAOTUV7RmpkAUpbWXU2bpeG+3/3bGxFADYuessh3NNir
t4TbkB/x6R9DpA00jH3NyXdW/EOqc1slZSU0JI075oZH51FK7vd+5ggNnpqT
3VbNPPJJpe6YBBqcCxs7e1t9KOHxp47CKBooyayrI86HyP+i4T9OQmcZ
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.017220663620492, 14.}, {3.0172206638852686`, 13.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{3.0172206638852686`, 13.}, {3.0172206638635544`, 12.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{3.0172206638635544`, 12.}, {1.017220664093884, 11.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwt0mtIUwEUB/C17d47piQppqLCvXePK2ESPpaJ5D/bl3LqVKzcFsz5oihN
E2N9qPRDlj0wMTWRrdK1NDKVoHysdKugmkaSkYWVRVna1NJGRlh568Dh8INz
4P/hMKaSzAKhQCCI+tsrU/DW2KCWSSDgKwKjxlzez2Iqvv6c4hA398/rM0lL
8TCHdadMvEl9F6Hv4tAem8c7N608YrCWQ9/MPyNy5YCDoSuf98XFbdbFbRxO
VxXwrrLrF1wshxRTIe8pdbXQd0mJ5vQi3sPulVLiybKqpYaRwH5svDzLqgTk
bdcNYX/3L+nCPaVKfLnb+agvQILTG7QPLqiVePZ0x0IbJcH5yL6SnCAllnJa
uNAfFIiGppDIaQV0u44WhX+gML5vxrXGoYDX/bvn2ggF/+6eYmmtAiO3wqUP
blLoNs2GrM1TILZkercxjfqfR45XLx3siSgKDqHAlmqVQ8K8twesprClY3Fi
rFSO/i06j9BDYqer41CBWo65RNlC9mMSy6ls2a+1crT7b+71bSexcbt+uPmz
DB+dHUnccRLi29knMSDD1dQ9x20mErmNa654zsow22M+U72ZROans7LLuTI0
T9oGfe4T4OO4Wbzw3vN7aiGwqnIyTGdloWm0GCwVBLSthx1UGYtFZ7T9oIbA
QExT55iaxYi5ck5LE0iKTph3BbGY6K+JU30T47XFWDU6zYA+mWaWOcVoNPsU
rLrDoGnS3RdcK8ZeZ0KT9hyDrfeJn4EGMXaZZ0MH8xmwsUuqUKUYRotyPj2e
wUIzOfHDI0LhEXL1spTB/k3FyXSvCMQ77VDWWxpn/DYUnasWIfEhIc24TSMr
XJOiyRHBJ1bx6XsdjSGTc1YbJUIZe0OffIDG8zd1GVZShNL61nyVlkZdvePg
xndCSGqEotFoGt5jydkhQ0LEi9yqwGAaAhvjVbcK//8zjT97oSZA
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.017220664093884, 11.}, {1.3871335086894305`, 10.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.3871335086894305`, 10.}, {1.3871335086988665`, 9.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{1.3871335086988665`, 9.}, {2.329721377279043, 8.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.329721377279043, 8.}, {0.017220663903799505`, 7.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.329721377279043, 8.}, {-0.9827793360590249, 7.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbBU8ZvLYiYHBjBQcMiYYbXqvTyTQ4HKvSffz8o7
mJn+2HuvhdGhfPpl56eT5B3Sq6MMhS4xOAhFPpA54Sfv8DcrkaWLncHBLpOl
YAGjvMN7dqm8Hq9/9gwn7G3zVss5rOvZNak37I99WOmkFkMfOQezlCVl4sa/
7O0L/7i+eizr0NF3XVLrwXf7vbtrG2cUyTos4g6pORr71f5ciJi5zQ8ZB46l
83c5+Hyxv3F0barIfhmHW5eitr6M+mxfukFjxodGGQfRqa05Bzo/2S8QaT93
wUHGYddr+QdHbny0j/p0gmPrb2mHU9c0Bb67f7Rf4vnObe4maQfXsMV/wq5/
sK+T+t7RmSrtoJXVs/RJ2wf7ZymPz1WKSDtUCT3lWhD2wf6BxmaJvP1SDsb+
a3U63T7Yp6eBgJTDh1AI37Ts46/nvFIOPjEQ/r8NHpIVuyQdXJIg/CNiOQfF
ciQdbqVD+I3Loz8fVpJ04M2F8O2SxdfX35NwuFcI4X/1nP/Fc76Eg08ZhL8C
pDxVwiGiCsIPmyEsy2Ug4cBQB+FD4kvCAQDO/8Wx
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{2.329721377279043, 8.}, {6.017220663654484, 7.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzbBU8ZvLYiYHBjBQcCi2lz5xxJfZwb1qtl/1WXmH
FYkRwoJSLA6X35149WmCvMNc7pvXNTlYHRbFdlxJ85J3CLCdK8ovweaw8dhN
7us/5RyOfVty5oAnuwOz1t4JzvPlHH6Zf/hjN5fDYUa7UfIaKzmH9wz1yzqF
uBzy7ls2C56RdVgSGHhywUpuhw7Dyx+KgmUdJLXSU1uSeB0e1f5bfeGCjMOU
jWdac7/xOiy2Zr76br6Mg/iZtW/fV/A5LJVLuyqeJeOwoJJrLvcrPodHaupr
vfVlHLR3PZp8wJPfITbELabrvbTD3l6zS3wz+B0klh9+dHmVtEPwF9aIb1f4
Hfjk5ztoJEo7fC9bMcmaQcDBZc+N0nYhaQePvdxzPXgFHLbXFTR93CflIHVW
x3uRoIBDehoISDn8Pwjhm5Z9/PWcV8qhfTuE/2+Dh2TFLkmHjWsh/CNiOQfF
ciQdapdA+I3Loz8fVpJ0eDMbwrdLFl9ff0/C4e9kCP+r5/wvnvMlHDb2QPgr
QMpTJRw42iD8sBnCslwGEg4MDRA+JL4kHABe4q/t
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwtkutLUwEAR6973uu2pjb3cM4paoHQYklChfoz56NkMxfli0QSYzrFnElg
shQnOutDrtQS0dSkMtOllsygRjotzSyIQWhO7WUlCmZaMKGMDhzOP3CCThdp
c2kEQYT+dbtEV9CGqpMG4h+B+G2p413+TEOwVOnnMy1HXuuk+UA4HTEGuUTT
JEfy+Md8tZmODOakeyBNjm6e0zq+RIfubbgjdqccF4rbMu+kMGBwpRu2xgLw
bA361REGzu2KZCyUBMBYP+xqiWbi7N33ZSuSAPSruTbrKBO5ukPOUJsMGbsj
NsOOs6DNOSmsSZFhz9GKFMsgC5UG/XA7U4Zyc6fE5MlG1xI1tT7kD9WntmTi
BBt2h1JTofNHzanSH6xrbLykPkSqRP6IWwtmXh9n49WgrAWjUpR33jMNrLLh
GFvQlRZJoSjmGtK5JB5E7721KJYiIzN+yiwjYZGzNLV2PxDFaY2qYBLNN7aR
oNR2OFUfRiJB3+DDhwTeebRmVzSJ/u9Rc2VfxXh9sSmrPYfEjF+je7ZBjIdb
Hl3WBhL2X82F++PEeLIYU8hzksiuVitNmyIsK1KHhkIo2O33E170iBC1GFPV
V0lhpvuxlZErwiO3x5v1ZQoDsecLIgJF0Bqbbtac8UTipfmyrDkhqkY9f7qO
cDCtvn2sv0CIlcS6KwoZF17fvtA4dCEsHGFJyTwXVHZHva7dF3pub0vvVR6G
+5zuiQRfGJO0vPmIHQh5Z1Lt2xBg4jnNwZ7YgfjZHl1rjwAa09ORUDUfQTZN
Hl8vAMdYSx208zFYlB9frRSAmFEkdXh7/f9HgD9e2uox
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxNkmlIkwEYx4dXOc29e9+p002nH0qjtlJSg0r+5BVpsoZ4BCZp0nSzyzIx
pyIWqXmMWuUkyaNA80yhPLDLg3mRpjavWcubIe6LpUk2Wx/68X94+H144OHh
cY29Ioo3odFoAkPtdNpz13X/ShPQ/uKCLL3zkuC1KR50uQ7UDPCwKmjyrLc0
hxlb+7WxgIegaPXYB6UFhJvwJf14yEt/OCxN3I1kie/ckM4Zbffn99am0nFd
MjmykOeM8YL+kaxua4RssujnnJwxkxmoXhEyQGOv5rpXOUHscYBzcw8TRV3x
IhHPCRGlspS3chI/t2/HfSnkIrJManVWS+LlkMJ7SMLF3cpoO/F+Cj4RjtOC
k1zM1Agfm12i8KTEMmyDyUVMS0DhvlIKg4q4Mv4UB/R3x38NdlNQB7u39z/l
QDvopdlcoNDeHlHzOYqDuZnDPnW/KdyY10sCGBwQa3yLeWsWTFXr2y6djlAe
4QdXMFlQluzggKTTRl9+4GuIAxgXjH608LshbGSkGj333g5stBUbfSKbr87m
s9FTbXR32YibbMQezz4aPfXWDvYI0hi99xrXEHt0bBjdXvrezhBkhQv+28cW
RdzWFRsbFtISFCQDtrjsFaUKM2UhY85Xk7ZsmCu3WUzWU6iiP9qaVrCQHzPh
J1VT0E0pk7wCWBi42jp74g2F8MgzHjk/KEyO1rctFVPQZtYFqWopNOe3jkpj
KchF7Y1m8RQiFRP8voMUYj+lSL1dKKj0Nj20NRLhG7Np5zUkvs2OlYZlkMic
fCF8JSUhqLQLrWOR6JUvmliZkmg4NjxNb2aCz6uQi8uZuFhtfiopiomG7PGt
viAmQnXNRaO7mBB25Ph7rhOQmk03o5MAMVArLqsl0KmXtTSlE9A1hSYwJAQC
Wkrkbn4ElpISA+94EKCFHDLch/j3zwT+AB9gLcw=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwBYQKe/SFib1JlAgAAACUAAAACAAAAAKUh9kSjAkAAAAAAAAAgQPdrBMsZ
hQJARSxx9brPH0AIbmnge2MCQMq2H4bxmR9AMqtQNms+AkCOnwuyo14fQHMj
usznFQJAjOY0edEdH0DN1qWj8ekBQMmLm9t61x5AQMUTu4i6AUBEjz/Zn4se
QMruAxOthwFA/PAgckA6HkBuU3arXlEBQPOwP6Zc4x1AKfNqhJ0XAUAmz5t1
9IYdQBYI4h9V5ABAD7tvitgvHUAPdqU/FbcAQDEwTcRG2BxAEj21492PAECQ
LjQjP4AcQB9dEQyvbgBAI7Ykp8EnHEA41rm4iFMAQPLGHlDOzhtAWqiu6Wo+
AED5YCIeZXUbQIfT755VLwBAOoQvEYYbG0C+V33YSCYAQLQwRikxwRpAAEtX
lkQjAECamZmZmZkZQAQlj377HgBA8T1/4A0/GUCBnzY3IBIAQFk25hV25RhA
8HSbgGX5/z/Ugs450owYQM/rqDNmvf8/XSM4TCI1GECho5WHQnD/P/YXI01m
3hdAZpxhfPoR/z+iYI88nogXQB7WDBKOov4/Xf18GsozF0DJUJdI/SH+Pynu
6+bp3xZAZgwBIEiQ/T8FM9yh/YwWQGk/KPSH2/w/Rfgby2UsFkC3PC2oBjL8
P5M8qWzQ0RVAUAQQPMST+z/s/4OGPX0VQDKW0K/AAPs/UEKsGK0uFUBg8m4D
/Hj6P8IDIiMf5hRA2BjrNnb8+T9AROWlk6MUQJoJRUovi/k/yAP2oApnFECp
xHw9JyX5P15CVBSEMBRAAEqSEF7K+D8AAAAAAAAUQN0T9CA=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQzcCgaOi9aKI9mMkg45CuLwfmr0x/8+jreWmHH0LS
YH7kEh6bu7OkHVavEgfzebYlcG9LkHZo/SYM5h+e8yKgQVHaoeUbP5jfEAHS
IAVUzw3mO7ycbPdyspTDdyF2MJ/Ff/uzdlcph0x9JjD/bCcfq8QnSQcGhr8G
IP6smSAg6WDR9xXMB2u3k3Toe/wSzLfoewxEEkD1t8D8zg4QkADKHwXzbzbp
3mjSlXCw7FsL5mvUXlKvvSQOVD8RzK8oBwFxhycWBWD+8UIZIALxvcF88ZyD
YkDkwNBwQB/hHlEH0bTp+gj3iDowHi4C8y3B7hFxODQtSB/hHhGHiIdm+gj3
iDgcWSSvj3CPsAPbbR59hHuEHWS7/ukh3CPswLXhix7CPUIOZ33eg/lpYCDk
kG39Bsw3Kfv46zmvkMOrsJdg/t8NHpIVuwQdvOc/A/MPgXyTI+jQI/IEzG9a
Hv35sJKgw7ptD8F8u2Tx9fX3BBw2tN4H8794zgciAYepjXfB/BUg5akCDlGr
boP5YTOEZbkMBEDhr4dIPwIOAPin88k=
          "]], 0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{-0.9827793360590249, 7.}, {1.0172206635687644`, 6.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{1.0172206635687644`, 6.}, {1.549406113369173, 5.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{6.017220663654484, 7.}, {4.017220663634362, 6.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{4.017220663634362, 6.}, {4.017220663771468, 5.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{4.017220663771468, 5.}, {4.017220663797161, 4.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{4.017220663797161, 4.}, {2.0172206638286525`, 3.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{1.549406113369173, 5.}, {0.017220663771240652`, 4.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzeA1SSDu1A97BjAQcfibtbLpetIP+/RpZxTjzgs7
1CYnKbC/+27vH99rXjdD2KHKeO/LN9nf7bdFOTkmRAs7fL21817HnW/2czpe
27FICDt8iIz4f8v+mz3Tyw6DrHNCDtkbZng/nvrV/nm1lNikOiGHlHtVhxfe
+2Lv47jgfbWGkMO9x//SxKS+2BtYSu1VPyPocO2Aipmjx2f7KckddVMzBR22
RyYWb132yd7X2WvhYglBhxvcl4W0JT7ZNzWccWw6JuBgcb1SZNGcj/ZG0vwJ
hsUCDld3h1ZImXy0jxYW+rNBTsBh0840uyn3PtgzXVqlzTSJ3+HchTVp/HM+
2LtYbIpyfsLnoMGo8bE754N9daRVq6oJn8Mhrxt3OQM+2K8ydV69opHXYdba
vTqdbh/sz54BAR6H9rkQfvqbR1/PS/M4xPVB+L8SJxp9KOF2UGqA8Ft0bzTp
3uByuFAE4bP4b3/W7srlkJUG4Vcf04v7v4fT4X0UhP9qst3LyXacDnEBED5Y
+SkOh11uEP4aA3UrkQQOBwY7CB8SXxwOAIa9x/M=
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzeA1SSDu1A97BjAQcQgpqbVVV/1pL7Bn9evq88IO
Ji1uXvrdP+2/fuWM/zpD2GF+5Vuzsj8/7deslYrKiRF2mBZSxPyn4pe9yeO7
dx5ICjtIil5df4Dht/2EacHPgy4KOWjsFrU5Mvm3/f7j1ZWHmoQcDrmZrGAz
+mN/oCxssr6ekMOL7QZf2m//sZ+y+LHJrMuCDjP4uBU8Jvy1t/JTjmMqFnTw
tFrk8Vfxn/3GtcKSYgqCDrcmSwj1Lfpn/21r01PTMwIO3tJ5Nb8E/9tzpRcc
TiwXcJhxYVG7U8F/+1cH7myaqSjgcGzzNuO0vf/tTdr703dP5Xe4cmRlQ+rP
//YG95J6op/xOdxntDNXEGJwONFmfEXYlM/Bdce0ut9yDA5/GxjtnzTyOsxi
jZ/moszgcPYMCPA4bJOF8NPfPPp6XprHocgEwv+VONHoQwm3wzlPCL9F90aT
7g0uh+OxED6L//Zn7a5cDokFEH71Mb24/3s4HWY1QvivJtu9nGzH6VA0EcIH
Kz/F4fByPoS/xkDdSiSBw4FhLYQPiS8OBwBEz7wj
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJwlkFtIUwEAhs9u55zpmtNZidWWzWFemJhZI9T9yYIpRdOwmEtH27EkRC00
Cy8pRl7JGik2sxAzWmSZTkxZZFhZZoXaZFYPYqU9mCJouRyW2gc/38P39gcY
s5PS2QRByFe3ZiLBLEobXFIR6/iikXK0MPMuld++OGXfOzFe1Sl3CLXLKvGs
6RppFqNwwV6dMuVWzW9J9xw9KEafzDgRb1tRPeo/cFe+4oM33r6i2eMEtN95
xpVWHyxdKG+tKGBhtKQ1NlXtg6yE6vaFLjaU9YHRcePeCCuTRuwScHFRXpbS
xngjPFAdtL+Yh3uK5zduTYlwZtnw95iARGN4Z2zwYxGixvrPdleSyHJor2jy
Rci3ZZcafpGQbLdUuJWrvd4Uqk2ikCyV6KtmvJBXcDunsolCiMbwR53mhUhG
lujppNDb+3t254AQOdq5IQeLBi9/WrknSIgwcL798KchKFI4M4s3wOJvqFfL
aESu44mv6bmObVtpxIyGyCUlHhhKtZmtJA3pYJF9cYSPZLb0/fQkBefmMFdP
KB/nj9jKne0UGHvU59NVNGITc58V5FB43W0x0nMUmpfT8oYDKHA89LVmHYU7
SbnW8RckfDvPneAPklAftemv60i4O346M0HiEimtYU3w0MPvW7TbeXj59sFe
q5uLqIFDzcw4F/ExipspwVyURHzgbSK5EOpbejae5KBBo5YNx3Eglguufupg
o1DQ5qqrZUPXmCG1erGhKOJXMjMsTD59cqq0kIWHFt1wtI6F+zXuDJOLgJtp
GpGMEeiidssOXybg9+VjjYeJABG+9s+q/4N/k6vkvQ==
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{0.017220663771240652`, 4.}, {1.017220663797957, 3.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[BezierCurveBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzWC3V6fT7YM9AxhwOIQLQvgh528cfT2f3eHX/T1g
/iYPyYpdpuwOr1ZC+OI5B8VyDrI5qOVD+G2WFxcyOLM5rNOH8P9uAGlgdWh+
vRvMr7ukXntJndVh6SIIn2Ne3ln+bhYH4VAIf6awLJfBE2aHs0wQvokxCDA7
fLs7jbXN/4N9fLBusWkdk8NWCe0JNVkf7Becav8SdJrRgW1z+Zmc6R/sf81w
2t4txejwck3NrrBrH+wz98Xuvp/N4JDAZhVlpf7R/mHpJsZ5df/ts/evXy3e
9dFeTjaLf7PmP3uOG3fXvfv30b6z6NH8fzf+2FsEHEne3/rJXqlMenNDz2/7
P+rJpzrlPtu/VBf1tHT5Zb9y2S+te/c/20+dd9u5YN8Pe3eWGF/hqV/sE/In
vxAP/G5/3aHdUNPuq737LBtzgz9f7cNjaq7L3/5q7yF/XX/n/i/2p8Ks7b9n
f7NP+5d0adPsz/Z6Bkcy1n/4Zr/I/IGc7IRP9k0vxEI8Mr/b/zrlJ/pjzkf7
k/XGjIeufrcv2LFuq/MhYDx9kyyQMfsBja8P9gCzBtFM
          "]], 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.0172206638286525`, 3.}, {2.017220663814328, 2.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], 
         ArrowBox[{{2.017220663814328, 2.}, {1.5132107142411542`, 1.}}, 
          0.4969538747381295]}, 
        {RGBColor[
          Rational[167, 255], 
          Rational[167, 255], 
          Rational[167, 255]], Dashing[{Small, Small}], 
         ArrowBox[{{1.5132107142411542`, 1.}, {1.0115133763476933`, 0.}}, 
          0.4969538747381295]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[71, 255], 
            Rational[182, 255], 
            Rational[109, 255]], EdgeForm[None], 
           PolygonBox[{{-0.4677210600105338, 52.84409314564778}, {0., 
            52.53227893998947}, {0.4677210600105338, 52.84409314564778}, {
            0.4677210600105338, 53.46772106001053}, {-0.4677210600105338, 
            53.46772106001053}, {-0.4677210600105338, 52.84409314564778}}]},
          "\"Axiom 1\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Axiom 1", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[146, 255], 
            Rational[10, 17], 0], EdgeForm[None], 
           PolygonBox[{{0.5132107142410405, 0.4445795018989295}, {
            1.068631212342111, 1.}, {0.5132107142410405, 
            1.5554204981010704`}, {-0.04220978386003005, 1.}, {
            0.5132107142410405, 0.4445795018989295}}]},
          "\"Hypothesis 1\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Hypothesis 1", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-5.502802971236179, 
            43.558029505943445`}, {-6.058223469337249, 
            42.596015759194}, {-4.947382473135108, 
            42.596015759194}, {-5.502802971236179, 43.558029505943445`}}]},
          "\"Critical Pair Lemma 1\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 1", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.5028029708405484, 
            52.558029505943445`}, {-1.0582234689416188`, 51.596015759194}, {
            0.05261752726052216, 51.596015759194}, {-0.5028029708405484, 
            52.558029505943445`}}]},
          "\"Critical Pair Lemma 2\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 2", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-7.502802973822895, 
            50.558029505943445`}, {-8.058223471923966, 
            49.596015759194}, {-6.947382475721825, 
            49.596015759194}, {-7.502802973822895, 50.558029505943445`}}]},
          "\"Critical Pair Lemma 3\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 3", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-2.1744440616105294`, 
            51.558029505943445`}, {-2.7298645597116, 
            50.596015759194}, {-1.619023563509459, 
            50.596015759194}, {-2.1744440616105294`, 51.558029505943445`}}]},
          "\"Critical Pair Lemma 4\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 4", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-1.174444061833242, 50.}, 0.4969538747381295]},
          "\"Substitution Lemma 1\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 1", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-0.5633535313096445, 49.}, 0.4969538747381295]},
          "\"Substitution Lemma 2\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 2", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.4971970311956966`, 51.558029505943445`}, {
            1.9417765330946262`, 50.596015759194}, {3.052617529296767, 
            50.596015759194}, {2.4971970311956966`, 51.558029505943445`}}]},
          "\"Critical Pair Lemma 5\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 5", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.8455262083181196, 50.}, 0.4969538747381295]},
          "\"Substitution Lemma 3\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 3", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.8455262082917443, 49.}, 0.4969538747381295]},
          "\"Substitution Lemma 4\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 4", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-6.502802974026736, 
            48.558029505943445`}, {-7.058223472127806, 
            47.596015759194}, {-5.947382475925665, 
            47.596015759194}, {-6.502802974026736, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 6\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 6", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{12.497197031744463`, 48.558029505943445`}, {
            11.941776533643392`, 47.596015759194}, {13.052617529845534`, 
            47.596015759194}, {12.497197031744463`, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 7\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 7", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{0.6806891125240782, 48.558029505943445`}, {
            0.12526861442300763`, 47.596015759194}, {1.2361096106251486`, 
            47.596015759194}, {0.6806891125240782, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 8\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 8", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.5633535313648963, 
            48.558029505943445`}, {-1.1187740294659667`, 
            47.596015759194}, {-0.007933033263825773, 
            47.596015759194}, {-0.5633535313648963, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 9\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 9", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.845526208242518, 48.558029505943445`}, {
            2.2901057101414475`, 47.596015759194}, {3.4009467063435883`, 
            47.596015759194}, {2.845526208242518, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 10\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 10", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{6.497197031734345, 48.558029505943445`}, {
            5.941776533633274, 47.596015759194}, {7.052617529835415, 
            47.596015759194}, {6.497197031734345, 48.558029505943445`}}]},
          "\"Critical Pair Lemma 11\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 11", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{0.4971970293404411, 
            43.558029505943445`}, {-0.05822346876062945, 42.596015759194}, {
            1.0526175274415115`, 42.596015759194}, {0.4971970293404411, 
            43.558029505943445`}}]},
          "\"Critical Pair Lemma 12\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 12", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-10.502802974436122`, 
            47.558029505943445`}, {-11.058223472537193`, 
            46.596015759194}, {-9.94738247633505, 
            46.596015759194}, {-10.502802974436122`, 47.558029505943445`}}]},
          "\"Critical Pair Lemma 13\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 13", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-6.502802974515248, 
            47.558029505943445`}, {-7.058223472616318, 
            46.596015759194}, {-5.947382476414178, 
            46.596015759194}, {-6.502802974515248, 47.558029505943445`}}]},
          "\"Critical Pair Lemma 14\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 14", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-4.502802973318012, 
            47.558029505943445`}, {-5.058223471419082, 
            46.596015759194}, {-3.9473824752169415`, 
            46.596015759194}, {-4.502802973318012, 47.558029505943445`}}]},
          "\"Critical Pair Lemma 15\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 15", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{4.4971970297225425`, 47.558029505943445`}, {
            3.941776531621472, 46.596015759194}, {5.052617527823613, 
            46.596015759194}, {4.4971970297225425`, 47.558029505943445`}}]},
          "\"Critical Pair Lemma 16\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 16", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-3.5028029721611347`, 
            47.558029505943445`}, {-4.058223470262205, 
            46.596015759194}, {-2.9473824740600643`, 
            46.596015759194}, {-3.5028029721611347`, 47.558029505943445`}}]},
          "\"Critical Pair Lemma 17\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 17", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{9.497197030995835, 46.558029505943445`}, {
            8.941776532894764, 45.596015759194}, {10.052617529096906`, 
            45.596015759194}, {9.497197030995835, 46.558029505943445`}}]},
          "\"Critical Pair Lemma 18\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 18", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{5.497197030123743, 46.558029505943445`}, {
            4.941776532022673, 45.596015759194}, {6.052617528224814, 
            45.596015759194}, {5.497197030123743, 46.558029505943445`}}]},
          "\"Critical Pair Lemma 19\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 19", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.497197029099084, 46.558029505943445`}, {
            0.9417765309980134, 45.596015759194}, {2.0526175272001543`, 
            45.596015759194}, {1.497197029099084, 46.558029505943445`}}]},
          "\"Critical Pair Lemma 20\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 20", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.4971970316349825, 45.}, 0.4969538747381295]},
          "\"Substitution Lemma 5\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 5", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{4.4971970316237275`, 45.558029505943445`}, {
            3.941776533522657, 44.596015759194}, {5.052617529724798, 
            44.596015759194}, {4.4971970316237275`, 45.558029505943445`}}]},
          "\"Critical Pair Lemma 21\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 21", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{8.497197030613165, 45.558029505943445`}, {
            7.941776532512095, 44.596015759194}, {9.052617528714237, 
            44.596015759194}, {8.497197030613165, 45.558029505943445`}}]},
          "\"Critical Pair Lemma 22\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 22", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{8.497197031953078, 44.}, 0.4969538747381295]},
          "\"Substitution Lemma 6\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 6", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.5028029699442413, 
            42.558029505943445`}, {-1.0582234680453118`, 41.596015759194}, {
            0.052617528156829185`, 41.596015759194}, {-0.5028029699442413, 
            42.558029505943445`}}]},
          "\"Critical Pair Lemma 23\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 23", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{3.4971970319130605`, 44.558029505943445`}, {
            2.94177653381199, 43.596015759194}, {4.052617530014131, 
            43.596015759194}, {3.4971970319130605`, 44.558029505943445`}}]},
          "\"Critical Pair Lemma 24\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 24", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.4971970321109893, 43.}, 0.4969538747381295]},
          "\"Substitution Lemma 7\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 7", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.9117616010537404, 41.}, 0.4969538747381295]},
          "\"Substitution Lemma 8\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 8", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{7.4971970314391, 45.558029505943445`}, {
            6.94177653333803, 44.596015759194}, {8.052617529540171, 
            44.596015759194}, {7.4971970314391, 45.558029505943445`}}]},
          "\"Critical Pair Lemma 25\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 25", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-2.502802971058145, 
            46.558029505943445`}, {-3.0582234691592154`, 
            45.596015759194}, {-1.9473824729570746`, 
            45.596015759194}, {-2.502802971058145, 46.558029505943445`}}]},
          "\"Critical Pair Lemma 26\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 26", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-3.5028029706674033`, 
            45.558029505943445`}, {-4.058223468768474, 
            44.596015759194}, {-2.947382472566333, 
            44.596015759194}, {-3.5028029706674033`, 45.558029505943445`}}]},
          "\"Critical Pair Lemma 27\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 27", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-1.502802970808716, 
            44.558029505943445`}, {-2.0582234689097865`, 
            43.596015759194}, {-0.9473824727076455, 
            43.596015759194}, {-1.502802970808716, 44.558029505943445`}}]},
          "\"Critical Pair Lemma 28\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 28", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-2.502802970827588, 
            44.558029505943445`}, {-3.0582234689286585`, 
            43.596015759194}, {-1.9473824727265177`, 
            43.596015759194}, {-2.502802970827588, 44.558029505943445`}}]},
          "\"Critical Pair Lemma 29\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 29", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-3.5028029706821826`, 
            44.558029505943445`}, {-4.058223468783253, 
            43.596015759194}, {-2.947382472581112, 
            43.596015759194}, {-3.5028029706821826`, 44.558029505943445`}}]},
          "\"Critical Pair Lemma 30\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 30", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-3.502802970788707, 
            43.558029505943445`}, {-4.058223468889778, 
            42.596015759194}, {-2.9473824726876368`, 
            42.596015759194}, {-3.502802970788707, 43.558029505943445`}}]},
          "\"Critical Pair Lemma 31\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 31", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-2.5028029709316115, 42.}, 0.4969538747381295]},
          "\"Substitution Lemma 9\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 9", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-0.5028029702885988, 41.}, 0.4969538747381295]},
          "\"Substitution Lemma 10\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 10", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-0.5028029700770276, 40.}, 0.4969538747381295]},
          "\"Substitution Lemma 11\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 11", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.5028029698629553, 
            39.558029505943445`}, {-1.0582234679640257`, 38.596015759194}, {
            0.052617528238115274`, 38.596015759194}, {-0.5028029698629553, 
            39.558029505943445`}}]},
          "\"Critical Pair Lemma 32\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 32", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{3.4971970308686195`, 38.558029505943445`}, {
            2.941776532767549, 37.596015759194}, {4.05261752896969, 
            37.596015759194}, {3.4971970308686195`, 38.558029505943445`}}]},
          "\"Critical Pair Lemma 33\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 33", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{0.4971970300874773, 
            38.558029505943445`}, {-0.05822346801359324, 37.596015759194}, {
            1.0526175281885477`, 37.596015759194}, {0.4971970300874773, 
            38.558029505943445`}}]},
          "\"Critical Pair Lemma 34\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 34", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.4971970309078415`, 37.558029505943445`}, {
            1.941776532806771, 36.596015759194}, {3.052617529008912, 
            36.596015759194}, {2.4971970309078415`, 37.558029505943445`}}]},
          "\"Critical Pair Lemma 35\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 35", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.4971970308939717`, 36.558029505943445`}, {
            1.9417765327929013`, 35.596015759194}, {3.052617528995042, 
            35.596015759194}, {2.4971970308939717`, 36.558029505943445`}}]},
          "\"Critical Pair Lemma 36\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 36", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{3.4971970309151175`, 37.558029505943445`}, {
            2.941776532814047, 36.596015759194}, {4.052617529016188, 
            36.596015759194}, {3.4971970309151175`, 37.558029505943445`}}]},
          "\"Critical Pair Lemma 37\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 37", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{4.497197031051428, 36.}, 0.4969538747381295]},
          "\"Substitution Lemma 12\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 12", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{4.497197031040287, 35.558029505943445`}, {
            3.9417765329392163`, 34.596015759194}, {5.052617529141357, 
            34.596015759194}, {4.497197031040287, 35.558029505943445`}}]},
          "\"Critical Pair Lemma 38\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 38", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{4.497197030979692, 34.}, 0.4969538747381295]},
          "\"Substitution Lemma 13\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 13", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.497197031027781, 33.}, 0.4969538747381295]},
          "\"Substitution Lemma 14\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 14", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.4971970310650704, 32.}, 0.4969538747381295]},
          "\"Substitution Lemma 15\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 15", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-1.5028029688515971, 26.}, 0.4969538747381295]},
          "\"Substitution Lemma 16\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 16", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{6.497197031092469, 33.}, 0.4969538747381295]},
          "\"Substitution Lemma 17\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 17", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.5028029688596689, 
            31.558029505943445`}, {-1.0582234669607393`, 
            30.596015759194007`}, {0.05261752924140162, 
            30.596015759194007`}, {-0.5028029688596689, 
            31.558029505943445`}}]},
          "\"Critical Pair Lemma 39\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 39", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{0.49719703114658387, 30.}, 0.4969538747381295]},
          "\"Substitution Lemma 18\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 18", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.497197031161704, 29.}, 0.4969538747381295]},
          "\"Substitution Lemma 19\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 19", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.0249056296723893, 28.}, 0.4969538747381295]},
          "\"Substitution Lemma 20\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 20", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{5.497197031111455, 31.}, 0.4969538747381295]},
          "\"Substitution Lemma 21\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 21", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.4971970311047471, 30.}, 0.4969538747381295]},
          "\"Substitution Lemma 22\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 22", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.2273220293798204`, 27.558029505943445`}, {
            1.67190153127875, 26.596015759194007`}, {2.782742527480891, 
            26.596015759194007`}, {2.2273220293798204`, 
            27.558029505943445`}}]},
          "\"Critical Pair Lemma 40\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 40", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.227322029438483, 27.}, 0.4969538747381295]},
          "\"Substitution Lemma 23\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 23", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.3585953735815792, 26.}, 0.4969538747381295]},
          "\"Substitution Lemma 24\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 24", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-0.502802968616038, 
            25.558029505943445`}, {-1.0582234667171084`, 
            24.596015759194007`}, {0.05261752948503251, 
            24.596015759194007`}, {-0.502802968616038, 25.558029505943445`}}]},
          "\"Critical Pair Lemma 41\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 41", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-1.5028029686789068`, 
            25.558029505943445`}, {-2.0582234667799773`, 
            24.596015759194007`}, {-0.9473824705778363, 
            24.596015759194007`}, {-1.5028029686789068`, 
            25.558029505943445`}}]},
          "\"Critical Pair Lemma 42\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 42", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-1.8608945495807347`, 
            24.558029505943445`}, {-2.416315047681805, 
            23.596015759194007`}, {-1.3054740514796643`, 
            23.596015759194007`}, {-1.8608945495807347`, 
            24.558029505943445`}}]},
          "\"Critical Pair Lemma 43\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 43", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-4.302836216515061, 20.}, 0.4969538747381295]},
          "\"Substitution Lemma 25\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 25", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-2.860894549566524, 
            24.558029505943445`}, {-3.4163150476675943`, 
            23.596015759194007`}, {-2.3054740514654535`, 
            23.596015759194007`}, {-2.860894549566524, 24.558029505943445`}}]},
          "\"Critical Pair Lemma 44\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 44", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-3.502802969022241, 
            23.558029505943445`}, {-4.0582234671233115`, 
            22.596015759194007`}, {-2.9473824709211707`, 
            22.596015759194007`}, {-3.502802969022241, 23.558029505943445`}}]},
          "\"Critical Pair Lemma 45\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 45", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{-2.502802968926744, 
            23.558029505943445`}, {-3.0582234670278146`, 
            22.596015759194007`}, {-1.9473824708256737`, 
            22.596015759194007`}, {-2.502802968926744, 23.558029505943445`}}]},
          "\"Critical Pair Lemma 46\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 46", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-2.502802969140248, 22.}, 0.4969538747381295]},
          "\"Substitution Lemma 26\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 26", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.4971970321042818`, 21.558029505943445`}, {
            0.9417765340032113, 20.596015759194007`}, {2.052617530205352, 
            20.596015759194007`}, {1.4971970321042818`, 
            21.558029505943445`}}]},
          "\"Critical Pair Lemma 47\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 47", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.4971970320100354, 20.}, 0.4969538747381295]},
          "\"Substitution Lemma 27\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 27", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.017220663882881, 19.}, 0.4969538747381295]},
          "\"Substitution Lemma 28\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 28", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.0172206638794705, 18.}, 0.4969538747381295]},
          "\"Substitution Lemma 29\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 29", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.0172206639261958`, 17.558029505943445`}, {
            0.4618001658251253, 16.596015759194007`}, {1.5726411620272662`, 
            16.596015759194007`}, {1.0172206639261958`, 
            17.558029505943445`}}]},
          "\"Critical Pair Lemma 48\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 48", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.0172206638148964, 16.}, 0.4969538747381295]},
          "\"Substitution Lemma 30\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 30", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.017220663584453, 15.}, 0.4969538747381295]},
          "\"Substitution Lemma 31\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 31", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.017220663620492, 14.558029505943445`}, {
            0.4618001655194214, 13.596015759194005`}, {1.5726411617215623`, 
            13.596015759194005`}, {1.017220663620492, 14.558029505943445`}}]},
          
          "\"Critical Pair Lemma 49\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 49", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.0172206638852686, 13.}, 0.4969538747381295]},
          "\"Substitution Lemma 32\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 32", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{3.0172206638635544, 12.}, 0.4969538747381295]},
          "\"Substitution Lemma 33\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 33", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.017220664093884, 11.558029505943445`}, {
            0.46180016599281337`, 10.596015759194005`}, {1.5726411621949543`, 
            10.596015759194005`}, {1.017220664093884, 11.558029505943445`}}]},
          
          "\"Critical Pair Lemma 50\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 50", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.3871335086894305, 10.}, 0.4969538747381295]},
          "\"Substitution Lemma 34\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 34", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.3871335086988665, 9.}, 0.4969538747381295]},
          "\"Substitution Lemma 35\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 35", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.329721377279043, 8.}, 0.4969538747381295]},
          "\"Substitution Lemma 36\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 36", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{0.017220663903799505, 7.}, 0.4969538747381295]},
          "\"Substitution Lemma 37\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 37", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{-0.9827793360590249, 7.}, 0.4969538747381295]},
          "\"Substitution Lemma 38\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 38", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.0172206635687644, 6.}, 0.4969538747381295]},
          "\"Substitution Lemma 39\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 39", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{6.017220663654484, 7.}, 0.4969538747381295]},
          "\"Substitution Lemma 40\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 40", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{4.017220663634362, 6.}, 0.4969538747381295]},
          "\"Substitution Lemma 41\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 41", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{4.017220663771468, 5.}, 0.4969538747381295]},
          "\"Substitution Lemma 42\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 42", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{4.017220663797161, 4.}, 0.4969538747381295]},
          "\"Substitution Lemma 43\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 43", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{1.549406113369173, 5.558029505943446}, {
            0.9939856152681025, 4.596015759194005}, {2.1048266114702434`, 
            4.596015759194005}, {1.549406113369173, 5.558029505943446}}]},
          "\"Critical Pair Lemma 51\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 51", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{0.017220663771240652, 4.}, 0.4969538747381295]},
          "\"Substitution Lemma 44\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 44", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.017220663797957, 3.}, 0.4969538747381295]},
          "\"Substitution Lemma 45\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 45", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[47, 51], 
            Rational[98, 255], 
            Rational[53, 255]], EdgeForm[None], 
           PolygonBox[{{2.0172206638286525`, 3.5580295059434457`}, {
            1.461800165727582, 2.596015759194005}, {2.572641161929723, 
            2.596015759194005}, {2.0172206638286525`, 3.5580295059434457`}}]},
          
          "\"Critical Pair Lemma 52\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Critical Pair Lemma 52", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{2.017220663814328, 2.}, 0.4969538747381295]},
          "\"Substitution Lemma 46\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 46", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[15, 17], 
            Rational[52, 85], 
            Rational[12, 85]], EdgeForm[None], 
           DiskBox[{1.5132107142411542, 1.}, 0.4969538747381295]},
          "\"Substitution Lemma 47\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Substitution Lemma 47", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {RGBColor[
            Rational[13, 15], 
            Rational[1, 15], 0], EdgeForm[None], 
           RectangleBox[{0.5730246341108804, -0.43848874223681283}, \
{1.4500021185845062, 0.43848874223681283}]},
          "\"Conclusion 1\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Conclusion 1", "Tooltip"]& ]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{191.20965076965047`, Automatic}]], "Output",
 CellChangeTimes->{3.7665095568465242`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"13f89600-1b54-434f-a53c-b59da9f712e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%24", "[", "\"\<ProofDataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7665095973840513`*^9, 3.7665096047494307`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"a8ad9b8d-aa9b-42ed-adab-ad48b158f683"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 10, "Length" -> 102, "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Tuple[{
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Axiom", "Conclusion", "CriticalPairLemma", "Hypothesis", 
              "SubstitutionLemma"]], 
            TypeSystem`Atom[Integer]}], 
          TypeSystem`Struct[{"Statement", "Proof"}, {TypeSystem`AnyType, 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 
             TypeSystem`AnyLength]}], 102], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, 
             TypeSystem`PackageScope`KeyDummy[0]} -> 2, {All, "Statement"} -> 
           1, {All, "Proof"} -> 2], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`RowShape[{
               TypeSystem`PackageScope`AtomShape[153.], 
               TypeSystem`PackageScope`AtomShape[34]}], 
             TypeSystem`PackageScope`RowShape[
              Association[
              "Statement" -> TypeSystem`PackageScope`UnknownShape, "Proof" -> 
               TypeSystem`PackageScope`Limited[
                 TypeSystem`PackageScope`ColumnShape[
                  TypeSystem`PackageScope`KeyValueShape[
                   TypeSystem`PackageScope`AtomShape[182.40000000000003`], 
                   TypeSystem`PackageScope`UnknownShape]], 2, {
                 All, "Proof"}]]]]], 10, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[680851158], "Type" -> 
        TypeSystem`Assoc[
          TypeSystem`Tuple[{
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "Axiom", "Conclusion", "CriticalPairLemma", "Hypothesis", 
              "SubstitutionLemma"]], 
            TypeSystem`Atom[Integer]}], 
          TypeSystem`Struct[{"Statement", "Proof"}, {TypeSystem`AnyType, 
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 
             TypeSystem`AnyLength]}], 102], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[680851158]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox["\"\"", FontColor -> GrayLevel[0.4]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    Style[
                    RawBoxes[
                    StyleBox[
                    "\"\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], Italic, 
                    GrayLevel[0.7]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2043829566][{All, Keys}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[All, Keys]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Statement\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Statement\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2043829566][{All, "Statement"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[All, "Statement"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Proof\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Proof\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    2043829566][{All, "Proof"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[All, "Proof"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Center, Baseline}], 
               SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Axiom", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"Axiom", 1}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"Axiom", 1}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}]}], "]"}]}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"Axiom", 1}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"Axiom", 1}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"Axiom", 1}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["Hypothesis", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"Hypothesis", 1}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"Hypothesis", 1}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{"b", ",", "a"}], "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"Hypothesis", 1}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Spacer[10], 
                    Style[
                    Spacer[10], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"Hypothesis", 1}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"Hypothesis", 1}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {
                  GrayLevel[0.5], 8}], SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["CriticalPairLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 1}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 1}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "q"}], "]"}], ",", "p"}], "]"}]}], 
                    "]"}], "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "q"}], "]"}], ",", "p"}], "]"}]}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"p", ",", "r"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], FontFamily -> "Source Code Pro", FontSize -> 
                   13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 1}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Construct", 
                    Style[
                    "Construct", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"], 
                    Key["Construct"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 1}], 
                   Key["Proof"], 
                   Key["Construct"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Orientation", 
                    Style[
                    "Orientation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"], 
                    Key["Orientation"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"], 
                    Key["Orientation"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 1}], 
                   Key["Proof"], 
                   Key["Orientation"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 1}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 1}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["CriticalPairLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 2}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 2}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "y1"}], "]"}], ",", "q"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "y1"}], "]"}], ",", "q"}], "]"}], ",", 
                    "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "y1"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 2}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Construct", 
                    Style[
                    "Construct", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"], 
                    Key["Construct"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 2}], 
                   Key["Proof"], 
                   Key["Construct"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Orientation", 
                    Style[
                    "Orientation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"], 
                    Key["Orientation"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"], 
                    Key["Orientation"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 2}], 
                   Key["Proof"], 
                   Key["Orientation"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 2}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 2}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["CriticalPairLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 3}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 3}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}], ",", "r"}], "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}], ",", "p"}], "]"}]}], "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 3}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Construct", 
                    Style[
                    "Construct", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"], 
                    Key["Construct"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{"Axiom", 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 3}], 
                   Key["Proof"], 
                   Key["Construct"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Orientation", 
                    Style[
                    "Orientation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"], 
                    Key["Orientation"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"], 
                    Key["Orientation"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 3}], 
                   Key["Proof"], 
                   Key["Orientation"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 3}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 3}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["CriticalPairLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 4}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 4}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "y1"}], "]"}], ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}]}], "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "y1"}], "]"}], ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 4}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Construct", 
                    Style[
                    "Construct", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"], 
                    Key["Construct"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"CriticalPairLemma", 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"CriticalPairLemma", 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 4}], 
                   Key["Proof"], 
                   Key["Construct"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Orientation", 
                    Style[
                    "Orientation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"], 
                    Key["Orientation"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"], 
                    Key["Orientation"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 4}], 
                   Key["Proof"], 
                   Key["Orientation"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 4}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 4}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["SubstitutionLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 1}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["1"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 1}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "y1"}], "]"}], ",", "r"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], FontFamily -> 
                   "Source Code Pro", FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 1}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Input", 
                    Style[
                    "Input", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Input"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"CriticalPairLemma", 4}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"CriticalPairLemma", 4}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 1}], 
                   Key["Proof"], 
                   Key["Input"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Position", 
                    Style[
                    "Position", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 1, 1, 2, 1, 2}, ShowStringCharacters -> False], 
                    
                    Style[
                    Style[{2, 1, 1, 2, 1, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 1}], 
                   Key["Proof"], 
                   Key["Position"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["6 total \:203a ", ""], 
                    Style[
                    Superscript["6 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 1}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 1}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["SubstitutionLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 2}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 2}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "r"}], "]"}], ",", "q"}], "]"}]}], 
                    "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "p"}], "]"}], ",", "r"}], "]"}]}], 
                    "]"}]}], "]"}]}], FontFamily -> "Source Code Pro", 
                   FontSize -> 13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 2}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Input", 
                    Style[
                    "Input", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Input"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"SubstitutionLemma", 1}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"SubstitutionLemma", 1}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 2}], 
                   Key["Proof"], 
                   Key["Input"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Position", 
                    Style[
                    "Position", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 1, 1, 2, 1, 2}, ShowStringCharacters -> False], 
                    
                    Style[
                    Style[{2, 1, 1, 2, 1, 2}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 2}], 
                   Key["Proof"], 
                   Key["Position"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["6 total \:203a ", ""], 
                    Style[
                    Superscript["6 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 2}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 2}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["CriticalPairLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 5}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 5}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "q"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "y2"}], "]"}], ",", "r"}], "]"}], ",", 
                    
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "r"}], "]"}], ",", "y1"}], "]"}]}], 
                    "]"}]}], "]"}], ",", "q"}], "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "y2"}], "]"}], ",", "r"}], "]"}], ",", 
                    
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "r"}], "]"}], ",", "y1"}], "]"}]}], 
                    "]"}]}], "]"}], ",", "q"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], FontFamily -> "Source Code Pro", FontSize -> 
                   13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 5}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Construct", 
                    Style[
                    "Construct", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"], 
                    Key["Construct"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"CriticalPairLemma", 2}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"CriticalPairLemma", 2}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"], 
                    Key["Construct"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 5}], 
                   Key["Proof"], 
                   Key["Construct"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Orientation", 
                    Style[
                    "Orientation", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"], 
                    Key["Orientation"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"], 
                    Key["Orientation"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes["-1"], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 5}], 
                   Key["Proof"], 
                   Key["Orientation"]]], "Mouse"], 
                ImageSize -> {{34, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["9 total \:203a ", ""], 
                    Style[
                    Superscript["9 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"CriticalPairLemma", 5}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"CriticalPairLemma", 5}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Pane[
                 Pane[
                  Annotation["SubstitutionLemma", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 3}], 1]], "Mouse"], 
                  ImageSize -> {{153., Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Pane[
                  Annotation[
                   RawBoxes["3"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   2043829566][
                    GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 3}], 2]], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 ImageSize -> {{60, Full}, Automatic}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"p", "\[Equal]", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"q", ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "q"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"r", ",", "q"}], "]"}], ",", "p"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "y2"}], "]"}], ",", "r"}], "]"}], ",", 
                    
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", 
                    RowBox[{"f", "[", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"y1", ",", "r"}], "]"}], ",", "y1"}], "]"}]}], 
                    "]"}]}], "]"}], ",", "q"}], "]"}]}], "]"}]}], "]"}]}], 
                    "]"}]}], FontFamily -> "Source Code Pro", FontSize -> 
                   13]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 3}], 
                   Key["Statement"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Input", 
                    Style[
                    "Input", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Input"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{"CriticalPairLemma", 5}, ShowStringCharacters -> 
                    False], 
                    Style[
                    
                    Style[{"CriticalPairLemma", 5}, ShowStringCharacters -> 
                    False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Input"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 3}], 
                   Key["Proof"], 
                   Key["Input"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["Position", 
                    Style[
                    "Position", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  2043829566][
                   GeneralUtilities`Slice[
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Position"]]], "Mouse"], 
                 ImageSize -> {{182.40000000000003`, Full}, Automatic}], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Style[{2, 2, 1, 1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2, 2, 1, 1}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"], 
                    Key["Position"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 3}], 
                   Key["Proof"], 
                   Key["Position"]]], "Mouse"]]}, {
              SpanFromAbove, SpanFromAbove, SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Superscript["6 total \:203a ", ""], 
                    Style[
                    Superscript["6 total \:203a ", ""], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][{
                    Key[{"SubstitutionLemma", 3}], 
                    Key["Proof"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
                  GeneralUtilities`Slice[
                   Key[{"SubstitutionLemma", 3}], 
                   Key["Proof"]]], "Mouse"], BaseStyle -> {{
                   RGBColor[
                   0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274], 8}, ContextMenu -> {
                    MenuItem["Show 1 more row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 more rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    Delimiter, 
                    MenuItem["Show 1 fewer row at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-1]& , {All, "Proof"}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show 5 fewer rows at this level", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, \
-5]& , {All, "Proof"}]], MenuEvaluator -> Automatic]}}, 
                Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]],
                SpanFromLeft}, {
               Item[
                Deploy[
                 Mouseover[
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-10), {1, 102 - -10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 102 - -10 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 102 - 10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 10, {1, 102 - 10 + 1}])}]}, "   "], 
                  Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 (-10), {1, 102 - -10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 10, {
                    1, 102 - -10 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 10, " of ", 
                    Style[
                    102, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 10, {
                    1, 102 - 10 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    102 10, {1, 102 - 10 + 1}])}]}, "   "]]], Background -> 
                GrayLevel[0.98], Alignment -> {Left, Top}, 
                BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
               SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
             BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 2043829566]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[2043829566][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {1224., {351.634033203125, 357.365966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.766509605539188*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"42fa4b0a-bfa1-41e2-bb5b-b4670ff3c99d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{Automatic, -21}, {Automatic, 37}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 198, 3, 98, "Title",ExpressionUUID->"1b3a1763-6e8c-4503-9537-afddfe18113c"],
Cell[CellGroupData[{
Cell[803, 29, 991, 28, 52, "Input",ExpressionUUID->"e83886df-07bf-46e8-9095-5607133b4e31"],
Cell[1797, 59, 261841, 6860, 79, "Output",ExpressionUUID->"274f03a6-a8f0-4513-a2eb-9f6ac773490f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263675, 6924, 218, 3, 30, "Input",ExpressionUUID->"f7a63d2a-2557-47d6-aa2f-e31033ec5cdf"],
Cell[263896, 6929, 308800, 6635, 410, "Output",ExpressionUUID->"13f89600-1b54-434f-a53c-b59da9f712e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572733, 13569, 224, 3, 30, "Input",ExpressionUUID->"a8ad9b8d-aa9b-42ed-adab-ad48b158f683"],
Cell[572960, 13574, 139771, 2773, 729, "Output",ExpressionUUID->"42fa4b0a-bfa1-41e2-bb5b-b4670ff3c99d"]
}, Open  ]]
}, Open  ]]
}
]
*)

